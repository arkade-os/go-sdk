{
  "openapi": "3.1.0",
  "info": {
    "title": "",
    "version": "version not set"
  },
  "paths": {
    "/v1/batch/ack": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "ConfirmRegistration allows a client that has been selected for the next batch to confirm its\nparticipation by revealing the intent id.",
        "operationId": "ArkService_ConfirmRegistration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ark.v1.ConfirmRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.ConfirmRegistrationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/deleteIntent": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "DeleteIntent removes a previously registered intent from the server.\nThe client should provide the BIP-322 signature and message including any of the vtxos used in\nthe registered intent to prove its ownership.\nThe server should delete the intent and return success.",
        "operationId": "ArkService_DeleteIntent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ark.v1.DeleteIntentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.DeleteIntentResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/events": {
      "get": {
        "tags": [
          "ArkService"
        ],
        "description": "GetEventStream is a server-side streaming RPC that allows clients to receive a stream of\nevents related to batch processing.\nClients should use this stream as soon as they are ready to join a batch and can listen for\nvarious events such as batch start, batch finalization, and other related activities.\nThe server pushes these events to the client in real-time as soon as its ready to move to the\nnext phase of the batch processing.",
        "operationId": "ArkService_GetEventStream",
        "parameters": [
          {
            "name": "topics",
            "in": "query",
            "style": "simple",
            "schema": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response. (streaming responses)",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.GetEventStreamResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/registerIntent": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "RegisterIntent allows to register a new intent that will be eventually selected by the server\nfor a particular batch.\nThe client should provide a BIP-322 message with the intent information, and the server should\nrespond with an intent id.",
        "operationId": "ArkService_RegisterIntent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ark.v1.RegisterIntentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.RegisterIntentResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/submitForfeitTxs": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "SubmitSignedForfeitTxs allows a client to submit signed forfeit transactions and/or signed\ncommitment transaction (in case of onboarding).\nThe server should verify the signed txs and return success.",
        "operationId": "ArkService_SubmitSignedForfeitTxs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ark.v1.SubmitSignedForfeitTxsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.SubmitSignedForfeitTxsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/tree/submitNonces": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "SubmitTreeNonces allows a cosigner to submit the tree nonces for the musig2 session of a given\nbatch.\nThe client should provide the batch id, the cosigner public key, and the tree nonces.\nThe server should verify the cosigner public key and the nonces, and store them for later\naggregation once nonces from all clients are collected.",
        "operationId": "ArkService_SubmitTreeNonces",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ark.v1.SubmitTreeNoncesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.SubmitTreeNoncesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/tree/submitSignatures": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "SubmitTreeSignatures allows a cosigner to submit the tree signatures for the musig2 session of\na given batch.\nThe client should provide the batch id, the cosigner public key, and the tree signatures.\nThe server should verify the cosigner public key and the signatures, and store them for later\naggregation once signatures from all clients are collected.",
        "operationId": "ArkService_SubmitTreeSignatures",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ark.v1.SubmitTreeSignaturesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.SubmitTreeSignaturesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/info": {
      "get": {
        "tags": [
          "ArkService"
        ],
        "description": "GetInfo returns information and parameters of the server.",
        "operationId": "ArkService_GetInfo",
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.GetInfoResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tx/finalize": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "FinalizeTx is the last lef of the process of spending vtxos offchain and allows a client to\nsubmit the fully signed checkpoint txs for the provided Ark txid .\nThe server verifies the signed checkpoint transactions and returns success if everything is\nvalid.",
        "operationId": "ArkService_FinalizeTx",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ark.v1.FinalizeTxRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.FinalizeTxResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tx/submit": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "SubmitTx is the first leg of the process of spending vtxos offchain and allows a client to\nsubmit a signed Ark transaction and the unsigned checkpoint transactions.\nThe server should verify the signed transactions and return the fully signed Ark tx and the\nsigned checkpoint txs.",
        "operationId": "ArkService_SubmitTx",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ark.v1.SubmitTxRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.SubmitTxResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/txs": {
      "get": {
        "tags": [
          "ArkService"
        ],
        "description": "GetTransactionsStream is a server-side streaming RPC that allows clients to receive\nnotifications in real-time about any commitment tx or ark tx processed and finalized by the\nserver.\nNOTE: the stream doesn't have history support, therefore returns only txs from the moment it's\nopened until it's closed.",
        "operationId": "ArkService_GetTransactionsStream",
        "responses": {
          "200": {
            "description": "a successful response. (streaming responses)",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ark.v1.GetTransactionsStreamResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ark.v1.BatchFailedEvent": {
        "title": "BatchFailedEvent",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "ark.v1.BatchFinalizationEvent": {
        "title": "BatchFinalizationEvent",
        "type": "object",
        "properties": {
          "commitmentTx": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ark.v1.BatchFinalizedEvent": {
        "title": "BatchFinalizedEvent",
        "type": "object",
        "properties": {
          "commitmentTxid": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ark.v1.BatchStartedEvent": {
        "title": "BatchStartedEvent",
        "type": "object",
        "properties": {
          "batchExpiry": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "intentIdHashes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ark.v1.Bip322Signature": {
        "title": "Bip322Signature",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          }
        }
      },
      "ark.v1.ConfirmRegistrationRequest": {
        "title": "ConfirmRegistrationRequest",
        "type": "object",
        "properties": {
          "intentId": {
            "type": "string"
          }
        }
      },
      "ark.v1.ConfirmRegistrationResponse": {
        "title": "ConfirmRegistrationResponse",
        "type": "object"
      },
      "ark.v1.DeleteIntentRequest": {
        "title": "DeleteIntentRequest",
        "type": "object",
        "properties": {
          "proof": {
            "$ref": "#/components/schemas/ark.v1.Bip322Signature",
            "description": "A BIP322 signature that includes any of the inputs of the intent to be deleted to prove the\nownership of that intent."
          }
        }
      },
      "ark.v1.DeleteIntentResponse": {
        "title": "DeleteIntentResponse",
        "type": "object"
      },
      "ark.v1.FinalizeTxRequest": {
        "title": "FinalizeTxRequest",
        "type": "object",
        "properties": {
          "arkTxid": {
            "type": "string"
          },
          "finalCheckpointTxs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ark.v1.FinalizeTxResponse": {
        "title": "FinalizeTxResponse",
        "type": "object"
      },
      "ark.v1.GetEventStreamRequest": {
        "title": "GetEventStreamRequest",
        "type": "object",
        "properties": {
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ark.v1.GetEventStreamResponse": {
        "title": "GetEventStreamResponse",
        "type": "object",
        "properties": {
          "batchFailed": {
            "$ref": "#/components/schemas/ark.v1.BatchFailedEvent"
          },
          "batchFinalization": {
            "$ref": "#/components/schemas/ark.v1.BatchFinalizationEvent"
          },
          "batchFinalized": {
            "$ref": "#/components/schemas/ark.v1.BatchFinalizedEvent"
          },
          "batchStarted": {
            "$ref": "#/components/schemas/ark.v1.BatchStartedEvent"
          },
          "heartbeat": {
            "$ref": "#/components/schemas/ark.v1.Heartbeat"
          },
          "treeNoncesAggregated": {
            "$ref": "#/components/schemas/ark.v1.TreeNoncesAggregatedEvent"
          },
          "treeSignature": {
            "$ref": "#/components/schemas/ark.v1.TreeSignatureEvent"
          },
          "treeSigningStarted": {
            "$ref": "#/components/schemas/ark.v1.TreeSigningStartedEvent"
          },
          "treeTx": {
            "$ref": "#/components/schemas/ark.v1.TreeTxEvent"
          }
        }
      },
      "ark.v1.GetInfoRequest": {
        "title": "GetInfoRequest",
        "type": "object"
      },
      "ark.v1.GetInfoResponse": {
        "title": "GetInfoResponse",
        "type": "object",
        "properties": {
          "boardingExitDelay": {
            "type": "integer",
            "format": "int64"
          },
          "checkpointTapscript": {
            "type": "string"
          },
          "dust": {
            "type": "integer",
            "format": "int64"
          },
          "forfeitAddress": {
            "type": "string"
          },
          "marketHour": {
            "$ref": "#/components/schemas/ark.v1.MarketHour"
          },
          "network": {
            "type": "string"
          },
          "roundInterval": {
            "type": "integer",
            "format": "int64"
          },
          "signerPubkey": {
            "type": "string"
          },
          "unilateralExitDelay": {
            "type": "integer",
            "format": "int64"
          },
          "utxoMaxAmount": {
            "type": "integer",
            "description": "-1 means no limit (default), 0 means boarding not allowed",
            "format": "int64"
          },
          "utxoMinAmount": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "string"
          },
          "vtxoMaxAmount": {
            "type": "integer",
            "description": "-1 means no limit (default)",
            "format": "int64"
          },
          "vtxoMinAmount": {
            "type": "integer",
            "format": "int64"
          },
          "vtxoTreeExpiry": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ark.v1.GetTransactionsStreamRequest": {
        "title": "GetTransactionsStreamRequest",
        "type": "object"
      },
      "ark.v1.GetTransactionsStreamResponse": {
        "title": "GetTransactionsStreamResponse",
        "type": "object",
        "properties": {
          "arkTx": {
            "$ref": "#/components/schemas/ark.v1.TxNotification"
          },
          "commitmentTx": {
            "$ref": "#/components/schemas/ark.v1.TxNotification"
          },
          "heartbeat": {
            "$ref": "#/components/schemas/ark.v1.Heartbeat"
          }
        }
      },
      "ark.v1.Heartbeat": {
        "title": "Heartbeat",
        "type": "object"
      },
      "ark.v1.MarketHour": {
        "title": "MarketHour",
        "type": "object",
        "properties": {
          "nextEndTime": {
            "type": "integer",
            "format": "int64"
          },
          "nextStartTime": {
            "type": "integer",
            "format": "int64"
          },
          "period": {
            "type": "integer",
            "format": "int64"
          },
          "roundInterval": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ark.v1.Outpoint": {
        "title": "Outpoint",
        "type": "object",
        "properties": {
          "txid": {
            "type": "string"
          },
          "vout": {
            "type": "integer",
            "format": "uint32"
          }
        }
      },
      "ark.v1.RegisterIntentRequest": {
        "title": "RegisterIntentRequest",
        "type": "object",
        "properties": {
          "intent": {
            "$ref": "#/components/schemas/ark.v1.Bip322Signature",
            "description": "BIP322 signature embeds the outpoints to be spent and new ones to be created, as well as the\nthe proof of funds."
          }
        }
      },
      "ark.v1.RegisterIntentResponse": {
        "title": "RegisterIntentResponse",
        "type": "object",
        "properties": {
          "intentId": {
            "type": "string"
          }
        }
      },
      "ark.v1.SubmitSignedForfeitTxsRequest": {
        "title": "SubmitSignedForfeitTxsRequest",
        "type": "object",
        "properties": {
          "signedCommitmentTx": {
            "type": "string",
            "description": "The user has to sign also the commitment tx if he registered a boarding UTXO."
          },
          "signedForfeitTxs": {
            "type": "array",
            "description": "Forfeit txs signed by the user.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ark.v1.SubmitSignedForfeitTxsResponse": {
        "title": "SubmitSignedForfeitTxsResponse",
        "type": "object"
      },
      "ark.v1.SubmitTreeNoncesRequest": {
        "title": "SubmitTreeNoncesRequest",
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string"
          },
          "pubkey": {
            "type": "string"
          },
          "treeNonces": {
            "type": "string"
          }
        }
      },
      "ark.v1.SubmitTreeNoncesResponse": {
        "title": "SubmitTreeNoncesResponse",
        "type": "object"
      },
      "ark.v1.SubmitTreeSignaturesRequest": {
        "title": "SubmitTreeSignaturesRequest",
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string"
          },
          "pubkey": {
            "type": "string"
          },
          "treeSignatures": {
            "type": "string"
          }
        }
      },
      "ark.v1.SubmitTreeSignaturesResponse": {
        "title": "SubmitTreeSignaturesResponse",
        "type": "object"
      },
      "ark.v1.SubmitTxRequest": {
        "title": "SubmitTxRequest",
        "type": "object",
        "properties": {
          "checkpointTxs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "signedArkTx": {
            "type": "string"
          }
        }
      },
      "ark.v1.SubmitTxResponse": {
        "title": "SubmitTxResponse",
        "type": "object",
        "properties": {
          "arkTxid": {
            "type": "string"
          },
          "finalArkTx": {
            "type": "string"
          },
          "signedCheckpointTxs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ark.v1.TreeNoncesAggregatedEvent": {
        "title": "TreeNoncesAggregatedEvent",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "treeNonces": {
            "type": "string"
          }
        }
      },
      "ark.v1.TreeSignatureEvent": {
        "title": "TreeSignatureEvent",
        "type": "object",
        "properties": {
          "batchIndex": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "topic": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "ark.v1.TreeSigningStartedEvent": {
        "title": "TreeSigningStartedEvent",
        "type": "object",
        "properties": {
          "cosignersPubkeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "unsignedCommitmentTx": {
            "type": "string"
          }
        }
      },
      "ark.v1.TreeTxEvent": {
        "title": "TreeTxEvent",
        "type": "object",
        "properties": {
          "batchIndex": {
            "type": "integer",
            "format": "int32"
          },
          "children": {
            "type": "object",
            "description": "output index -\u003e child txid",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "topic": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tx": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "ark.v1.TxData": {
        "title": "TxData",
        "type": "object",
        "properties": {
          "tx": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "ark.v1.TxNotification": {
        "title": "TxNotification",
        "type": "object",
        "properties": {
          "checkpointTxs": {
            "type": "object",
            "description": "This field is set only in case of offchain tx.\n\nkey: outpoint, value: checkpoint txid",
            "additionalProperties": {
              "$ref": "#/components/schemas/ark.v1.TxData"
            }
          },
          "spendableVtxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ark.v1.Vtxo"
            }
          },
          "spentVtxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ark.v1.Vtxo"
            }
          },
          "tx": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "ark.v1.Vtxo": {
        "title": "Vtxo",
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "uint64"
          },
          "arkTxid": {
            "type": "string"
          },
          "commitmentTxids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "expiresAt": {
            "type": "integer",
            "format": "int64"
          },
          "isPreconfirmed": {
            "type": "boolean"
          },
          "isSpent": {
            "type": "boolean"
          },
          "isSwept": {
            "type": "boolean"
          },
          "isUnrolled": {
            "type": "boolean"
          },
          "outpoint": {
            "$ref": "#/components/schemas/ark.v1.Outpoint"
          },
          "script": {
            "type": "string"
          },
          "settledBy": {
            "type": "string"
          },
          "spentBy": {
            "type": "string"
          }
        }
      },
      "google.protobuf.Any": {
        "type": "object",
        "description": "Any contains an arbitrary schema along with a URL to help identify the type of the schema.",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the schema."
          }
        }
      },
      "google.rpc.Status": {
        "title": "Status",
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/google.protobuf.Any"
            }
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "ArkService"
    }
  ]
}
