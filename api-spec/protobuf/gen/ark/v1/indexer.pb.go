// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: ark/v1/indexer.proto

package arkv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexerTxType int32

const (
	IndexerTxType_INDEXER_TX_TYPE_UNSPECIFIED IndexerTxType = 0
	IndexerTxType_INDEXER_TX_TYPE_RECEIVED    IndexerTxType = 1
	IndexerTxType_INDEXER_TX_TYPE_SENT        IndexerTxType = 2
)

// Enum value maps for IndexerTxType.
var (
	IndexerTxType_name = map[int32]string{
		0: "INDEXER_TX_TYPE_UNSPECIFIED",
		1: "INDEXER_TX_TYPE_RECEIVED",
		2: "INDEXER_TX_TYPE_SENT",
	}
	IndexerTxType_value = map[string]int32{
		"INDEXER_TX_TYPE_UNSPECIFIED": 0,
		"INDEXER_TX_TYPE_RECEIVED":    1,
		"INDEXER_TX_TYPE_SENT":        2,
	}
)

func (x IndexerTxType) Enum() *IndexerTxType {
	p := new(IndexerTxType)
	*p = x
	return p
}

func (x IndexerTxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexerTxType) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_indexer_proto_enumTypes[0].Descriptor()
}

func (IndexerTxType) Type() protoreflect.EnumType {
	return &file_ark_v1_indexer_proto_enumTypes[0]
}

func (x IndexerTxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexerTxType.Descriptor instead.
func (IndexerTxType) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{0}
}

type IndexerChainedTxType int32

const (
	IndexerChainedTxType_INDEXER_CHAINED_TX_TYPE_UNSPECIFIED IndexerChainedTxType = 0
	IndexerChainedTxType_INDEXER_CHAINED_TX_TYPE_COMMITMENT  IndexerChainedTxType = 1
	IndexerChainedTxType_INDEXER_CHAINED_TX_TYPE_ARK         IndexerChainedTxType = 2
	IndexerChainedTxType_INDEXER_CHAINED_TX_TYPE_TREE        IndexerChainedTxType = 3
	IndexerChainedTxType_INDEXER_CHAINED_TX_TYPE_CHECKPOINT  IndexerChainedTxType = 4
)

// Enum value maps for IndexerChainedTxType.
var (
	IndexerChainedTxType_name = map[int32]string{
		0: "INDEXER_CHAINED_TX_TYPE_UNSPECIFIED",
		1: "INDEXER_CHAINED_TX_TYPE_COMMITMENT",
		2: "INDEXER_CHAINED_TX_TYPE_ARK",
		3: "INDEXER_CHAINED_TX_TYPE_TREE",
		4: "INDEXER_CHAINED_TX_TYPE_CHECKPOINT",
	}
	IndexerChainedTxType_value = map[string]int32{
		"INDEXER_CHAINED_TX_TYPE_UNSPECIFIED": 0,
		"INDEXER_CHAINED_TX_TYPE_COMMITMENT":  1,
		"INDEXER_CHAINED_TX_TYPE_ARK":         2,
		"INDEXER_CHAINED_TX_TYPE_TREE":        3,
		"INDEXER_CHAINED_TX_TYPE_CHECKPOINT":  4,
	}
)

func (x IndexerChainedTxType) Enum() *IndexerChainedTxType {
	p := new(IndexerChainedTxType)
	*p = x
	return p
}

func (x IndexerChainedTxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexerChainedTxType) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_indexer_proto_enumTypes[1].Descriptor()
}

func (IndexerChainedTxType) Type() protoreflect.EnumType {
	return &file_ark_v1_indexer_proto_enumTypes[1]
}

func (x IndexerChainedTxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexerChainedTxType.Descriptor instead.
func (IndexerChainedTxType) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{1}
}

type GetCommitmentTxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommitmentTxRequest) Reset() {
	*x = GetCommitmentTxRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommitmentTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitmentTxRequest) ProtoMessage() {}

func (x *GetCommitmentTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitmentTxRequest.ProtoReflect.Descriptor instead.
func (*GetCommitmentTxRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{0}
}

func (x *GetCommitmentTxRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type GetCommitmentTxResponse struct {
	state             protoimpl.MessageState   `protogen:"open.v1"`
	StartedAt         int64                    `protobuf:"varint,1,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt           int64                    `protobuf:"varint,2,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
	Batches           map[uint32]*IndexerBatch `protobuf:"bytes,3,rep,name=batches,proto3" json:"batches,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TotalInputAmount  uint64                   `protobuf:"varint,4,opt,name=total_input_amount,json=totalInputAmount,proto3" json:"total_input_amount,omitempty"`
	TotalInputVtxos   int32                    `protobuf:"varint,5,opt,name=total_input_vtxos,json=totalInputVtxos,proto3" json:"total_input_vtxos,omitempty"`
	TotalOutputAmount uint64                   `protobuf:"varint,6,opt,name=total_output_amount,json=totalOutputAmount,proto3" json:"total_output_amount,omitempty"`
	TotalOutputVtxos  int32                    `protobuf:"varint,7,opt,name=total_output_vtxos,json=totalOutputVtxos,proto3" json:"total_output_vtxos,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetCommitmentTxResponse) Reset() {
	*x = GetCommitmentTxResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommitmentTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitmentTxResponse) ProtoMessage() {}

func (x *GetCommitmentTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitmentTxResponse.ProtoReflect.Descriptor instead.
func (*GetCommitmentTxResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{1}
}

func (x *GetCommitmentTxResponse) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetBatches() map[uint32]*IndexerBatch {
	if x != nil {
		return x.Batches
	}
	return nil
}

func (x *GetCommitmentTxResponse) GetTotalInputAmount() uint64 {
	if x != nil {
		return x.TotalInputAmount
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetTotalInputVtxos() int32 {
	if x != nil {
		return x.TotalInputVtxos
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetTotalOutputAmount() uint64 {
	if x != nil {
		return x.TotalOutputAmount
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetTotalOutputVtxos() int32 {
	if x != nil {
		return x.TotalOutputVtxos
	}
	return 0
}

type GetForfeitTxsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Page          *IndexerPageRequest    `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetForfeitTxsRequest) Reset() {
	*x = GetForfeitTxsRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetForfeitTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForfeitTxsRequest) ProtoMessage() {}

func (x *GetForfeitTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForfeitTxsRequest.ProtoReflect.Descriptor instead.
func (*GetForfeitTxsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{2}
}

func (x *GetForfeitTxsRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetForfeitTxsRequest) GetPage() *IndexerPageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetForfeitTxsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txids         []string               `protobuf:"bytes,1,rep,name=txids,proto3" json:"txids,omitempty"`
	Page          *IndexerPageResponse   `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetForfeitTxsResponse) Reset() {
	*x = GetForfeitTxsResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetForfeitTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForfeitTxsResponse) ProtoMessage() {}

func (x *GetForfeitTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForfeitTxsResponse.ProtoReflect.Descriptor instead.
func (*GetForfeitTxsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{3}
}

func (x *GetForfeitTxsResponse) GetTxids() []string {
	if x != nil {
		return x.Txids
	}
	return nil
}

func (x *GetForfeitTxsResponse) GetPage() *IndexerPageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetConnectorsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Page          *IndexerPageRequest    `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConnectorsRequest) Reset() {
	*x = GetConnectorsRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnectorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectorsRequest) ProtoMessage() {}

func (x *GetConnectorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectorsRequest.ProtoReflect.Descriptor instead.
func (*GetConnectorsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{4}
}

func (x *GetConnectorsRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetConnectorsRequest) GetPage() *IndexerPageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetConnectorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connectors    []*IndexerNode         `protobuf:"bytes,1,rep,name=connectors,proto3" json:"connectors,omitempty"`
	Page          *IndexerPageResponse   `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConnectorsResponse) Reset() {
	*x = GetConnectorsResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnectorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectorsResponse) ProtoMessage() {}

func (x *GetConnectorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectorsResponse.ProtoReflect.Descriptor instead.
func (*GetConnectorsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{5}
}

func (x *GetConnectorsResponse) GetConnectors() []*IndexerNode {
	if x != nil {
		return x.Connectors
	}
	return nil
}

func (x *GetConnectorsResponse) GetPage() *IndexerPageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoTreeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchOutpoint *IndexerOutpoint       `protobuf:"bytes,1,opt,name=batch_outpoint,json=batchOutpoint,proto3" json:"batch_outpoint,omitempty"`
	Page          *IndexerPageRequest    `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoTreeRequest) Reset() {
	*x = GetVtxoTreeRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoTreeRequest) ProtoMessage() {}

func (x *GetVtxoTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoTreeRequest.ProtoReflect.Descriptor instead.
func (*GetVtxoTreeRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{6}
}

func (x *GetVtxoTreeRequest) GetBatchOutpoint() *IndexerOutpoint {
	if x != nil {
		return x.BatchOutpoint
	}
	return nil
}

func (x *GetVtxoTreeRequest) GetPage() *IndexerPageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoTreeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VtxoTree      []*IndexerNode         `protobuf:"bytes,1,rep,name=vtxo_tree,json=vtxoTree,proto3" json:"vtxo_tree,omitempty"`
	Page          *IndexerPageResponse   `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoTreeResponse) Reset() {
	*x = GetVtxoTreeResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoTreeResponse) ProtoMessage() {}

func (x *GetVtxoTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoTreeResponse.ProtoReflect.Descriptor instead.
func (*GetVtxoTreeResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{7}
}

func (x *GetVtxoTreeResponse) GetVtxoTree() []*IndexerNode {
	if x != nil {
		return x.VtxoTree
	}
	return nil
}

func (x *GetVtxoTreeResponse) GetPage() *IndexerPageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoTreeLeavesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchOutpoint *IndexerOutpoint       `protobuf:"bytes,1,opt,name=batch_outpoint,json=batchOutpoint,proto3" json:"batch_outpoint,omitempty"`
	Page          *IndexerPageRequest    `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoTreeLeavesRequest) Reset() {
	*x = GetVtxoTreeLeavesRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoTreeLeavesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoTreeLeavesRequest) ProtoMessage() {}

func (x *GetVtxoTreeLeavesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoTreeLeavesRequest.ProtoReflect.Descriptor instead.
func (*GetVtxoTreeLeavesRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{8}
}

func (x *GetVtxoTreeLeavesRequest) GetBatchOutpoint() *IndexerOutpoint {
	if x != nil {
		return x.BatchOutpoint
	}
	return nil
}

func (x *GetVtxoTreeLeavesRequest) GetPage() *IndexerPageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoTreeLeavesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Leaves        []*IndexerOutpoint     `protobuf:"bytes,1,rep,name=leaves,proto3" json:"leaves,omitempty"`
	Page          *IndexerPageResponse   `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoTreeLeavesResponse) Reset() {
	*x = GetVtxoTreeLeavesResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoTreeLeavesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoTreeLeavesResponse) ProtoMessage() {}

func (x *GetVtxoTreeLeavesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoTreeLeavesResponse.ProtoReflect.Descriptor instead.
func (*GetVtxoTreeLeavesResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{9}
}

func (x *GetVtxoTreeLeavesResponse) GetLeaves() []*IndexerOutpoint {
	if x != nil {
		return x.Leaves
	}
	return nil
}

func (x *GetVtxoTreeLeavesResponse) GetPage() *IndexerPageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxosRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Either specify a list of vtxo scripts.
	Scripts []string `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
	// Or specify a list of vtxo outpoints. The 2 filters are mutually exclusive.
	Outpoints []string `protobuf:"bytes,2,rep,name=outpoints,proto3" json:"outpoints,omitempty"`
	// Retrieve only spendable vtxos
	SpendableOnly bool `protobuf:"varint,3,opt,name=spendable_only,json=spendableOnly,proto3" json:"spendable_only,omitempty"`
	// Retrieve only spent vtxos.
	SpentOnly bool `protobuf:"varint,4,opt,name=spent_only,json=spentOnly,proto3" json:"spent_only,omitempty"`
	// Retrieve only recoverable vtxos (notes, subdust or swept vtxos).
	// The 3 filters are mutually exclusive,
	RecoverableOnly bool                `protobuf:"varint,5,opt,name=recoverable_only,json=recoverableOnly,proto3" json:"recoverable_only,omitempty"`
	Page            *IndexerPageRequest `protobuf:"bytes,6,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetVtxosRequest) Reset() {
	*x = GetVtxosRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxosRequest) ProtoMessage() {}

func (x *GetVtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxosRequest.ProtoReflect.Descriptor instead.
func (*GetVtxosRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{10}
}

func (x *GetVtxosRequest) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *GetVtxosRequest) GetOutpoints() []string {
	if x != nil {
		return x.Outpoints
	}
	return nil
}

func (x *GetVtxosRequest) GetSpendableOnly() bool {
	if x != nil {
		return x.SpendableOnly
	}
	return false
}

func (x *GetVtxosRequest) GetSpentOnly() bool {
	if x != nil {
		return x.SpentOnly
	}
	return false
}

func (x *GetVtxosRequest) GetRecoverableOnly() bool {
	if x != nil {
		return x.RecoverableOnly
	}
	return false
}

func (x *GetVtxosRequest) GetPage() *IndexerPageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vtxos         []*IndexerVtxo         `protobuf:"bytes,1,rep,name=vtxos,proto3" json:"vtxos,omitempty"`
	Page          *IndexerPageResponse   `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxosResponse) Reset() {
	*x = GetVtxosResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxosResponse) ProtoMessage() {}

func (x *GetVtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxosResponse.ProtoReflect.Descriptor instead.
func (*GetVtxosResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{11}
}

func (x *GetVtxosResponse) GetVtxos() []*IndexerVtxo {
	if x != nil {
		return x.Vtxos
	}
	return nil
}

func (x *GetVtxosResponse) GetPage() *IndexerPageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoChainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Outpoint      *IndexerOutpoint       `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	Page          *IndexerPageRequest    `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoChainRequest) Reset() {
	*x = GetVtxoChainRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoChainRequest) ProtoMessage() {}

func (x *GetVtxoChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoChainRequest.ProtoReflect.Descriptor instead.
func (*GetVtxoChainRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{12}
}

func (x *GetVtxoChainRequest) GetOutpoint() *IndexerOutpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *GetVtxoChainRequest) GetPage() *IndexerPageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoChainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         []*IndexerChain        `protobuf:"bytes,1,rep,name=chain,proto3" json:"chain,omitempty"`
	Page          *IndexerPageResponse   `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoChainResponse) Reset() {
	*x = GetVtxoChainResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoChainResponse) ProtoMessage() {}

func (x *GetVtxoChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoChainResponse.ProtoReflect.Descriptor instead.
func (*GetVtxoChainResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{13}
}

func (x *GetVtxoChainResponse) GetChain() []*IndexerChain {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *GetVtxoChainResponse) GetPage() *IndexerPageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVirtualTxsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txids         []string               `protobuf:"bytes,1,rep,name=txids,proto3" json:"txids,omitempty"`
	Page          *IndexerPageRequest    `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVirtualTxsRequest) Reset() {
	*x = GetVirtualTxsRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualTxsRequest) ProtoMessage() {}

func (x *GetVirtualTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualTxsRequest.ProtoReflect.Descriptor instead.
func (*GetVirtualTxsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{14}
}

func (x *GetVirtualTxsRequest) GetTxids() []string {
	if x != nil {
		return x.Txids
	}
	return nil
}

func (x *GetVirtualTxsRequest) GetPage() *IndexerPageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVirtualTxsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txs           []string               `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	Page          *IndexerPageResponse   `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVirtualTxsResponse) Reset() {
	*x = GetVirtualTxsResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualTxsResponse) ProtoMessage() {}

func (x *GetVirtualTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualTxsResponse.ProtoReflect.Descriptor instead.
func (*GetVirtualTxsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{15}
}

func (x *GetVirtualTxsResponse) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *GetVirtualTxsResponse) GetPage() *IndexerPageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetBatchSweepTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchOutpoint *IndexerOutpoint       `protobuf:"bytes,1,opt,name=batch_outpoint,json=batchOutpoint,proto3" json:"batch_outpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBatchSweepTransactionsRequest) Reset() {
	*x = GetBatchSweepTransactionsRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchSweepTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchSweepTransactionsRequest) ProtoMessage() {}

func (x *GetBatchSweepTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchSweepTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetBatchSweepTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{16}
}

func (x *GetBatchSweepTransactionsRequest) GetBatchOutpoint() *IndexerOutpoint {
	if x != nil {
		return x.BatchOutpoint
	}
	return nil
}

type GetBatchSweepTransactionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SweptBy       []string               `protobuf:"bytes,1,rep,name=swept_by,json=sweptBy,proto3" json:"swept_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBatchSweepTransactionsResponse) Reset() {
	*x = GetBatchSweepTransactionsResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchSweepTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchSweepTransactionsResponse) ProtoMessage() {}

func (x *GetBatchSweepTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchSweepTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetBatchSweepTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{17}
}

func (x *GetBatchSweepTransactionsResponse) GetSweptBy() []string {
	if x != nil {
		return x.SweptBy
	}
	return nil
}

type IndexerBatch struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalOutputAmount uint64                 `protobuf:"varint,1,opt,name=total_output_amount,json=totalOutputAmount,proto3" json:"total_output_amount,omitempty"`
	TotalOutputVtxos  int32                  `protobuf:"varint,2,opt,name=total_output_vtxos,json=totalOutputVtxos,proto3" json:"total_output_vtxos,omitempty"`
	ExpiresAt         int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Swept             bool                   `protobuf:"varint,4,opt,name=swept,proto3" json:"swept,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *IndexerBatch) Reset() {
	*x = IndexerBatch{}
	mi := &file_ark_v1_indexer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexerBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexerBatch) ProtoMessage() {}

func (x *IndexerBatch) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexerBatch.ProtoReflect.Descriptor instead.
func (*IndexerBatch) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{18}
}

func (x *IndexerBatch) GetTotalOutputAmount() uint64 {
	if x != nil {
		return x.TotalOutputAmount
	}
	return 0
}

func (x *IndexerBatch) GetTotalOutputVtxos() int32 {
	if x != nil {
		return x.TotalOutputVtxos
	}
	return 0
}

func (x *IndexerBatch) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *IndexerBatch) GetSwept() bool {
	if x != nil {
		return x.Swept
	}
	return false
}

type IndexerOutpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexerOutpoint) Reset() {
	*x = IndexerOutpoint{}
	mi := &file_ark_v1_indexer_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexerOutpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexerOutpoint) ProtoMessage() {}

func (x *IndexerOutpoint) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexerOutpoint.ProtoReflect.Descriptor instead.
func (*IndexerOutpoint) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{19}
}

func (x *IndexerOutpoint) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *IndexerOutpoint) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

type IndexerNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Children      map[uint32]string      `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // vout -> txid
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexerNode) Reset() {
	*x = IndexerNode{}
	mi := &file_ark_v1_indexer_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexerNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexerNode) ProtoMessage() {}

func (x *IndexerNode) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexerNode.ProtoReflect.Descriptor instead.
func (*IndexerNode) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{20}
}

func (x *IndexerNode) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *IndexerNode) GetChildren() map[uint32]string {
	if x != nil {
		return x.Children
	}
	return nil
}

type IndexerVtxo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Outpoint        *IndexerOutpoint       `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	CreatedAt       int64                  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt       int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Amount          uint64                 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Script          string                 `protobuf:"bytes,5,opt,name=script,proto3" json:"script,omitempty"`
	IsPreconfirmed  bool                   `protobuf:"varint,6,opt,name=is_preconfirmed,json=isPreconfirmed,proto3" json:"is_preconfirmed,omitempty"`
	IsSwept         bool                   `protobuf:"varint,7,opt,name=is_swept,json=isSwept,proto3" json:"is_swept,omitempty"`
	IsUnrolled      bool                   `protobuf:"varint,8,opt,name=is_unrolled,json=isUnrolled,proto3" json:"is_unrolled,omitempty"`
	IsSpent         bool                   `protobuf:"varint,9,opt,name=is_spent,json=isSpent,proto3" json:"is_spent,omitempty"`
	SpentBy         string                 `protobuf:"bytes,10,opt,name=spent_by,json=spentBy,proto3" json:"spent_by,omitempty"`
	CommitmentTxids []string               `protobuf:"bytes,11,rep,name=commitment_txids,json=commitmentTxids,proto3" json:"commitment_txids,omitempty"`
	SettledBy       string                 `protobuf:"bytes,12,opt,name=settled_by,json=settledBy,proto3" json:"settled_by,omitempty"`
	ArkTxid         string                 `protobuf:"bytes,13,opt,name=ark_txid,json=arkTxid,proto3" json:"ark_txid,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *IndexerVtxo) Reset() {
	*x = IndexerVtxo{}
	mi := &file_ark_v1_indexer_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexerVtxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexerVtxo) ProtoMessage() {}

func (x *IndexerVtxo) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexerVtxo.ProtoReflect.Descriptor instead.
func (*IndexerVtxo) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{21}
}

func (x *IndexerVtxo) GetOutpoint() *IndexerOutpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *IndexerVtxo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *IndexerVtxo) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *IndexerVtxo) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *IndexerVtxo) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *IndexerVtxo) GetIsPreconfirmed() bool {
	if x != nil {
		return x.IsPreconfirmed
	}
	return false
}

func (x *IndexerVtxo) GetIsSwept() bool {
	if x != nil {
		return x.IsSwept
	}
	return false
}

func (x *IndexerVtxo) GetIsUnrolled() bool {
	if x != nil {
		return x.IsUnrolled
	}
	return false
}

func (x *IndexerVtxo) GetIsSpent() bool {
	if x != nil {
		return x.IsSpent
	}
	return false
}

func (x *IndexerVtxo) GetSpentBy() string {
	if x != nil {
		return x.SpentBy
	}
	return ""
}

func (x *IndexerVtxo) GetCommitmentTxids() []string {
	if x != nil {
		return x.CommitmentTxids
	}
	return nil
}

func (x *IndexerVtxo) GetSettledBy() string {
	if x != nil {
		return x.SettledBy
	}
	return ""
}

func (x *IndexerVtxo) GetArkTxid() string {
	if x != nil {
		return x.ArkTxid
	}
	return ""
}

type IndexerChain struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Txid      string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	ExpiresAt int64                  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Type      IndexerChainedTxType   `protobuf:"varint,3,opt,name=type,proto3,enum=ark.v1.IndexerChainedTxType" json:"type,omitempty"`
	// txids of the transactions in the chain used as input of the current tx
	Spends        []string `protobuf:"bytes,4,rep,name=spends,proto3" json:"spends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexerChain) Reset() {
	*x = IndexerChain{}
	mi := &file_ark_v1_indexer_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexerChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexerChain) ProtoMessage() {}

func (x *IndexerChain) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexerChain.ProtoReflect.Descriptor instead.
func (*IndexerChain) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{22}
}

func (x *IndexerChain) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *IndexerChain) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *IndexerChain) GetType() IndexerChainedTxType {
	if x != nil {
		return x.Type
	}
	return IndexerChainedTxType_INDEXER_CHAINED_TX_TYPE_UNSPECIFIED
}

func (x *IndexerChain) GetSpends() []string {
	if x != nil {
		return x.Spends
	}
	return nil
}

type IndexerTxHistoryRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Key:
	//
	//	*IndexerTxHistoryRecord_CommitmentTxid
	//	*IndexerTxHistoryRecord_VirtualTxid
	Key           isIndexerTxHistoryRecord_Key `protobuf_oneof:"key"`
	Type          IndexerTxType                `protobuf:"varint,3,opt,name=type,proto3,enum=ark.v1.IndexerTxType" json:"type,omitempty"`
	Amount        uint64                       `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt     int64                        `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	IsSettled     bool                         `protobuf:"varint,6,opt,name=is_settled,json=isSettled,proto3" json:"is_settled,omitempty"`
	SettledBy     string                       `protobuf:"bytes,7,opt,name=settled_by,json=settledBy,proto3" json:"settled_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexerTxHistoryRecord) Reset() {
	*x = IndexerTxHistoryRecord{}
	mi := &file_ark_v1_indexer_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexerTxHistoryRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexerTxHistoryRecord) ProtoMessage() {}

func (x *IndexerTxHistoryRecord) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexerTxHistoryRecord.ProtoReflect.Descriptor instead.
func (*IndexerTxHistoryRecord) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{23}
}

func (x *IndexerTxHistoryRecord) GetKey() isIndexerTxHistoryRecord_Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *IndexerTxHistoryRecord) GetCommitmentTxid() string {
	if x != nil {
		if x, ok := x.Key.(*IndexerTxHistoryRecord_CommitmentTxid); ok {
			return x.CommitmentTxid
		}
	}
	return ""
}

func (x *IndexerTxHistoryRecord) GetVirtualTxid() string {
	if x != nil {
		if x, ok := x.Key.(*IndexerTxHistoryRecord_VirtualTxid); ok {
			return x.VirtualTxid
		}
	}
	return ""
}

func (x *IndexerTxHistoryRecord) GetType() IndexerTxType {
	if x != nil {
		return x.Type
	}
	return IndexerTxType_INDEXER_TX_TYPE_UNSPECIFIED
}

func (x *IndexerTxHistoryRecord) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *IndexerTxHistoryRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *IndexerTxHistoryRecord) GetIsSettled() bool {
	if x != nil {
		return x.IsSettled
	}
	return false
}

func (x *IndexerTxHistoryRecord) GetSettledBy() string {
	if x != nil {
		return x.SettledBy
	}
	return ""
}

type isIndexerTxHistoryRecord_Key interface {
	isIndexerTxHistoryRecord_Key()
}

type IndexerTxHistoryRecord_CommitmentTxid struct {
	CommitmentTxid string `protobuf:"bytes,1,opt,name=commitment_txid,json=commitmentTxid,proto3,oneof"`
}

type IndexerTxHistoryRecord_VirtualTxid struct {
	VirtualTxid string `protobuf:"bytes,2,opt,name=virtual_txid,json=virtualTxid,proto3,oneof"`
}

func (*IndexerTxHistoryRecord_CommitmentTxid) isIndexerTxHistoryRecord_Key() {}

func (*IndexerTxHistoryRecord_VirtualTxid) isIndexerTxHistoryRecord_Key() {}

type IndexerPageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          int32                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Index         int32                  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexerPageRequest) Reset() {
	*x = IndexerPageRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexerPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexerPageRequest) ProtoMessage() {}

func (x *IndexerPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexerPageRequest.ProtoReflect.Descriptor instead.
func (*IndexerPageRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{24}
}

func (x *IndexerPageRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IndexerPageRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type IndexerPageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       int32                  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Next          int32                  `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	Total         int32                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexerPageResponse) Reset() {
	*x = IndexerPageResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexerPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexerPageResponse) ProtoMessage() {}

func (x *IndexerPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexerPageResponse.ProtoReflect.Descriptor instead.
func (*IndexerPageResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{25}
}

func (x *IndexerPageResponse) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *IndexerPageResponse) GetNext() int32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *IndexerPageResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SubscribeForScriptsRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Scripts []string               `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
	// If set, update an existing subscription
	SubscriptionId string `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubscribeForScriptsRequest) Reset() {
	*x = SubscribeForScriptsRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeForScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeForScriptsRequest) ProtoMessage() {}

func (x *SubscribeForScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeForScriptsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeForScriptsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{26}
}

func (x *SubscribeForScriptsRequest) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *SubscribeForScriptsRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type SubscribeForScriptsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubscribeForScriptsResponse) Reset() {
	*x = SubscribeForScriptsResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeForScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeForScriptsResponse) ProtoMessage() {}

func (x *SubscribeForScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeForScriptsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeForScriptsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{27}
}

func (x *SubscribeForScriptsResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type UnsubscribeForScriptsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// If empty, unsubscribe all scripts
	Scripts       []string `protobuf:"bytes,2,rep,name=scripts,proto3" json:"scripts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeForScriptsRequest) Reset() {
	*x = UnsubscribeForScriptsRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeForScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeForScriptsRequest) ProtoMessage() {}

func (x *UnsubscribeForScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeForScriptsRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeForScriptsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{28}
}

func (x *UnsubscribeForScriptsRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *UnsubscribeForScriptsRequest) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

type UnsubscribeForScriptsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeForScriptsResponse) Reset() {
	*x = UnsubscribeForScriptsResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeForScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeForScriptsResponse) ProtoMessage() {}

func (x *UnsubscribeForScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeForScriptsResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeForScriptsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{29}
}

type GetSubscriptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetSubscriptionRequest) Reset() {
	*x = GetSubscriptionRequest{}
	mi := &file_ark_v1_indexer_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequest) ProtoMessage() {}

func (x *GetSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{30}
}

func (x *GetSubscriptionRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type GetSubscriptionResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Txid          string                    `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Scripts       []string                  `protobuf:"bytes,2,rep,name=scripts,proto3" json:"scripts,omitempty"`
	NewVtxos      []*IndexerVtxo            `protobuf:"bytes,3,rep,name=new_vtxos,json=newVtxos,proto3" json:"new_vtxos,omitempty"`
	SpentVtxos    []*IndexerVtxo            `protobuf:"bytes,4,rep,name=spent_vtxos,json=spentVtxos,proto3" json:"spent_vtxos,omitempty"`
	Tx            string                    `protobuf:"bytes,5,opt,name=tx,proto3" json:"tx,omitempty"`
	CheckpointTxs map[string]*IndexerTxData `protobuf:"bytes,6,rep,name=checkpoint_txs,json=checkpointTxs,proto3" json:"checkpoint_txs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SweptVtxos    []*IndexerVtxo            `protobuf:"bytes,7,rep,name=swept_vtxos,json=sweptVtxos,proto3" json:"swept_vtxos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionResponse) Reset() {
	*x = GetSubscriptionResponse{}
	mi := &file_ark_v1_indexer_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionResponse) ProtoMessage() {}

func (x *GetSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{31}
}

func (x *GetSubscriptionResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetSubscriptionResponse) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *GetSubscriptionResponse) GetNewVtxos() []*IndexerVtxo {
	if x != nil {
		return x.NewVtxos
	}
	return nil
}

func (x *GetSubscriptionResponse) GetSpentVtxos() []*IndexerVtxo {
	if x != nil {
		return x.SpentVtxos
	}
	return nil
}

func (x *GetSubscriptionResponse) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

func (x *GetSubscriptionResponse) GetCheckpointTxs() map[string]*IndexerTxData {
	if x != nil {
		return x.CheckpointTxs
	}
	return nil
}

func (x *GetSubscriptionResponse) GetSweptVtxos() []*IndexerVtxo {
	if x != nil {
		return x.SweptVtxos
	}
	return nil
}

type IndexerTxData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Tx            string                 `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexerTxData) Reset() {
	*x = IndexerTxData{}
	mi := &file_ark_v1_indexer_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexerTxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexerTxData) ProtoMessage() {}

func (x *IndexerTxData) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_indexer_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexerTxData.ProtoReflect.Descriptor instead.
func (*IndexerTxData) Descriptor() ([]byte, []int) {
	return file_ark_v1_indexer_proto_rawDescGZIP(), []int{32}
}

func (x *IndexerTxData) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *IndexerTxData) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

var File_ark_v1_indexer_proto protoreflect.FileDescriptor

const file_ark_v1_indexer_proto_rawDesc = "" +
	"\n" +
	"\x14ark/v1/indexer.proto\x12\x06ark.v1\x1a\x1cgoogle/api/annotations.proto\",\n" +
	"\x16GetCommitmentTxRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\"\xa5\x03\n" +
	"\x17GetCommitmentTxResponse\x12\x1d\n" +
	"\n" +
	"started_at\x18\x01 \x01(\x03R\tstartedAt\x12\x19\n" +
	"\bended_at\x18\x02 \x01(\x03R\aendedAt\x12F\n" +
	"\abatches\x18\x03 \x03(\v2,.ark.v1.GetCommitmentTxResponse.BatchesEntryR\abatches\x12,\n" +
	"\x12total_input_amount\x18\x04 \x01(\x04R\x10totalInputAmount\x12*\n" +
	"\x11total_input_vtxos\x18\x05 \x01(\x05R\x0ftotalInputVtxos\x12.\n" +
	"\x13total_output_amount\x18\x06 \x01(\x04R\x11totalOutputAmount\x12,\n" +
	"\x12total_output_vtxos\x18\a \x01(\x05R\x10totalOutputVtxos\x1aP\n" +
	"\fBatchesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.ark.v1.IndexerBatchR\x05value:\x028\x01\"Z\n" +
	"\x14GetForfeitTxsRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12.\n" +
	"\x04page\x18\x02 \x01(\v2\x1a.ark.v1.IndexerPageRequestR\x04page\"^\n" +
	"\x15GetForfeitTxsResponse\x12\x14\n" +
	"\x05txids\x18\x01 \x03(\tR\x05txids\x12/\n" +
	"\x04page\x18\x02 \x01(\v2\x1b.ark.v1.IndexerPageResponseR\x04page\"Z\n" +
	"\x14GetConnectorsRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12.\n" +
	"\x04page\x18\x02 \x01(\v2\x1a.ark.v1.IndexerPageRequestR\x04page\"}\n" +
	"\x15GetConnectorsResponse\x123\n" +
	"\n" +
	"connectors\x18\x01 \x03(\v2\x13.ark.v1.IndexerNodeR\n" +
	"connectors\x12/\n" +
	"\x04page\x18\x02 \x01(\v2\x1b.ark.v1.IndexerPageResponseR\x04page\"\x84\x01\n" +
	"\x12GetVtxoTreeRequest\x12>\n" +
	"\x0ebatch_outpoint\x18\x01 \x01(\v2\x17.ark.v1.IndexerOutpointR\rbatchOutpoint\x12.\n" +
	"\x04page\x18\x02 \x01(\v2\x1a.ark.v1.IndexerPageRequestR\x04page\"x\n" +
	"\x13GetVtxoTreeResponse\x120\n" +
	"\tvtxo_tree\x18\x01 \x03(\v2\x13.ark.v1.IndexerNodeR\bvtxoTree\x12/\n" +
	"\x04page\x18\x02 \x01(\v2\x1b.ark.v1.IndexerPageResponseR\x04page\"\x8a\x01\n" +
	"\x18GetVtxoTreeLeavesRequest\x12>\n" +
	"\x0ebatch_outpoint\x18\x01 \x01(\v2\x17.ark.v1.IndexerOutpointR\rbatchOutpoint\x12.\n" +
	"\x04page\x18\x02 \x01(\v2\x1a.ark.v1.IndexerPageRequestR\x04page\"}\n" +
	"\x19GetVtxoTreeLeavesResponse\x12/\n" +
	"\x06leaves\x18\x01 \x03(\v2\x17.ark.v1.IndexerOutpointR\x06leaves\x12/\n" +
	"\x04page\x18\x02 \x01(\v2\x1b.ark.v1.IndexerPageResponseR\x04page\"\xea\x01\n" +
	"\x0fGetVtxosRequest\x12\x18\n" +
	"\ascripts\x18\x01 \x03(\tR\ascripts\x12\x1c\n" +
	"\toutpoints\x18\x02 \x03(\tR\toutpoints\x12%\n" +
	"\x0espendable_only\x18\x03 \x01(\bR\rspendableOnly\x12\x1d\n" +
	"\n" +
	"spent_only\x18\x04 \x01(\bR\tspentOnly\x12)\n" +
	"\x10recoverable_only\x18\x05 \x01(\bR\x0frecoverableOnly\x12.\n" +
	"\x04page\x18\x06 \x01(\v2\x1a.ark.v1.IndexerPageRequestR\x04page\"n\n" +
	"\x10GetVtxosResponse\x12)\n" +
	"\x05vtxos\x18\x01 \x03(\v2\x13.ark.v1.IndexerVtxoR\x05vtxos\x12/\n" +
	"\x04page\x18\x02 \x01(\v2\x1b.ark.v1.IndexerPageResponseR\x04page\"z\n" +
	"\x13GetVtxoChainRequest\x123\n" +
	"\boutpoint\x18\x01 \x01(\v2\x17.ark.v1.IndexerOutpointR\boutpoint\x12.\n" +
	"\x04page\x18\x02 \x01(\v2\x1a.ark.v1.IndexerPageRequestR\x04page\"s\n" +
	"\x14GetVtxoChainResponse\x12*\n" +
	"\x05chain\x18\x01 \x03(\v2\x14.ark.v1.IndexerChainR\x05chain\x12/\n" +
	"\x04page\x18\x02 \x01(\v2\x1b.ark.v1.IndexerPageResponseR\x04page\"\\\n" +
	"\x14GetVirtualTxsRequest\x12\x14\n" +
	"\x05txids\x18\x01 \x03(\tR\x05txids\x12.\n" +
	"\x04page\x18\x02 \x01(\v2\x1a.ark.v1.IndexerPageRequestR\x04page\"Z\n" +
	"\x15GetVirtualTxsResponse\x12\x10\n" +
	"\x03txs\x18\x01 \x03(\tR\x03txs\x12/\n" +
	"\x04page\x18\x02 \x01(\v2\x1b.ark.v1.IndexerPageResponseR\x04page\"b\n" +
	" GetBatchSweepTransactionsRequest\x12>\n" +
	"\x0ebatch_outpoint\x18\x01 \x01(\v2\x17.ark.v1.IndexerOutpointR\rbatchOutpoint\">\n" +
	"!GetBatchSweepTransactionsResponse\x12\x19\n" +
	"\bswept_by\x18\x01 \x03(\tR\asweptBy\"\xa1\x01\n" +
	"\fIndexerBatch\x12.\n" +
	"\x13total_output_amount\x18\x01 \x01(\x04R\x11totalOutputAmount\x12,\n" +
	"\x12total_output_vtxos\x18\x02 \x01(\x05R\x10totalOutputVtxos\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\x12\x14\n" +
	"\x05swept\x18\x04 \x01(\bR\x05swept\"9\n" +
	"\x0fIndexerOutpoint\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\"\x9d\x01\n" +
	"\vIndexerNode\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12=\n" +
	"\bchildren\x18\x02 \x03(\v2!.ark.v1.IndexerNode.ChildrenEntryR\bchildren\x1a;\n" +
	"\rChildrenEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x03\n" +
	"\vIndexerVtxo\x123\n" +
	"\boutpoint\x18\x01 \x01(\v2\x17.ark.v1.IndexerOutpointR\boutpoint\x12\x1d\n" +
	"\n" +
	"created_at\x18\x02 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x04R\x06amount\x12\x16\n" +
	"\x06script\x18\x05 \x01(\tR\x06script\x12'\n" +
	"\x0fis_preconfirmed\x18\x06 \x01(\bR\x0eisPreconfirmed\x12\x19\n" +
	"\bis_swept\x18\a \x01(\bR\aisSwept\x12\x1f\n" +
	"\vis_unrolled\x18\b \x01(\bR\n" +
	"isUnrolled\x12\x19\n" +
	"\bis_spent\x18\t \x01(\bR\aisSpent\x12\x19\n" +
	"\bspent_by\x18\n" +
	" \x01(\tR\aspentBy\x12)\n" +
	"\x10commitment_txids\x18\v \x03(\tR\x0fcommitmentTxids\x12\x1d\n" +
	"\n" +
	"settled_by\x18\f \x01(\tR\tsettledBy\x12\x19\n" +
	"\bark_txid\x18\r \x01(\tR\aarkTxid\"\x8b\x01\n" +
	"\fIndexerChain\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\x120\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1c.ark.v1.IndexerChainedTxTypeR\x04type\x12\x16\n" +
	"\x06spends\x18\x04 \x03(\tR\x06spends\"\x8f\x02\n" +
	"\x16IndexerTxHistoryRecord\x12)\n" +
	"\x0fcommitment_txid\x18\x01 \x01(\tH\x00R\x0ecommitmentTxid\x12#\n" +
	"\fvirtual_txid\x18\x02 \x01(\tH\x00R\vvirtualTxid\x12)\n" +
	"\x04type\x18\x03 \x01(\x0e2\x15.ark.v1.IndexerTxTypeR\x04type\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x04R\x06amount\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"is_settled\x18\x06 \x01(\bR\tisSettled\x12\x1d\n" +
	"\n" +
	"settled_by\x18\a \x01(\tR\tsettledByB\x05\n" +
	"\x03key\">\n" +
	"\x12IndexerPageRequest\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x05R\x04size\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x05R\x05index\"Y\n" +
	"\x13IndexerPageResponse\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x05R\acurrent\x12\x12\n" +
	"\x04next\x18\x02 \x01(\x05R\x04next\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x05R\x05total\"_\n" +
	"\x1aSubscribeForScriptsRequest\x12\x18\n" +
	"\ascripts\x18\x01 \x03(\tR\ascripts\x12'\n" +
	"\x0fsubscription_id\x18\x02 \x01(\tR\x0esubscriptionId\"F\n" +
	"\x1bSubscribeForScriptsResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\"a\n" +
	"\x1cUnsubscribeForScriptsRequest\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12\x18\n" +
	"\ascripts\x18\x02 \x03(\tR\ascripts\"\x1f\n" +
	"\x1dUnsubscribeForScriptsResponse\"A\n" +
	"\x16GetSubscriptionRequest\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\"\xa9\x03\n" +
	"\x17GetSubscriptionResponse\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x18\n" +
	"\ascripts\x18\x02 \x03(\tR\ascripts\x120\n" +
	"\tnew_vtxos\x18\x03 \x03(\v2\x13.ark.v1.IndexerVtxoR\bnewVtxos\x124\n" +
	"\vspent_vtxos\x18\x04 \x03(\v2\x13.ark.v1.IndexerVtxoR\n" +
	"spentVtxos\x12\x0e\n" +
	"\x02tx\x18\x05 \x01(\tR\x02tx\x12Y\n" +
	"\x0echeckpoint_txs\x18\x06 \x03(\v22.ark.v1.GetSubscriptionResponse.CheckpointTxsEntryR\rcheckpointTxs\x124\n" +
	"\vswept_vtxos\x18\a \x03(\v2\x13.ark.v1.IndexerVtxoR\n" +
	"sweptVtxos\x1aW\n" +
	"\x12CheckpointTxsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.ark.v1.IndexerTxDataR\x05value:\x028\x01\"3\n" +
	"\rIndexerTxData\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x0e\n" +
	"\x02tx\x18\x02 \x01(\tR\x02tx*h\n" +
	"\rIndexerTxType\x12\x1f\n" +
	"\x1bINDEXER_TX_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18INDEXER_TX_TYPE_RECEIVED\x10\x01\x12\x18\n" +
	"\x14INDEXER_TX_TYPE_SENT\x10\x02*\xd2\x01\n" +
	"\x14IndexerChainedTxType\x12'\n" +
	"#INDEXER_CHAINED_TX_TYPE_UNSPECIFIED\x10\x00\x12&\n" +
	"\"INDEXER_CHAINED_TX_TYPE_COMMITMENT\x10\x01\x12\x1f\n" +
	"\x1bINDEXER_CHAINED_TX_TYPE_ARK\x10\x02\x12 \n" +
	"\x1cINDEXER_CHAINED_TX_TYPE_TREE\x10\x03\x12&\n" +
	"\"INDEXER_CHAINED_TX_TYPE_CHECKPOINT\x10\x042\xbf\f\n" +
	"\x0eIndexerService\x12s\n" +
	"\x0fGetCommitmentTx\x12\x1e.ark.v1.GetCommitmentTxRequest\x1a\x1f.ark.v1.GetCommitmentTxResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/v1/commitmentTx/{txid}\x12x\n" +
	"\rGetForfeitTxs\x12\x1c.ark.v1.GetForfeitTxsRequest\x1a\x1d.ark.v1.GetForfeitTxsResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/commitmentTx/{txid}/forfeitTxs\x12x\n" +
	"\rGetConnectors\x12\x1c.ark.v1.GetConnectorsRequest\x1a\x1d.ark.v1.GetConnectorsResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/commitmentTx/{txid}/connectors\x12\x8a\x01\n" +
	"\vGetVtxoTree\x12\x1a.ark.v1.GetVtxoTreeRequest\x1a\x1b.ark.v1.GetVtxoTreeResponse\"B\x82\xd3\xe4\x93\x02<\x12:/v1/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/tree\x12\xa3\x01\n" +
	"\x11GetVtxoTreeLeaves\x12 .ark.v1.GetVtxoTreeLeavesRequest\x1a!.ark.v1.GetVtxoTreeLeavesResponse\"I\x82\xd3\xe4\x93\x02C\x12A/v1/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/tree/leaves\x12P\n" +
	"\bGetVtxos\x12\x17.ark.v1.GetVtxosRequest\x1a\x18.ark.v1.GetVtxosResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/vtxos\x12\x81\x01\n" +
	"\fGetVtxoChain\x12\x1b.ark.v1.GetVtxoChainRequest\x1a\x1c.ark.v1.GetVtxoChainResponse\"6\x82\xd3\xe4\x93\x020\x12./v1/vtxo/{outpoint.txid}/{outpoint.vout}/chain\x12k\n" +
	"\rGetVirtualTxs\x12\x1c.ark.v1.GetVirtualTxsRequest\x1a\x1d.ark.v1.GetVirtualTxsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/virtualTx/{txids}\x12\xb8\x01\n" +
	"\x19GetBatchSweepTransactions\x12(.ark.v1.GetBatchSweepTransactionsRequest\x1a).ark.v1.GetBatchSweepTransactionsResponse\"F\x82\xd3\xe4\x93\x02@\x12>/v1/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/sweepTxs\x12\x7f\n" +
	"\x13SubscribeForScripts\x12\".ark.v1.SubscribeForScriptsRequest\x1a#.ark.v1.SubscribeForScriptsResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/v1/script/subscribe\x12\x87\x01\n" +
	"\x15UnsubscribeForScripts\x12$.ark.v1.UnsubscribeForScriptsRequest\x1a%.ark.v1.UnsubscribeForScriptsResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/script/unsubscribe\x12\x87\x01\n" +
	"\x0fGetSubscription\x12\x1e.ark.v1.GetSubscriptionRequest\x1a\x1f.ark.v1.GetSubscriptionResponse\"1\x82\xd3\xe4\x93\x02+\x12)/v1/script/subscription/{subscription_id}0\x01B\x93\x01\n" +
	"\n" +
	"com.ark.v1B\fIndexerProtoP\x01Z>github.com/arkade-os/go-sdk/api-spec/protobuf/gen/ark/v1;arkv1\xa2\x02\x03AXX\xaa\x02\x06Ark.V1\xca\x02\x06Ark\\V1\xe2\x02\x12Ark\\V1\\GPBMetadata\xea\x02\aArk::V1b\x06proto3"

var (
	file_ark_v1_indexer_proto_rawDescOnce sync.Once
	file_ark_v1_indexer_proto_rawDescData []byte
)

func file_ark_v1_indexer_proto_rawDescGZIP() []byte {
	file_ark_v1_indexer_proto_rawDescOnce.Do(func() {
		file_ark_v1_indexer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ark_v1_indexer_proto_rawDesc), len(file_ark_v1_indexer_proto_rawDesc)))
	})
	return file_ark_v1_indexer_proto_rawDescData
}

var file_ark_v1_indexer_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ark_v1_indexer_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_ark_v1_indexer_proto_goTypes = []any{
	(IndexerTxType)(0),                        // 0: ark.v1.IndexerTxType
	(IndexerChainedTxType)(0),                 // 1: ark.v1.IndexerChainedTxType
	(*GetCommitmentTxRequest)(nil),            // 2: ark.v1.GetCommitmentTxRequest
	(*GetCommitmentTxResponse)(nil),           // 3: ark.v1.GetCommitmentTxResponse
	(*GetForfeitTxsRequest)(nil),              // 4: ark.v1.GetForfeitTxsRequest
	(*GetForfeitTxsResponse)(nil),             // 5: ark.v1.GetForfeitTxsResponse
	(*GetConnectorsRequest)(nil),              // 6: ark.v1.GetConnectorsRequest
	(*GetConnectorsResponse)(nil),             // 7: ark.v1.GetConnectorsResponse
	(*GetVtxoTreeRequest)(nil),                // 8: ark.v1.GetVtxoTreeRequest
	(*GetVtxoTreeResponse)(nil),               // 9: ark.v1.GetVtxoTreeResponse
	(*GetVtxoTreeLeavesRequest)(nil),          // 10: ark.v1.GetVtxoTreeLeavesRequest
	(*GetVtxoTreeLeavesResponse)(nil),         // 11: ark.v1.GetVtxoTreeLeavesResponse
	(*GetVtxosRequest)(nil),                   // 12: ark.v1.GetVtxosRequest
	(*GetVtxosResponse)(nil),                  // 13: ark.v1.GetVtxosResponse
	(*GetVtxoChainRequest)(nil),               // 14: ark.v1.GetVtxoChainRequest
	(*GetVtxoChainResponse)(nil),              // 15: ark.v1.GetVtxoChainResponse
	(*GetVirtualTxsRequest)(nil),              // 16: ark.v1.GetVirtualTxsRequest
	(*GetVirtualTxsResponse)(nil),             // 17: ark.v1.GetVirtualTxsResponse
	(*GetBatchSweepTransactionsRequest)(nil),  // 18: ark.v1.GetBatchSweepTransactionsRequest
	(*GetBatchSweepTransactionsResponse)(nil), // 19: ark.v1.GetBatchSweepTransactionsResponse
	(*IndexerBatch)(nil),                      // 20: ark.v1.IndexerBatch
	(*IndexerOutpoint)(nil),                   // 21: ark.v1.IndexerOutpoint
	(*IndexerNode)(nil),                       // 22: ark.v1.IndexerNode
	(*IndexerVtxo)(nil),                       // 23: ark.v1.IndexerVtxo
	(*IndexerChain)(nil),                      // 24: ark.v1.IndexerChain
	(*IndexerTxHistoryRecord)(nil),            // 25: ark.v1.IndexerTxHistoryRecord
	(*IndexerPageRequest)(nil),                // 26: ark.v1.IndexerPageRequest
	(*IndexerPageResponse)(nil),               // 27: ark.v1.IndexerPageResponse
	(*SubscribeForScriptsRequest)(nil),        // 28: ark.v1.SubscribeForScriptsRequest
	(*SubscribeForScriptsResponse)(nil),       // 29: ark.v1.SubscribeForScriptsResponse
	(*UnsubscribeForScriptsRequest)(nil),      // 30: ark.v1.UnsubscribeForScriptsRequest
	(*UnsubscribeForScriptsResponse)(nil),     // 31: ark.v1.UnsubscribeForScriptsResponse
	(*GetSubscriptionRequest)(nil),            // 32: ark.v1.GetSubscriptionRequest
	(*GetSubscriptionResponse)(nil),           // 33: ark.v1.GetSubscriptionResponse
	(*IndexerTxData)(nil),                     // 34: ark.v1.IndexerTxData
	nil,                                       // 35: ark.v1.GetCommitmentTxResponse.BatchesEntry
	nil,                                       // 36: ark.v1.IndexerNode.ChildrenEntry
	nil,                                       // 37: ark.v1.GetSubscriptionResponse.CheckpointTxsEntry
}
var file_ark_v1_indexer_proto_depIdxs = []int32{
	35, // 0: ark.v1.GetCommitmentTxResponse.batches:type_name -> ark.v1.GetCommitmentTxResponse.BatchesEntry
	26, // 1: ark.v1.GetForfeitTxsRequest.page:type_name -> ark.v1.IndexerPageRequest
	27, // 2: ark.v1.GetForfeitTxsResponse.page:type_name -> ark.v1.IndexerPageResponse
	26, // 3: ark.v1.GetConnectorsRequest.page:type_name -> ark.v1.IndexerPageRequest
	22, // 4: ark.v1.GetConnectorsResponse.connectors:type_name -> ark.v1.IndexerNode
	27, // 5: ark.v1.GetConnectorsResponse.page:type_name -> ark.v1.IndexerPageResponse
	21, // 6: ark.v1.GetVtxoTreeRequest.batch_outpoint:type_name -> ark.v1.IndexerOutpoint
	26, // 7: ark.v1.GetVtxoTreeRequest.page:type_name -> ark.v1.IndexerPageRequest
	22, // 8: ark.v1.GetVtxoTreeResponse.vtxo_tree:type_name -> ark.v1.IndexerNode
	27, // 9: ark.v1.GetVtxoTreeResponse.page:type_name -> ark.v1.IndexerPageResponse
	21, // 10: ark.v1.GetVtxoTreeLeavesRequest.batch_outpoint:type_name -> ark.v1.IndexerOutpoint
	26, // 11: ark.v1.GetVtxoTreeLeavesRequest.page:type_name -> ark.v1.IndexerPageRequest
	21, // 12: ark.v1.GetVtxoTreeLeavesResponse.leaves:type_name -> ark.v1.IndexerOutpoint
	27, // 13: ark.v1.GetVtxoTreeLeavesResponse.page:type_name -> ark.v1.IndexerPageResponse
	26, // 14: ark.v1.GetVtxosRequest.page:type_name -> ark.v1.IndexerPageRequest
	23, // 15: ark.v1.GetVtxosResponse.vtxos:type_name -> ark.v1.IndexerVtxo
	27, // 16: ark.v1.GetVtxosResponse.page:type_name -> ark.v1.IndexerPageResponse
	21, // 17: ark.v1.GetVtxoChainRequest.outpoint:type_name -> ark.v1.IndexerOutpoint
	26, // 18: ark.v1.GetVtxoChainRequest.page:type_name -> ark.v1.IndexerPageRequest
	24, // 19: ark.v1.GetVtxoChainResponse.chain:type_name -> ark.v1.IndexerChain
	27, // 20: ark.v1.GetVtxoChainResponse.page:type_name -> ark.v1.IndexerPageResponse
	26, // 21: ark.v1.GetVirtualTxsRequest.page:type_name -> ark.v1.IndexerPageRequest
	27, // 22: ark.v1.GetVirtualTxsResponse.page:type_name -> ark.v1.IndexerPageResponse
	21, // 23: ark.v1.GetBatchSweepTransactionsRequest.batch_outpoint:type_name -> ark.v1.IndexerOutpoint
	36, // 24: ark.v1.IndexerNode.children:type_name -> ark.v1.IndexerNode.ChildrenEntry
	21, // 25: ark.v1.IndexerVtxo.outpoint:type_name -> ark.v1.IndexerOutpoint
	1,  // 26: ark.v1.IndexerChain.type:type_name -> ark.v1.IndexerChainedTxType
	0,  // 27: ark.v1.IndexerTxHistoryRecord.type:type_name -> ark.v1.IndexerTxType
	23, // 28: ark.v1.GetSubscriptionResponse.new_vtxos:type_name -> ark.v1.IndexerVtxo
	23, // 29: ark.v1.GetSubscriptionResponse.spent_vtxos:type_name -> ark.v1.IndexerVtxo
	37, // 30: ark.v1.GetSubscriptionResponse.checkpoint_txs:type_name -> ark.v1.GetSubscriptionResponse.CheckpointTxsEntry
	23, // 31: ark.v1.GetSubscriptionResponse.swept_vtxos:type_name -> ark.v1.IndexerVtxo
	20, // 32: ark.v1.GetCommitmentTxResponse.BatchesEntry.value:type_name -> ark.v1.IndexerBatch
	34, // 33: ark.v1.GetSubscriptionResponse.CheckpointTxsEntry.value:type_name -> ark.v1.IndexerTxData
	2,  // 34: ark.v1.IndexerService.GetCommitmentTx:input_type -> ark.v1.GetCommitmentTxRequest
	4,  // 35: ark.v1.IndexerService.GetForfeitTxs:input_type -> ark.v1.GetForfeitTxsRequest
	6,  // 36: ark.v1.IndexerService.GetConnectors:input_type -> ark.v1.GetConnectorsRequest
	8,  // 37: ark.v1.IndexerService.GetVtxoTree:input_type -> ark.v1.GetVtxoTreeRequest
	10, // 38: ark.v1.IndexerService.GetVtxoTreeLeaves:input_type -> ark.v1.GetVtxoTreeLeavesRequest
	12, // 39: ark.v1.IndexerService.GetVtxos:input_type -> ark.v1.GetVtxosRequest
	14, // 40: ark.v1.IndexerService.GetVtxoChain:input_type -> ark.v1.GetVtxoChainRequest
	16, // 41: ark.v1.IndexerService.GetVirtualTxs:input_type -> ark.v1.GetVirtualTxsRequest
	18, // 42: ark.v1.IndexerService.GetBatchSweepTransactions:input_type -> ark.v1.GetBatchSweepTransactionsRequest
	28, // 43: ark.v1.IndexerService.SubscribeForScripts:input_type -> ark.v1.SubscribeForScriptsRequest
	30, // 44: ark.v1.IndexerService.UnsubscribeForScripts:input_type -> ark.v1.UnsubscribeForScriptsRequest
	32, // 45: ark.v1.IndexerService.GetSubscription:input_type -> ark.v1.GetSubscriptionRequest
	3,  // 46: ark.v1.IndexerService.GetCommitmentTx:output_type -> ark.v1.GetCommitmentTxResponse
	5,  // 47: ark.v1.IndexerService.GetForfeitTxs:output_type -> ark.v1.GetForfeitTxsResponse
	7,  // 48: ark.v1.IndexerService.GetConnectors:output_type -> ark.v1.GetConnectorsResponse
	9,  // 49: ark.v1.IndexerService.GetVtxoTree:output_type -> ark.v1.GetVtxoTreeResponse
	11, // 50: ark.v1.IndexerService.GetVtxoTreeLeaves:output_type -> ark.v1.GetVtxoTreeLeavesResponse
	13, // 51: ark.v1.IndexerService.GetVtxos:output_type -> ark.v1.GetVtxosResponse
	15, // 52: ark.v1.IndexerService.GetVtxoChain:output_type -> ark.v1.GetVtxoChainResponse
	17, // 53: ark.v1.IndexerService.GetVirtualTxs:output_type -> ark.v1.GetVirtualTxsResponse
	19, // 54: ark.v1.IndexerService.GetBatchSweepTransactions:output_type -> ark.v1.GetBatchSweepTransactionsResponse
	29, // 55: ark.v1.IndexerService.SubscribeForScripts:output_type -> ark.v1.SubscribeForScriptsResponse
	31, // 56: ark.v1.IndexerService.UnsubscribeForScripts:output_type -> ark.v1.UnsubscribeForScriptsResponse
	33, // 57: ark.v1.IndexerService.GetSubscription:output_type -> ark.v1.GetSubscriptionResponse
	46, // [46:58] is the sub-list for method output_type
	34, // [34:46] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_ark_v1_indexer_proto_init() }
func file_ark_v1_indexer_proto_init() {
	if File_ark_v1_indexer_proto != nil {
		return
	}
	file_ark_v1_indexer_proto_msgTypes[23].OneofWrappers = []any{
		(*IndexerTxHistoryRecord_CommitmentTxid)(nil),
		(*IndexerTxHistoryRecord_VirtualTxid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ark_v1_indexer_proto_rawDesc), len(file_ark_v1_indexer_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ark_v1_indexer_proto_goTypes,
		DependencyIndexes: file_ark_v1_indexer_proto_depIdxs,
		EnumInfos:         file_ark_v1_indexer_proto_enumTypes,
		MessageInfos:      file_ark_v1_indexer_proto_msgTypes,
	}.Build()
	File_ark_v1_indexer_proto = out.File
	file_ark_v1_indexer_proto_goTypes = nil
	file_ark_v1_indexer_proto_depIdxs = nil
}
