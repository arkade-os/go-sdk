// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: indexer/v1/types.proto

package indexerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TxType int32

const (
	TxType_TX_TYPE_UNSPECIFIED TxType = 0
	TxType_TX_TYPE_RECEIVED    TxType = 1
	TxType_TX_TYPE_SENT        TxType = 2
)

// Enum value maps for TxType.
var (
	TxType_name = map[int32]string{
		0: "TX_TYPE_UNSPECIFIED",
		1: "TX_TYPE_RECEIVED",
		2: "TX_TYPE_SENT",
	}
	TxType_value = map[string]int32{
		"TX_TYPE_UNSPECIFIED": 0,
		"TX_TYPE_RECEIVED":    1,
		"TX_TYPE_SENT":        2,
	}
)

func (x TxType) Enum() *TxType {
	p := new(TxType)
	*p = x
	return p
}

func (x TxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxType) Descriptor() protoreflect.EnumDescriptor {
	return file_indexer_v1_types_proto_enumTypes[0].Descriptor()
}

func (TxType) Type() protoreflect.EnumType {
	return &file_indexer_v1_types_proto_enumTypes[0]
}

func (x TxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxType.Descriptor instead.
func (TxType) EnumDescriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{0}
}

type ChainedTxType int32

const (
	ChainedTxType_CHAINED_TX_TYPE_UNSPECIFIED ChainedTxType = 0
	ChainedTxType_CHAINED_TX_TYPE_COMMITMENT  ChainedTxType = 1
	ChainedTxType_CHAINED_TX_TYPE_ARK         ChainedTxType = 2
	ChainedTxType_CHAINED_TX_TYPE_TREE        ChainedTxType = 3
	ChainedTxType_CHAINED_TX_TYPE_CHECKPOINT  ChainedTxType = 4
)

// Enum value maps for ChainedTxType.
var (
	ChainedTxType_name = map[int32]string{
		0: "CHAINED_TX_TYPE_UNSPECIFIED",
		1: "CHAINED_TX_TYPE_COMMITMENT",
		2: "CHAINED_TX_TYPE_ARK",
		3: "CHAINED_TX_TYPE_TREE",
		4: "CHAINED_TX_TYPE_CHECKPOINT",
	}
	ChainedTxType_value = map[string]int32{
		"CHAINED_TX_TYPE_UNSPECIFIED": 0,
		"CHAINED_TX_TYPE_COMMITMENT":  1,
		"CHAINED_TX_TYPE_ARK":         2,
		"CHAINED_TX_TYPE_TREE":        3,
		"CHAINED_TX_TYPE_CHECKPOINT":  4,
	}
)

func (x ChainedTxType) Enum() *ChainedTxType {
	p := new(ChainedTxType)
	*p = x
	return p
}

func (x ChainedTxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChainedTxType) Descriptor() protoreflect.EnumDescriptor {
	return file_indexer_v1_types_proto_enumTypes[1].Descriptor()
}

func (ChainedTxType) Type() protoreflect.EnumType {
	return &file_indexer_v1_types_proto_enumTypes[1]
}

func (x ChainedTxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChainedTxType.Descriptor instead.
func (ChainedTxType) EnumDescriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{1}
}

type Batch struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalOutputAmount uint64                 `protobuf:"varint,1,opt,name=total_output_amount,json=totalOutputAmount,proto3" json:"total_output_amount,omitempty"`
	TotalOutputVtxos  int32                  `protobuf:"varint,2,opt,name=total_output_vtxos,json=totalOutputVtxos,proto3" json:"total_output_vtxos,omitempty"`
	ExpiresAt         int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Swept             bool                   `protobuf:"varint,4,opt,name=swept,proto3" json:"swept,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Batch) Reset() {
	*x = Batch{}
	mi := &file_indexer_v1_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *Batch) GetTotalOutputAmount() uint64 {
	if x != nil {
		return x.TotalOutputAmount
	}
	return 0
}

func (x *Batch) GetTotalOutputVtxos() int32 {
	if x != nil {
		return x.TotalOutputVtxos
	}
	return 0
}

func (x *Batch) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *Batch) GetSwept() bool {
	if x != nil {
		return x.Swept
	}
	return false
}

type Outpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Outpoint) Reset() {
	*x = Outpoint{}
	mi := &file_indexer_v1_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Outpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Outpoint) ProtoMessage() {}

func (x *Outpoint) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Outpoint.ProtoReflect.Descriptor instead.
func (*Outpoint) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *Outpoint) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Outpoint) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Children      map[uint32]string      `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // vout -> txid
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_indexer_v1_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *Node) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Node) GetChildren() map[uint32]string {
	if x != nil {
		return x.Children
	}
	return nil
}

type Vtxo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Outpoint        *Outpoint              `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	CreatedAt       int64                  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt       int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Amount          uint64                 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Script          string                 `protobuf:"bytes,5,opt,name=script,proto3" json:"script,omitempty"`
	IsPreconfirmed  bool                   `protobuf:"varint,6,opt,name=is_preconfirmed,json=isPreconfirmed,proto3" json:"is_preconfirmed,omitempty"`
	IsSwept         bool                   `protobuf:"varint,7,opt,name=is_swept,json=isSwept,proto3" json:"is_swept,omitempty"`
	IsUnrolled      bool                   `protobuf:"varint,8,opt,name=is_unrolled,json=isUnrolled,proto3" json:"is_unrolled,omitempty"`
	IsSpent         bool                   `protobuf:"varint,9,opt,name=is_spent,json=isSpent,proto3" json:"is_spent,omitempty"`
	SpentBy         string                 `protobuf:"bytes,10,opt,name=spent_by,json=spentBy,proto3" json:"spent_by,omitempty"`
	CommitmentTxids []string               `protobuf:"bytes,11,rep,name=commitment_txids,json=commitmentTxids,proto3" json:"commitment_txids,omitempty"`
	SettledBy       string                 `protobuf:"bytes,12,opt,name=settled_by,json=settledBy,proto3" json:"settled_by,omitempty"`
	ArkTxid         string                 `protobuf:"bytes,13,opt,name=ark_txid,json=arkTxid,proto3" json:"ark_txid,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Vtxo) Reset() {
	*x = Vtxo{}
	mi := &file_indexer_v1_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vtxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vtxo) ProtoMessage() {}

func (x *Vtxo) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vtxo.ProtoReflect.Descriptor instead.
func (*Vtxo) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *Vtxo) GetOutpoint() *Outpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *Vtxo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Vtxo) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *Vtxo) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Vtxo) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *Vtxo) GetIsPreconfirmed() bool {
	if x != nil {
		return x.IsPreconfirmed
	}
	return false
}

func (x *Vtxo) GetIsSwept() bool {
	if x != nil {
		return x.IsSwept
	}
	return false
}

func (x *Vtxo) GetIsUnrolled() bool {
	if x != nil {
		return x.IsUnrolled
	}
	return false
}

func (x *Vtxo) GetIsSpent() bool {
	if x != nil {
		return x.IsSpent
	}
	return false
}

func (x *Vtxo) GetSpentBy() string {
	if x != nil {
		return x.SpentBy
	}
	return ""
}

func (x *Vtxo) GetCommitmentTxids() []string {
	if x != nil {
		return x.CommitmentTxids
	}
	return nil
}

func (x *Vtxo) GetSettledBy() string {
	if x != nil {
		return x.SettledBy
	}
	return ""
}

func (x *Vtxo) GetArkTxid() string {
	if x != nil {
		return x.ArkTxid
	}
	return ""
}

type Chain struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Txid      string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	ExpiresAt int64                  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Type      ChainedTxType          `protobuf:"varint,3,opt,name=type,proto3,enum=indexer.v1.ChainedTxType" json:"type,omitempty"`
	// txids of the transactions in the chain used as input of the current tx
	Spends        []string `protobuf:"bytes,4,rep,name=spends,proto3" json:"spends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chain) Reset() {
	*x = Chain{}
	mi := &file_indexer_v1_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *Chain) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Chain) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *Chain) GetType() ChainedTxType {
	if x != nil {
		return x.Type
	}
	return ChainedTxType_CHAINED_TX_TYPE_UNSPECIFIED
}

func (x *Chain) GetSpends() []string {
	if x != nil {
		return x.Spends
	}
	return nil
}

type TxHistoryRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Key:
	//
	//	*TxHistoryRecord_CommitmentTxid
	//	*TxHistoryRecord_VirtualTxid
	Key           isTxHistoryRecord_Key `protobuf_oneof:"key"`
	Type          TxType                `protobuf:"varint,3,opt,name=type,proto3,enum=indexer.v1.TxType" json:"type,omitempty"`
	Amount        uint64                `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt     int64                 `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	IsSettled     bool                  `protobuf:"varint,6,opt,name=is_settled,json=isSettled,proto3" json:"is_settled,omitempty"`
	SettledBy     string                `protobuf:"bytes,7,opt,name=settled_by,json=settledBy,proto3" json:"settled_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxHistoryRecord) Reset() {
	*x = TxHistoryRecord{}
	mi := &file_indexer_v1_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxHistoryRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxHistoryRecord) ProtoMessage() {}

func (x *TxHistoryRecord) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxHistoryRecord.ProtoReflect.Descriptor instead.
func (*TxHistoryRecord) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{5}
}

func (x *TxHistoryRecord) GetKey() isTxHistoryRecord_Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TxHistoryRecord) GetCommitmentTxid() string {
	if x != nil {
		if x, ok := x.Key.(*TxHistoryRecord_CommitmentTxid); ok {
			return x.CommitmentTxid
		}
	}
	return ""
}

func (x *TxHistoryRecord) GetVirtualTxid() string {
	if x != nil {
		if x, ok := x.Key.(*TxHistoryRecord_VirtualTxid); ok {
			return x.VirtualTxid
		}
	}
	return ""
}

func (x *TxHistoryRecord) GetType() TxType {
	if x != nil {
		return x.Type
	}
	return TxType_TX_TYPE_UNSPECIFIED
}

func (x *TxHistoryRecord) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TxHistoryRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TxHistoryRecord) GetIsSettled() bool {
	if x != nil {
		return x.IsSettled
	}
	return false
}

func (x *TxHistoryRecord) GetSettledBy() string {
	if x != nil {
		return x.SettledBy
	}
	return ""
}

type isTxHistoryRecord_Key interface {
	isTxHistoryRecord_Key()
}

type TxHistoryRecord_CommitmentTxid struct {
	CommitmentTxid string `protobuf:"bytes,1,opt,name=commitment_txid,json=commitmentTxid,proto3,oneof"`
}

type TxHistoryRecord_VirtualTxid struct {
	VirtualTxid string `protobuf:"bytes,2,opt,name=virtual_txid,json=virtualTxid,proto3,oneof"`
}

func (*TxHistoryRecord_CommitmentTxid) isTxHistoryRecord_Key() {}

func (*TxHistoryRecord_VirtualTxid) isTxHistoryRecord_Key() {}

type PageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          int32                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Index         int32                  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageRequest) Reset() {
	*x = PageRequest{}
	mi := &file_indexer_v1_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRequest) ProtoMessage() {}

func (x *PageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRequest.ProtoReflect.Descriptor instead.
func (*PageRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{6}
}

func (x *PageRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type PageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       int32                  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Next          int32                  `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	Total         int32                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageResponse) Reset() {
	*x = PageResponse{}
	mi := &file_indexer_v1_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageResponse) ProtoMessage() {}

func (x *PageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageResponse.ProtoReflect.Descriptor instead.
func (*PageResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{7}
}

func (x *PageResponse) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PageResponse) GetNext() int32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *PageResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TxData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Tx            string                 `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxData) Reset() {
	*x = TxData{}
	mi := &file_indexer_v1_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxData) ProtoMessage() {}

func (x *TxData) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxData.ProtoReflect.Descriptor instead.
func (*TxData) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{8}
}

func (x *TxData) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *TxData) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_indexer_v1_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{9}
}

type SubscriptionEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Scripts       []string               `protobuf:"bytes,2,rep,name=scripts,proto3" json:"scripts,omitempty"`
	NewVtxos      []*Vtxo                `protobuf:"bytes,3,rep,name=new_vtxos,json=newVtxos,proto3" json:"new_vtxos,omitempty"`
	SpentVtxos    []*Vtxo                `protobuf:"bytes,4,rep,name=spent_vtxos,json=spentVtxos,proto3" json:"spent_vtxos,omitempty"`
	Tx            string                 `protobuf:"bytes,5,opt,name=tx,proto3" json:"tx,omitempty"`
	CheckpointTxs map[string]*TxData     `protobuf:"bytes,6,rep,name=checkpoint_txs,json=checkpointTxs,proto3" json:"checkpoint_txs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SweptVtxos    []*Vtxo                `protobuf:"bytes,7,rep,name=swept_vtxos,json=sweptVtxos,proto3" json:"swept_vtxos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionEvent) Reset() {
	*x = SubscriptionEvent{}
	mi := &file_indexer_v1_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionEvent) ProtoMessage() {}

func (x *SubscriptionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionEvent.ProtoReflect.Descriptor instead.
func (*SubscriptionEvent) Descriptor() ([]byte, []int) {
	return file_indexer_v1_types_proto_rawDescGZIP(), []int{10}
}

func (x *SubscriptionEvent) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *SubscriptionEvent) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *SubscriptionEvent) GetNewVtxos() []*Vtxo {
	if x != nil {
		return x.NewVtxos
	}
	return nil
}

func (x *SubscriptionEvent) GetSpentVtxos() []*Vtxo {
	if x != nil {
		return x.SpentVtxos
	}
	return nil
}

func (x *SubscriptionEvent) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

func (x *SubscriptionEvent) GetCheckpointTxs() map[string]*TxData {
	if x != nil {
		return x.CheckpointTxs
	}
	return nil
}

func (x *SubscriptionEvent) GetSweptVtxos() []*Vtxo {
	if x != nil {
		return x.SweptVtxos
	}
	return nil
}

var File_indexer_v1_types_proto protoreflect.FileDescriptor

const file_indexer_v1_types_proto_rawDesc = "" +
	"\n" +
	"\x16indexer/v1/types.proto\x12\n" +
	"indexer.v1\"\x9a\x01\n" +
	"\x05Batch\x12.\n" +
	"\x13total_output_amount\x18\x01 \x01(\x04R\x11totalOutputAmount\x12,\n" +
	"\x12total_output_vtxos\x18\x02 \x01(\x05R\x10totalOutputVtxos\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\x12\x14\n" +
	"\x05swept\x18\x04 \x01(\bR\x05swept\"2\n" +
	"\bOutpoint\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\"\x93\x01\n" +
	"\x04Node\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12:\n" +
	"\bchildren\x18\x02 \x03(\v2\x1e.indexer.v1.Node.ChildrenEntryR\bchildren\x1a;\n" +
	"\rChildrenEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x03\n" +
	"\x04Vtxo\x120\n" +
	"\boutpoint\x18\x01 \x01(\v2\x14.indexer.v1.OutpointR\boutpoint\x12\x1d\n" +
	"\n" +
	"created_at\x18\x02 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x04R\x06amount\x12\x16\n" +
	"\x06script\x18\x05 \x01(\tR\x06script\x12'\n" +
	"\x0fis_preconfirmed\x18\x06 \x01(\bR\x0eisPreconfirmed\x12\x19\n" +
	"\bis_swept\x18\a \x01(\bR\aisSwept\x12\x1f\n" +
	"\vis_unrolled\x18\b \x01(\bR\n" +
	"isUnrolled\x12\x19\n" +
	"\bis_spent\x18\t \x01(\bR\aisSpent\x12\x19\n" +
	"\bspent_by\x18\n" +
	" \x01(\tR\aspentBy\x12)\n" +
	"\x10commitment_txids\x18\v \x03(\tR\x0fcommitmentTxids\x12\x1d\n" +
	"\n" +
	"settled_by\x18\f \x01(\tR\tsettledBy\x12\x19\n" +
	"\bark_txid\x18\r \x01(\tR\aarkTxid\"\x81\x01\n" +
	"\x05Chain\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\x12-\n" +
	"\x04type\x18\x03 \x01(\x0e2\x19.indexer.v1.ChainedTxTypeR\x04type\x12\x16\n" +
	"\x06spends\x18\x04 \x03(\tR\x06spends\"\x85\x02\n" +
	"\x0fTxHistoryRecord\x12)\n" +
	"\x0fcommitment_txid\x18\x01 \x01(\tH\x00R\x0ecommitmentTxid\x12#\n" +
	"\fvirtual_txid\x18\x02 \x01(\tH\x00R\vvirtualTxid\x12&\n" +
	"\x04type\x18\x03 \x01(\x0e2\x12.indexer.v1.TxTypeR\x04type\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x04R\x06amount\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"is_settled\x18\x06 \x01(\bR\tisSettled\x12\x1d\n" +
	"\n" +
	"settled_by\x18\a \x01(\tR\tsettledByB\x05\n" +
	"\x03key\"7\n" +
	"\vPageRequest\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x05R\x04size\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x05R\x05index\"R\n" +
	"\fPageResponse\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x05R\acurrent\x12\x12\n" +
	"\x04next\x18\x02 \x01(\x05R\x04next\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x05R\x05total\",\n" +
	"\x06TxData\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x0e\n" +
	"\x02tx\x18\x02 \x01(\tR\x02tx\"\v\n" +
	"\tHeartbeat\"\x95\x03\n" +
	"\x11SubscriptionEvent\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x18\n" +
	"\ascripts\x18\x02 \x03(\tR\ascripts\x12-\n" +
	"\tnew_vtxos\x18\x03 \x03(\v2\x10.indexer.v1.VtxoR\bnewVtxos\x121\n" +
	"\vspent_vtxos\x18\x04 \x03(\v2\x10.indexer.v1.VtxoR\n" +
	"spentVtxos\x12\x0e\n" +
	"\x02tx\x18\x05 \x01(\tR\x02tx\x12W\n" +
	"\x0echeckpoint_txs\x18\x06 \x03(\v20.indexer.v1.SubscriptionEvent.CheckpointTxsEntryR\rcheckpointTxs\x121\n" +
	"\vswept_vtxos\x18\a \x03(\v2\x10.indexer.v1.VtxoR\n" +
	"sweptVtxos\x1aT\n" +
	"\x12CheckpointTxsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.indexer.v1.TxDataR\x05value:\x028\x01*I\n" +
	"\x06TxType\x12\x17\n" +
	"\x13TX_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10TX_TYPE_RECEIVED\x10\x01\x12\x10\n" +
	"\fTX_TYPE_SENT\x10\x02*\xa3\x01\n" +
	"\rChainedTxType\x12\x1f\n" +
	"\x1bCHAINED_TX_TYPE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aCHAINED_TX_TYPE_COMMITMENT\x10\x01\x12\x17\n" +
	"\x13CHAINED_TX_TYPE_ARK\x10\x02\x12\x18\n" +
	"\x14CHAINED_TX_TYPE_TREE\x10\x03\x12\x1e\n" +
	"\x1aCHAINED_TX_TYPE_CHECKPOINT\x10\x04B\xad\x01\n" +
	"\x0ecom.indexer.v1B\n" +
	"TypesProtoP\x01ZFgithub.com/arkade-os/go-sdk/api-spec/protobuf/gen/indexer/v1;indexerv1\xa2\x02\x03IXX\xaa\x02\n" +
	"Indexer.V1\xca\x02\n" +
	"Indexer\\V1\xe2\x02\x16Indexer\\V1\\GPBMetadata\xea\x02\vIndexer::V1b\x06proto3"

var (
	file_indexer_v1_types_proto_rawDescOnce sync.Once
	file_indexer_v1_types_proto_rawDescData []byte
)

func file_indexer_v1_types_proto_rawDescGZIP() []byte {
	file_indexer_v1_types_proto_rawDescOnce.Do(func() {
		file_indexer_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_indexer_v1_types_proto_rawDesc), len(file_indexer_v1_types_proto_rawDesc)))
	})
	return file_indexer_v1_types_proto_rawDescData
}

var file_indexer_v1_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_indexer_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_indexer_v1_types_proto_goTypes = []any{
	(TxType)(0),               // 0: indexer.v1.TxType
	(ChainedTxType)(0),        // 1: indexer.v1.ChainedTxType
	(*Batch)(nil),             // 2: indexer.v1.Batch
	(*Outpoint)(nil),          // 3: indexer.v1.Outpoint
	(*Node)(nil),              // 4: indexer.v1.Node
	(*Vtxo)(nil),              // 5: indexer.v1.Vtxo
	(*Chain)(nil),             // 6: indexer.v1.Chain
	(*TxHistoryRecord)(nil),   // 7: indexer.v1.TxHistoryRecord
	(*PageRequest)(nil),       // 8: indexer.v1.PageRequest
	(*PageResponse)(nil),      // 9: indexer.v1.PageResponse
	(*TxData)(nil),            // 10: indexer.v1.TxData
	(*Heartbeat)(nil),         // 11: indexer.v1.Heartbeat
	(*SubscriptionEvent)(nil), // 12: indexer.v1.SubscriptionEvent
	nil,                       // 13: indexer.v1.Node.ChildrenEntry
	nil,                       // 14: indexer.v1.SubscriptionEvent.CheckpointTxsEntry
}
var file_indexer_v1_types_proto_depIdxs = []int32{
	13, // 0: indexer.v1.Node.children:type_name -> indexer.v1.Node.ChildrenEntry
	3,  // 1: indexer.v1.Vtxo.outpoint:type_name -> indexer.v1.Outpoint
	1,  // 2: indexer.v1.Chain.type:type_name -> indexer.v1.ChainedTxType
	0,  // 3: indexer.v1.TxHistoryRecord.type:type_name -> indexer.v1.TxType
	5,  // 4: indexer.v1.SubscriptionEvent.new_vtxos:type_name -> indexer.v1.Vtxo
	5,  // 5: indexer.v1.SubscriptionEvent.spent_vtxos:type_name -> indexer.v1.Vtxo
	14, // 6: indexer.v1.SubscriptionEvent.checkpoint_txs:type_name -> indexer.v1.SubscriptionEvent.CheckpointTxsEntry
	5,  // 7: indexer.v1.SubscriptionEvent.swept_vtxos:type_name -> indexer.v1.Vtxo
	10, // 8: indexer.v1.SubscriptionEvent.CheckpointTxsEntry.value:type_name -> indexer.v1.TxData
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_indexer_v1_types_proto_init() }
func file_indexer_v1_types_proto_init() {
	if File_indexer_v1_types_proto != nil {
		return
	}
	file_indexer_v1_types_proto_msgTypes[5].OneofWrappers = []any{
		(*TxHistoryRecord_CommitmentTxid)(nil),
		(*TxHistoryRecord_VirtualTxid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_indexer_v1_types_proto_rawDesc), len(file_indexer_v1_types_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_indexer_v1_types_proto_goTypes,
		DependencyIndexes: file_indexer_v1_types_proto_depIdxs,
		EnumInfos:         file_indexer_v1_types_proto_enumTypes,
		MessageInfos:      file_indexer_v1_types_proto_msgTypes,
	}.Build()
	File_indexer_v1_types_proto = out.File
	file_indexer_v1_types_proto_goTypes = nil
	file_indexer_v1_types_proto_depIdxs = nil
}
