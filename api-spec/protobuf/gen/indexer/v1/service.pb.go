// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: indexer/v1/service.proto

package indexerv1

import (
	_ "github.com/meshapi/grpc-api-gateway/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCommitmentTxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommitmentTxRequest) Reset() {
	*x = GetCommitmentTxRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommitmentTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitmentTxRequest) ProtoMessage() {}

func (x *GetCommitmentTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitmentTxRequest.ProtoReflect.Descriptor instead.
func (*GetCommitmentTxRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetCommitmentTxRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type GetCommitmentTxResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StartedAt         int64                  `protobuf:"varint,1,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt           int64                  `protobuf:"varint,2,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
	Batches           map[uint32]*Batch      `protobuf:"bytes,3,rep,name=batches,proto3" json:"batches,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TotalInputAmount  uint64                 `protobuf:"varint,4,opt,name=total_input_amount,json=totalInputAmount,proto3" json:"total_input_amount,omitempty"`
	TotalInputVtxos   int32                  `protobuf:"varint,5,opt,name=total_input_vtxos,json=totalInputVtxos,proto3" json:"total_input_vtxos,omitempty"`
	TotalOutputAmount uint64                 `protobuf:"varint,6,opt,name=total_output_amount,json=totalOutputAmount,proto3" json:"total_output_amount,omitempty"`
	TotalOutputVtxos  int32                  `protobuf:"varint,7,opt,name=total_output_vtxos,json=totalOutputVtxos,proto3" json:"total_output_vtxos,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetCommitmentTxResponse) Reset() {
	*x = GetCommitmentTxResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommitmentTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitmentTxResponse) ProtoMessage() {}

func (x *GetCommitmentTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitmentTxResponse.ProtoReflect.Descriptor instead.
func (*GetCommitmentTxResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCommitmentTxResponse) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetBatches() map[uint32]*Batch {
	if x != nil {
		return x.Batches
	}
	return nil
}

func (x *GetCommitmentTxResponse) GetTotalInputAmount() uint64 {
	if x != nil {
		return x.TotalInputAmount
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetTotalInputVtxos() int32 {
	if x != nil {
		return x.TotalInputVtxos
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetTotalOutputAmount() uint64 {
	if x != nil {
		return x.TotalOutputAmount
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetTotalOutputVtxos() int32 {
	if x != nil {
		return x.TotalOutputVtxos
	}
	return 0
}

type GetForfeitTxsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Page          *PageRequest           `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetForfeitTxsRequest) Reset() {
	*x = GetForfeitTxsRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetForfeitTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForfeitTxsRequest) ProtoMessage() {}

func (x *GetForfeitTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForfeitTxsRequest.ProtoReflect.Descriptor instead.
func (*GetForfeitTxsRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetForfeitTxsRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetForfeitTxsRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetForfeitTxsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txids         []string               `protobuf:"bytes,1,rep,name=txids,proto3" json:"txids,omitempty"`
	Page          *PageResponse          `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetForfeitTxsResponse) Reset() {
	*x = GetForfeitTxsResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetForfeitTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForfeitTxsResponse) ProtoMessage() {}

func (x *GetForfeitTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForfeitTxsResponse.ProtoReflect.Descriptor instead.
func (*GetForfeitTxsResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetForfeitTxsResponse) GetTxids() []string {
	if x != nil {
		return x.Txids
	}
	return nil
}

func (x *GetForfeitTxsResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetConnectorsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Page          *PageRequest           `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConnectorsRequest) Reset() {
	*x = GetConnectorsRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnectorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectorsRequest) ProtoMessage() {}

func (x *GetConnectorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectorsRequest.ProtoReflect.Descriptor instead.
func (*GetConnectorsRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetConnectorsRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetConnectorsRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetConnectorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connectors    []*Node                `protobuf:"bytes,1,rep,name=connectors,proto3" json:"connectors,omitempty"`
	Page          *PageResponse          `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConnectorsResponse) Reset() {
	*x = GetConnectorsResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnectorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectorsResponse) ProtoMessage() {}

func (x *GetConnectorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectorsResponse.ProtoReflect.Descriptor instead.
func (*GetConnectorsResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetConnectorsResponse) GetConnectors() []*Node {
	if x != nil {
		return x.Connectors
	}
	return nil
}

func (x *GetConnectorsResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoTreeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchOutpoint *Outpoint              `protobuf:"bytes,1,opt,name=batch_outpoint,json=batchOutpoint,proto3" json:"batch_outpoint,omitempty"`
	Page          *PageRequest           `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoTreeRequest) Reset() {
	*x = GetVtxoTreeRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoTreeRequest) ProtoMessage() {}

func (x *GetVtxoTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoTreeRequest.ProtoReflect.Descriptor instead.
func (*GetVtxoTreeRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetVtxoTreeRequest) GetBatchOutpoint() *Outpoint {
	if x != nil {
		return x.BatchOutpoint
	}
	return nil
}

func (x *GetVtxoTreeRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoTreeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VtxoTree      []*Node                `protobuf:"bytes,1,rep,name=vtxo_tree,json=vtxoTree,proto3" json:"vtxo_tree,omitempty"`
	Page          *PageResponse          `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoTreeResponse) Reset() {
	*x = GetVtxoTreeResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoTreeResponse) ProtoMessage() {}

func (x *GetVtxoTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoTreeResponse.ProtoReflect.Descriptor instead.
func (*GetVtxoTreeResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetVtxoTreeResponse) GetVtxoTree() []*Node {
	if x != nil {
		return x.VtxoTree
	}
	return nil
}

func (x *GetVtxoTreeResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoTreeLeavesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchOutpoint *Outpoint              `protobuf:"bytes,1,opt,name=batch_outpoint,json=batchOutpoint,proto3" json:"batch_outpoint,omitempty"`
	Page          *PageRequest           `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoTreeLeavesRequest) Reset() {
	*x = GetVtxoTreeLeavesRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoTreeLeavesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoTreeLeavesRequest) ProtoMessage() {}

func (x *GetVtxoTreeLeavesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoTreeLeavesRequest.ProtoReflect.Descriptor instead.
func (*GetVtxoTreeLeavesRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetVtxoTreeLeavesRequest) GetBatchOutpoint() *Outpoint {
	if x != nil {
		return x.BatchOutpoint
	}
	return nil
}

func (x *GetVtxoTreeLeavesRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoTreeLeavesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Leaves        []*Outpoint            `protobuf:"bytes,1,rep,name=leaves,proto3" json:"leaves,omitempty"`
	Page          *PageResponse          `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoTreeLeavesResponse) Reset() {
	*x = GetVtxoTreeLeavesResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoTreeLeavesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoTreeLeavesResponse) ProtoMessage() {}

func (x *GetVtxoTreeLeavesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoTreeLeavesResponse.ProtoReflect.Descriptor instead.
func (*GetVtxoTreeLeavesResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetVtxoTreeLeavesResponse) GetLeaves() []*Outpoint {
	if x != nil {
		return x.Leaves
	}
	return nil
}

func (x *GetVtxoTreeLeavesResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxosRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Either specify a list of vtxo scripts.
	Scripts []string `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
	// Or specify a list of vtxo outpoints. The 2 filters are mutually exclusive.
	Outpoints []string `protobuf:"bytes,2,rep,name=outpoints,proto3" json:"outpoints,omitempty"`
	// Retrieve only spendable vtxos
	SpendableOnly bool `protobuf:"varint,3,opt,name=spendable_only,json=spendableOnly,proto3" json:"spendable_only,omitempty"`
	// Retrieve only spent vtxos.
	SpentOnly bool `protobuf:"varint,4,opt,name=spent_only,json=spentOnly,proto3" json:"spent_only,omitempty"`
	// Retrieve only recoverable vtxos (notes, subdust or swept vtxos).
	// The 3 filters are mutually exclusive,
	RecoverableOnly bool         `protobuf:"varint,5,opt,name=recoverable_only,json=recoverableOnly,proto3" json:"recoverable_only,omitempty"`
	Page            *PageRequest `protobuf:"bytes,6,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetVtxosRequest) Reset() {
	*x = GetVtxosRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxosRequest) ProtoMessage() {}

func (x *GetVtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxosRequest.ProtoReflect.Descriptor instead.
func (*GetVtxosRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetVtxosRequest) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *GetVtxosRequest) GetOutpoints() []string {
	if x != nil {
		return x.Outpoints
	}
	return nil
}

func (x *GetVtxosRequest) GetSpendableOnly() bool {
	if x != nil {
		return x.SpendableOnly
	}
	return false
}

func (x *GetVtxosRequest) GetSpentOnly() bool {
	if x != nil {
		return x.SpentOnly
	}
	return false
}

func (x *GetVtxosRequest) GetRecoverableOnly() bool {
	if x != nil {
		return x.RecoverableOnly
	}
	return false
}

func (x *GetVtxosRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vtxos         []*Vtxo                `protobuf:"bytes,1,rep,name=vtxos,proto3" json:"vtxos,omitempty"`
	Page          *PageResponse          `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxosResponse) Reset() {
	*x = GetVtxosResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxosResponse) ProtoMessage() {}

func (x *GetVtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxosResponse.ProtoReflect.Descriptor instead.
func (*GetVtxosResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetVtxosResponse) GetVtxos() []*Vtxo {
	if x != nil {
		return x.Vtxos
	}
	return nil
}

func (x *GetVtxosResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoChainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Outpoint      *Outpoint              `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	Page          *PageRequest           `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoChainRequest) Reset() {
	*x = GetVtxoChainRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoChainRequest) ProtoMessage() {}

func (x *GetVtxoChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoChainRequest.ProtoReflect.Descriptor instead.
func (*GetVtxoChainRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetVtxoChainRequest) GetOutpoint() *Outpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *GetVtxoChainRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoChainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         []*Chain               `protobuf:"bytes,1,rep,name=chain,proto3" json:"chain,omitempty"`
	Page          *PageResponse          `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVtxoChainResponse) Reset() {
	*x = GetVtxoChainResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVtxoChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoChainResponse) ProtoMessage() {}

func (x *GetVtxoChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoChainResponse.ProtoReflect.Descriptor instead.
func (*GetVtxoChainResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetVtxoChainResponse) GetChain() []*Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *GetVtxoChainResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVirtualTxsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txids         []string               `protobuf:"bytes,1,rep,name=txids,proto3" json:"txids,omitempty"`
	Page          *PageRequest           `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVirtualTxsRequest) Reset() {
	*x = GetVirtualTxsRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualTxsRequest) ProtoMessage() {}

func (x *GetVirtualTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualTxsRequest.ProtoReflect.Descriptor instead.
func (*GetVirtualTxsRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetVirtualTxsRequest) GetTxids() []string {
	if x != nil {
		return x.Txids
	}
	return nil
}

func (x *GetVirtualTxsRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVirtualTxsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txs           []string               `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	Page          *PageResponse          `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVirtualTxsResponse) Reset() {
	*x = GetVirtualTxsResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualTxsResponse) ProtoMessage() {}

func (x *GetVirtualTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualTxsResponse.ProtoReflect.Descriptor instead.
func (*GetVirtualTxsResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetVirtualTxsResponse) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *GetVirtualTxsResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetBatchSweepTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchOutpoint *Outpoint              `protobuf:"bytes,1,opt,name=batch_outpoint,json=batchOutpoint,proto3" json:"batch_outpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBatchSweepTransactionsRequest) Reset() {
	*x = GetBatchSweepTransactionsRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchSweepTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchSweepTransactionsRequest) ProtoMessage() {}

func (x *GetBatchSweepTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchSweepTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetBatchSweepTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetBatchSweepTransactionsRequest) GetBatchOutpoint() *Outpoint {
	if x != nil {
		return x.BatchOutpoint
	}
	return nil
}

type GetBatchSweepTransactionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SweptBy       []string               `protobuf:"bytes,1,rep,name=swept_by,json=sweptBy,proto3" json:"swept_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBatchSweepTransactionsResponse) Reset() {
	*x = GetBatchSweepTransactionsResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchSweepTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchSweepTransactionsResponse) ProtoMessage() {}

func (x *GetBatchSweepTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchSweepTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetBatchSweepTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetBatchSweepTransactionsResponse) GetSweptBy() []string {
	if x != nil {
		return x.SweptBy
	}
	return nil
}

type SubscribeForScriptsRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Scripts []string               `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
	// If set, update an existing subscription
	SubscriptionId string `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubscribeForScriptsRequest) Reset() {
	*x = SubscribeForScriptsRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeForScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeForScriptsRequest) ProtoMessage() {}

func (x *SubscribeForScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeForScriptsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeForScriptsRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{18}
}

func (x *SubscribeForScriptsRequest) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *SubscribeForScriptsRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type SubscribeForScriptsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubscribeForScriptsResponse) Reset() {
	*x = SubscribeForScriptsResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeForScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeForScriptsResponse) ProtoMessage() {}

func (x *SubscribeForScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeForScriptsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeForScriptsResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{19}
}

func (x *SubscribeForScriptsResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type UnsubscribeForScriptsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// If empty, unsubscribe all scripts
	Scripts       []string `protobuf:"bytes,2,rep,name=scripts,proto3" json:"scripts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeForScriptsRequest) Reset() {
	*x = UnsubscribeForScriptsRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeForScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeForScriptsRequest) ProtoMessage() {}

func (x *UnsubscribeForScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeForScriptsRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeForScriptsRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{20}
}

func (x *UnsubscribeForScriptsRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *UnsubscribeForScriptsRequest) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

type UnsubscribeForScriptsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeForScriptsResponse) Reset() {
	*x = UnsubscribeForScriptsResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeForScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeForScriptsResponse) ProtoMessage() {}

func (x *UnsubscribeForScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeForScriptsResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeForScriptsResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{21}
}

type GetSubscriptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetSubscriptionRequest) Reset() {
	*x = GetSubscriptionRequest{}
	mi := &file_indexer_v1_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequest) ProtoMessage() {}

func (x *GetSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetSubscriptionRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type GetSubscriptionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*GetSubscriptionResponse_Heartbeat
	//	*GetSubscriptionResponse_Event
	Data          isGetSubscriptionResponse_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionResponse) Reset() {
	*x = GetSubscriptionResponse{}
	mi := &file_indexer_v1_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionResponse) ProtoMessage() {}

func (x *GetSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_v1_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_indexer_v1_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetSubscriptionResponse) GetData() isGetSubscriptionResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSubscriptionResponse) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Data.(*GetSubscriptionResponse_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *GetSubscriptionResponse) GetEvent() *SubscriptionEvent {
	if x != nil {
		if x, ok := x.Data.(*GetSubscriptionResponse_Event); ok {
			return x.Event
		}
	}
	return nil
}

type isGetSubscriptionResponse_Data interface {
	isGetSubscriptionResponse_Data()
}

type GetSubscriptionResponse_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,1,opt,name=heartbeat,proto3,oneof"`
}

type GetSubscriptionResponse_Event struct {
	Event *SubscriptionEvent `protobuf:"bytes,2,opt,name=event,proto3,oneof"`
}

func (*GetSubscriptionResponse_Heartbeat) isGetSubscriptionResponse_Data() {}

func (*GetSubscriptionResponse_Event) isGetSubscriptionResponse_Data() {}

var File_indexer_v1_service_proto protoreflect.FileDescriptor

const file_indexer_v1_service_proto_rawDesc = "" +
	"\n" +
	"\x18indexer/v1/service.proto\x12\n" +
	"indexer.v1\x1a!meshapi/gateway/annotations.proto\x1a\x16indexer/v1/types.proto\",\n" +
	"\x16GetCommitmentTxRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\"\xa6\x03\n" +
	"\x17GetCommitmentTxResponse\x12\x1d\n" +
	"\n" +
	"started_at\x18\x01 \x01(\x03R\tstartedAt\x12\x19\n" +
	"\bended_at\x18\x02 \x01(\x03R\aendedAt\x12J\n" +
	"\abatches\x18\x03 \x03(\v20.indexer.v1.GetCommitmentTxResponse.BatchesEntryR\abatches\x12,\n" +
	"\x12total_input_amount\x18\x04 \x01(\x04R\x10totalInputAmount\x12*\n" +
	"\x11total_input_vtxos\x18\x05 \x01(\x05R\x0ftotalInputVtxos\x12.\n" +
	"\x13total_output_amount\x18\x06 \x01(\x04R\x11totalOutputAmount\x12,\n" +
	"\x12total_output_vtxos\x18\a \x01(\x05R\x10totalOutputVtxos\x1aM\n" +
	"\fBatchesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.indexer.v1.BatchR\x05value:\x028\x01\"W\n" +
	"\x14GetForfeitTxsRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12+\n" +
	"\x04page\x18\x02 \x01(\v2\x17.indexer.v1.PageRequestR\x04page\"[\n" +
	"\x15GetForfeitTxsResponse\x12\x14\n" +
	"\x05txids\x18\x01 \x03(\tR\x05txids\x12,\n" +
	"\x04page\x18\x02 \x01(\v2\x18.indexer.v1.PageResponseR\x04page\"W\n" +
	"\x14GetConnectorsRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12+\n" +
	"\x04page\x18\x02 \x01(\v2\x17.indexer.v1.PageRequestR\x04page\"w\n" +
	"\x15GetConnectorsResponse\x120\n" +
	"\n" +
	"connectors\x18\x01 \x03(\v2\x10.indexer.v1.NodeR\n" +
	"connectors\x12,\n" +
	"\x04page\x18\x02 \x01(\v2\x18.indexer.v1.PageResponseR\x04page\"~\n" +
	"\x12GetVtxoTreeRequest\x12;\n" +
	"\x0ebatch_outpoint\x18\x01 \x01(\v2\x14.indexer.v1.OutpointR\rbatchOutpoint\x12+\n" +
	"\x04page\x18\x02 \x01(\v2\x17.indexer.v1.PageRequestR\x04page\"r\n" +
	"\x13GetVtxoTreeResponse\x12-\n" +
	"\tvtxo_tree\x18\x01 \x03(\v2\x10.indexer.v1.NodeR\bvtxoTree\x12,\n" +
	"\x04page\x18\x02 \x01(\v2\x18.indexer.v1.PageResponseR\x04page\"\x84\x01\n" +
	"\x18GetVtxoTreeLeavesRequest\x12;\n" +
	"\x0ebatch_outpoint\x18\x01 \x01(\v2\x14.indexer.v1.OutpointR\rbatchOutpoint\x12+\n" +
	"\x04page\x18\x02 \x01(\v2\x17.indexer.v1.PageRequestR\x04page\"w\n" +
	"\x19GetVtxoTreeLeavesResponse\x12,\n" +
	"\x06leaves\x18\x01 \x03(\v2\x14.indexer.v1.OutpointR\x06leaves\x12,\n" +
	"\x04page\x18\x02 \x01(\v2\x18.indexer.v1.PageResponseR\x04page\"\xe7\x01\n" +
	"\x0fGetVtxosRequest\x12\x18\n" +
	"\ascripts\x18\x01 \x03(\tR\ascripts\x12\x1c\n" +
	"\toutpoints\x18\x02 \x03(\tR\toutpoints\x12%\n" +
	"\x0espendable_only\x18\x03 \x01(\bR\rspendableOnly\x12\x1d\n" +
	"\n" +
	"spent_only\x18\x04 \x01(\bR\tspentOnly\x12)\n" +
	"\x10recoverable_only\x18\x05 \x01(\bR\x0frecoverableOnly\x12+\n" +
	"\x04page\x18\x06 \x01(\v2\x17.indexer.v1.PageRequestR\x04page\"h\n" +
	"\x10GetVtxosResponse\x12&\n" +
	"\x05vtxos\x18\x01 \x03(\v2\x10.indexer.v1.VtxoR\x05vtxos\x12,\n" +
	"\x04page\x18\x02 \x01(\v2\x18.indexer.v1.PageResponseR\x04page\"t\n" +
	"\x13GetVtxoChainRequest\x120\n" +
	"\boutpoint\x18\x01 \x01(\v2\x14.indexer.v1.OutpointR\boutpoint\x12+\n" +
	"\x04page\x18\x02 \x01(\v2\x17.indexer.v1.PageRequestR\x04page\"m\n" +
	"\x14GetVtxoChainResponse\x12'\n" +
	"\x05chain\x18\x01 \x03(\v2\x11.indexer.v1.ChainR\x05chain\x12,\n" +
	"\x04page\x18\x02 \x01(\v2\x18.indexer.v1.PageResponseR\x04page\"Y\n" +
	"\x14GetVirtualTxsRequest\x12\x14\n" +
	"\x05txids\x18\x01 \x03(\tR\x05txids\x12+\n" +
	"\x04page\x18\x02 \x01(\v2\x17.indexer.v1.PageRequestR\x04page\"W\n" +
	"\x15GetVirtualTxsResponse\x12\x10\n" +
	"\x03txs\x18\x01 \x03(\tR\x03txs\x12,\n" +
	"\x04page\x18\x02 \x01(\v2\x18.indexer.v1.PageResponseR\x04page\"_\n" +
	" GetBatchSweepTransactionsRequest\x12;\n" +
	"\x0ebatch_outpoint\x18\x01 \x01(\v2\x14.indexer.v1.OutpointR\rbatchOutpoint\">\n" +
	"!GetBatchSweepTransactionsResponse\x12\x19\n" +
	"\bswept_by\x18\x01 \x03(\tR\asweptBy\"_\n" +
	"\x1aSubscribeForScriptsRequest\x12\x18\n" +
	"\ascripts\x18\x01 \x03(\tR\ascripts\x12'\n" +
	"\x0fsubscription_id\x18\x02 \x01(\tR\x0esubscriptionId\"F\n" +
	"\x1bSubscribeForScriptsResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\"a\n" +
	"\x1cUnsubscribeForScriptsRequest\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12\x18\n" +
	"\ascripts\x18\x02 \x03(\tR\ascripts\"\x1f\n" +
	"\x1dUnsubscribeForScriptsResponse\"A\n" +
	"\x16GetSubscriptionRequest\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\"\x8f\x01\n" +
	"\x17GetSubscriptionResponse\x125\n" +
	"\theartbeat\x18\x01 \x01(\v2\x15.indexer.v1.HeartbeatH\x00R\theartbeat\x125\n" +
	"\x05event\x18\x02 \x01(\v2\x1d.indexer.v1.SubscriptionEventH\x00R\x05eventB\x06\n" +
	"\x04data2\x82\r\n" +
	"\x0eIndexerService\x12x\n" +
	"\x0fGetCommitmentTx\x12\".indexer.v1.GetCommitmentTxRequest\x1a#.indexer.v1.GetCommitmentTxResponse\"\x1c\xb2J\x19\x12\x17/v1/commitmentTx/{txid}\x12}\n" +
	"\rGetForfeitTxs\x12 .indexer.v1.GetForfeitTxsRequest\x1a!.indexer.v1.GetForfeitTxsResponse\"'\xb2J$\x12\"/v1/commitmentTx/{txid}/forfeitTxs\x12}\n" +
	"\rGetConnectors\x12 .indexer.v1.GetConnectorsRequest\x1a!.indexer.v1.GetConnectorsResponse\"'\xb2J$\x12\"/v1/commitmentTx/{txid}/connectors\x12\x8f\x01\n" +
	"\vGetVtxoTree\x12\x1e.indexer.v1.GetVtxoTreeRequest\x1a\x1f.indexer.v1.GetVtxoTreeResponse\"?\xb2J<\x12:/v1/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/tree\x12\xa8\x01\n" +
	"\x11GetVtxoTreeLeaves\x12$.indexer.v1.GetVtxoTreeLeavesRequest\x1a%.indexer.v1.GetVtxoTreeLeavesResponse\"F\xb2JC\x12A/v1/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/tree/leaves\x12U\n" +
	"\bGetVtxos\x12\x1b.indexer.v1.GetVtxosRequest\x1a\x1c.indexer.v1.GetVtxosResponse\"\x0e\xb2J\v\x12\t/v1/vtxos\x12\x86\x01\n" +
	"\fGetVtxoChain\x12\x1f.indexer.v1.GetVtxoChainRequest\x1a .indexer.v1.GetVtxoChainResponse\"3\xb2J0\x12./v1/vtxo/{outpoint.txid}/{outpoint.vout}/chain\x12p\n" +
	"\rGetVirtualTxs\x12 .indexer.v1.GetVirtualTxsRequest\x1a!.indexer.v1.GetVirtualTxsResponse\"\x1a\xb2J\x17\x12\x15/v1/virtualTx/{txids}\x12\xbd\x01\n" +
	"\x19GetBatchSweepTransactions\x12,.indexer.v1.GetBatchSweepTransactionsRequest\x1a-.indexer.v1.GetBatchSweepTransactionsResponse\"C\xb2J@\x12>/v1/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/sweepTxs\x12\x84\x01\n" +
	"\x13SubscribeForScripts\x12&.indexer.v1.SubscribeForScriptsRequest\x1a'.indexer.v1.SubscribeForScriptsResponse\"\x1c\xb2J\x19B\x01*\"\x14/v1/script/subscribe\x12\x8c\x01\n" +
	"\x15UnsubscribeForScripts\x12(.indexer.v1.UnsubscribeForScriptsRequest\x1a).indexer.v1.UnsubscribeForScriptsResponse\"\x1e\xb2J\x1bB\x01*\"\x16/v1/script/unsubscribe\x12\x92\x01\n" +
	"\x0fGetSubscription\x12\".indexer.v1.GetSubscriptionRequest\x1a#.indexer.v1.GetSubscriptionResponse\"4\xb2J1b\x04\b\x01\x18\x01\x12)/v1/script/subscription/{subscription_id}0\x01B\xaf\x01\n" +
	"\x0ecom.indexer.v1B\fServiceProtoP\x01ZFgithub.com/arkade-os/go-sdk/api-spec/protobuf/gen/indexer/v1;indexerv1\xa2\x02\x03IXX\xaa\x02\n" +
	"Indexer.V1\xca\x02\n" +
	"Indexer\\V1\xe2\x02\x16Indexer\\V1\\GPBMetadata\xea\x02\vIndexer::V1b\x06proto3"

var (
	file_indexer_v1_service_proto_rawDescOnce sync.Once
	file_indexer_v1_service_proto_rawDescData []byte
)

func file_indexer_v1_service_proto_rawDescGZIP() []byte {
	file_indexer_v1_service_proto_rawDescOnce.Do(func() {
		file_indexer_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_indexer_v1_service_proto_rawDesc), len(file_indexer_v1_service_proto_rawDesc)))
	})
	return file_indexer_v1_service_proto_rawDescData
}

var file_indexer_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_indexer_v1_service_proto_goTypes = []any{
	(*GetCommitmentTxRequest)(nil),            // 0: indexer.v1.GetCommitmentTxRequest
	(*GetCommitmentTxResponse)(nil),           // 1: indexer.v1.GetCommitmentTxResponse
	(*GetForfeitTxsRequest)(nil),              // 2: indexer.v1.GetForfeitTxsRequest
	(*GetForfeitTxsResponse)(nil),             // 3: indexer.v1.GetForfeitTxsResponse
	(*GetConnectorsRequest)(nil),              // 4: indexer.v1.GetConnectorsRequest
	(*GetConnectorsResponse)(nil),             // 5: indexer.v1.GetConnectorsResponse
	(*GetVtxoTreeRequest)(nil),                // 6: indexer.v1.GetVtxoTreeRequest
	(*GetVtxoTreeResponse)(nil),               // 7: indexer.v1.GetVtxoTreeResponse
	(*GetVtxoTreeLeavesRequest)(nil),          // 8: indexer.v1.GetVtxoTreeLeavesRequest
	(*GetVtxoTreeLeavesResponse)(nil),         // 9: indexer.v1.GetVtxoTreeLeavesResponse
	(*GetVtxosRequest)(nil),                   // 10: indexer.v1.GetVtxosRequest
	(*GetVtxosResponse)(nil),                  // 11: indexer.v1.GetVtxosResponse
	(*GetVtxoChainRequest)(nil),               // 12: indexer.v1.GetVtxoChainRequest
	(*GetVtxoChainResponse)(nil),              // 13: indexer.v1.GetVtxoChainResponse
	(*GetVirtualTxsRequest)(nil),              // 14: indexer.v1.GetVirtualTxsRequest
	(*GetVirtualTxsResponse)(nil),             // 15: indexer.v1.GetVirtualTxsResponse
	(*GetBatchSweepTransactionsRequest)(nil),  // 16: indexer.v1.GetBatchSweepTransactionsRequest
	(*GetBatchSweepTransactionsResponse)(nil), // 17: indexer.v1.GetBatchSweepTransactionsResponse
	(*SubscribeForScriptsRequest)(nil),        // 18: indexer.v1.SubscribeForScriptsRequest
	(*SubscribeForScriptsResponse)(nil),       // 19: indexer.v1.SubscribeForScriptsResponse
	(*UnsubscribeForScriptsRequest)(nil),      // 20: indexer.v1.UnsubscribeForScriptsRequest
	(*UnsubscribeForScriptsResponse)(nil),     // 21: indexer.v1.UnsubscribeForScriptsResponse
	(*GetSubscriptionRequest)(nil),            // 22: indexer.v1.GetSubscriptionRequest
	(*GetSubscriptionResponse)(nil),           // 23: indexer.v1.GetSubscriptionResponse
	nil,                                       // 24: indexer.v1.GetCommitmentTxResponse.BatchesEntry
	(*PageRequest)(nil),                       // 25: indexer.v1.PageRequest
	(*PageResponse)(nil),                      // 26: indexer.v1.PageResponse
	(*Node)(nil),                              // 27: indexer.v1.Node
	(*Outpoint)(nil),                          // 28: indexer.v1.Outpoint
	(*Vtxo)(nil),                              // 29: indexer.v1.Vtxo
	(*Chain)(nil),                             // 30: indexer.v1.Chain
	(*Heartbeat)(nil),                         // 31: indexer.v1.Heartbeat
	(*SubscriptionEvent)(nil),                 // 32: indexer.v1.SubscriptionEvent
	(*Batch)(nil),                             // 33: indexer.v1.Batch
}
var file_indexer_v1_service_proto_depIdxs = []int32{
	24, // 0: indexer.v1.GetCommitmentTxResponse.batches:type_name -> indexer.v1.GetCommitmentTxResponse.BatchesEntry
	25, // 1: indexer.v1.GetForfeitTxsRequest.page:type_name -> indexer.v1.PageRequest
	26, // 2: indexer.v1.GetForfeitTxsResponse.page:type_name -> indexer.v1.PageResponse
	25, // 3: indexer.v1.GetConnectorsRequest.page:type_name -> indexer.v1.PageRequest
	27, // 4: indexer.v1.GetConnectorsResponse.connectors:type_name -> indexer.v1.Node
	26, // 5: indexer.v1.GetConnectorsResponse.page:type_name -> indexer.v1.PageResponse
	28, // 6: indexer.v1.GetVtxoTreeRequest.batch_outpoint:type_name -> indexer.v1.Outpoint
	25, // 7: indexer.v1.GetVtxoTreeRequest.page:type_name -> indexer.v1.PageRequest
	27, // 8: indexer.v1.GetVtxoTreeResponse.vtxo_tree:type_name -> indexer.v1.Node
	26, // 9: indexer.v1.GetVtxoTreeResponse.page:type_name -> indexer.v1.PageResponse
	28, // 10: indexer.v1.GetVtxoTreeLeavesRequest.batch_outpoint:type_name -> indexer.v1.Outpoint
	25, // 11: indexer.v1.GetVtxoTreeLeavesRequest.page:type_name -> indexer.v1.PageRequest
	28, // 12: indexer.v1.GetVtxoTreeLeavesResponse.leaves:type_name -> indexer.v1.Outpoint
	26, // 13: indexer.v1.GetVtxoTreeLeavesResponse.page:type_name -> indexer.v1.PageResponse
	25, // 14: indexer.v1.GetVtxosRequest.page:type_name -> indexer.v1.PageRequest
	29, // 15: indexer.v1.GetVtxosResponse.vtxos:type_name -> indexer.v1.Vtxo
	26, // 16: indexer.v1.GetVtxosResponse.page:type_name -> indexer.v1.PageResponse
	28, // 17: indexer.v1.GetVtxoChainRequest.outpoint:type_name -> indexer.v1.Outpoint
	25, // 18: indexer.v1.GetVtxoChainRequest.page:type_name -> indexer.v1.PageRequest
	30, // 19: indexer.v1.GetVtxoChainResponse.chain:type_name -> indexer.v1.Chain
	26, // 20: indexer.v1.GetVtxoChainResponse.page:type_name -> indexer.v1.PageResponse
	25, // 21: indexer.v1.GetVirtualTxsRequest.page:type_name -> indexer.v1.PageRequest
	26, // 22: indexer.v1.GetVirtualTxsResponse.page:type_name -> indexer.v1.PageResponse
	28, // 23: indexer.v1.GetBatchSweepTransactionsRequest.batch_outpoint:type_name -> indexer.v1.Outpoint
	31, // 24: indexer.v1.GetSubscriptionResponse.heartbeat:type_name -> indexer.v1.Heartbeat
	32, // 25: indexer.v1.GetSubscriptionResponse.event:type_name -> indexer.v1.SubscriptionEvent
	33, // 26: indexer.v1.GetCommitmentTxResponse.BatchesEntry.value:type_name -> indexer.v1.Batch
	0,  // 27: indexer.v1.IndexerService.GetCommitmentTx:input_type -> indexer.v1.GetCommitmentTxRequest
	2,  // 28: indexer.v1.IndexerService.GetForfeitTxs:input_type -> indexer.v1.GetForfeitTxsRequest
	4,  // 29: indexer.v1.IndexerService.GetConnectors:input_type -> indexer.v1.GetConnectorsRequest
	6,  // 30: indexer.v1.IndexerService.GetVtxoTree:input_type -> indexer.v1.GetVtxoTreeRequest
	8,  // 31: indexer.v1.IndexerService.GetVtxoTreeLeaves:input_type -> indexer.v1.GetVtxoTreeLeavesRequest
	10, // 32: indexer.v1.IndexerService.GetVtxos:input_type -> indexer.v1.GetVtxosRequest
	12, // 33: indexer.v1.IndexerService.GetVtxoChain:input_type -> indexer.v1.GetVtxoChainRequest
	14, // 34: indexer.v1.IndexerService.GetVirtualTxs:input_type -> indexer.v1.GetVirtualTxsRequest
	16, // 35: indexer.v1.IndexerService.GetBatchSweepTransactions:input_type -> indexer.v1.GetBatchSweepTransactionsRequest
	18, // 36: indexer.v1.IndexerService.SubscribeForScripts:input_type -> indexer.v1.SubscribeForScriptsRequest
	20, // 37: indexer.v1.IndexerService.UnsubscribeForScripts:input_type -> indexer.v1.UnsubscribeForScriptsRequest
	22, // 38: indexer.v1.IndexerService.GetSubscription:input_type -> indexer.v1.GetSubscriptionRequest
	1,  // 39: indexer.v1.IndexerService.GetCommitmentTx:output_type -> indexer.v1.GetCommitmentTxResponse
	3,  // 40: indexer.v1.IndexerService.GetForfeitTxs:output_type -> indexer.v1.GetForfeitTxsResponse
	5,  // 41: indexer.v1.IndexerService.GetConnectors:output_type -> indexer.v1.GetConnectorsResponse
	7,  // 42: indexer.v1.IndexerService.GetVtxoTree:output_type -> indexer.v1.GetVtxoTreeResponse
	9,  // 43: indexer.v1.IndexerService.GetVtxoTreeLeaves:output_type -> indexer.v1.GetVtxoTreeLeavesResponse
	11, // 44: indexer.v1.IndexerService.GetVtxos:output_type -> indexer.v1.GetVtxosResponse
	13, // 45: indexer.v1.IndexerService.GetVtxoChain:output_type -> indexer.v1.GetVtxoChainResponse
	15, // 46: indexer.v1.IndexerService.GetVirtualTxs:output_type -> indexer.v1.GetVirtualTxsResponse
	17, // 47: indexer.v1.IndexerService.GetBatchSweepTransactions:output_type -> indexer.v1.GetBatchSweepTransactionsResponse
	19, // 48: indexer.v1.IndexerService.SubscribeForScripts:output_type -> indexer.v1.SubscribeForScriptsResponse
	21, // 49: indexer.v1.IndexerService.UnsubscribeForScripts:output_type -> indexer.v1.UnsubscribeForScriptsResponse
	23, // 50: indexer.v1.IndexerService.GetSubscription:output_type -> indexer.v1.GetSubscriptionResponse
	39, // [39:51] is the sub-list for method output_type
	27, // [27:39] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_indexer_v1_service_proto_init() }
func file_indexer_v1_service_proto_init() {
	if File_indexer_v1_service_proto != nil {
		return
	}
	file_indexer_v1_types_proto_init()
	file_indexer_v1_service_proto_msgTypes[23].OneofWrappers = []any{
		(*GetSubscriptionResponse_Heartbeat)(nil),
		(*GetSubscriptionResponse_Event)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_indexer_v1_service_proto_rawDesc), len(file_indexer_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_indexer_v1_service_proto_goTypes,
		DependencyIndexes: file_indexer_v1_service_proto_depIdxs,
		MessageInfos:      file_indexer_v1_service_proto_msgTypes,
	}.Build()
	File_indexer_v1_service_proto = out.File
	file_indexer_v1_service_proto_goTypes = nil
	file_indexer_v1_service_proto_depIdxs = nil
}
