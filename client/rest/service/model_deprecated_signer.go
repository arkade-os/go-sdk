/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeprecatedSigner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeprecatedSigner{}

// DeprecatedSigner struct for DeprecatedSigner
type DeprecatedSigner struct {
		CutoffDate *int64 `json:"cutoffDate,omitempty"`
		Pubkey *string `json:"pubkey,omitempty"`
}

// NewDeprecatedSigner instantiates a new DeprecatedSigner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeprecatedSigner() *DeprecatedSigner {
	this := DeprecatedSigner{}
	return &this
}

// NewDeprecatedSignerWithDefaults instantiates a new DeprecatedSigner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeprecatedSignerWithDefaults() *DeprecatedSigner {
	this := DeprecatedSigner{}
	return &this
}

// GetCutoffDate returns the CutoffDate field value if set, zero value otherwise.
func (o *DeprecatedSigner) GetCutoffDate() int64 {
	if o == nil || IsNil(o.CutoffDate) {
		var ret int64
		return ret
	}
	return *o.CutoffDate
}

// GetCutoffDateOk returns a tuple with the CutoffDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedSigner) GetCutoffDateOk() (*int64, bool) {
	if o == nil || IsNil(o.CutoffDate) {
		return nil, false
	}
	return o.CutoffDate, true
}

// HasCutoffDate returns a boolean if a field has been set.
func (o *DeprecatedSigner) HasCutoffDate() bool {
	if o != nil && !IsNil(o.CutoffDate) {
		return true
	}

	return false
}

// SetCutoffDate gets a reference to the given int64 and assigns it to the CutoffDate field.
func (o *DeprecatedSigner) SetCutoffDate(v int64) {
	o.CutoffDate = &v
}

// GetPubkey returns the Pubkey field value if set, zero value otherwise.
func (o *DeprecatedSigner) GetPubkey() string {
	if o == nil || IsNil(o.Pubkey) {
		var ret string
		return ret
	}
	return *o.Pubkey
}

// GetPubkeyOk returns a tuple with the Pubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedSigner) GetPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.Pubkey) {
		return nil, false
	}
	return o.Pubkey, true
}

// HasPubkey returns a boolean if a field has been set.
func (o *DeprecatedSigner) HasPubkey() bool {
	if o != nil && !IsNil(o.Pubkey) {
		return true
	}

	return false
}

// SetPubkey gets a reference to the given string and assigns it to the Pubkey field.
func (o *DeprecatedSigner) SetPubkey(v string) {
	o.Pubkey = &v
}

func (o DeprecatedSigner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeprecatedSigner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CutoffDate) {
		toSerialize["cutoffDate"] = o.CutoffDate
	}
	if !IsNil(o.Pubkey) {
		toSerialize["pubkey"] = o.Pubkey
	}
	return toSerialize, nil
}

type NullableDeprecatedSigner struct {
	value *DeprecatedSigner
	isSet bool
}

func (v NullableDeprecatedSigner) Get() *DeprecatedSigner {
	return v.value
}

func (v *NullableDeprecatedSigner) Set(val *DeprecatedSigner) {
	v.value = val
	v.isSet = true
}

func (v NullableDeprecatedSigner) IsSet() bool {
	return v.isSet
}

func (v *NullableDeprecatedSigner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeprecatedSigner(val *DeprecatedSigner) *NullableDeprecatedSigner {
	return &NullableDeprecatedSigner{value: val, isSet: true}
}

func (v NullableDeprecatedSigner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeprecatedSigner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


