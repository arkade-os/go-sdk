/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TreeSigningStartedEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TreeSigningStartedEvent{}

// TreeSigningStartedEvent struct for TreeSigningStartedEvent
type TreeSigningStartedEvent struct {
		CosignersPubkeys []string `json:"cosignersPubkeys,omitempty"`
		Id *string `json:"id,omitempty"`
		UnsignedCommitmentTx *string `json:"unsignedCommitmentTx,omitempty"`
}

// NewTreeSigningStartedEvent instantiates a new TreeSigningStartedEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTreeSigningStartedEvent() *TreeSigningStartedEvent {
	this := TreeSigningStartedEvent{}
	return &this
}

// NewTreeSigningStartedEventWithDefaults instantiates a new TreeSigningStartedEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTreeSigningStartedEventWithDefaults() *TreeSigningStartedEvent {
	this := TreeSigningStartedEvent{}
	return &this
}

// GetCosignersPubkeys returns the CosignersPubkeys field value if set, zero value otherwise.
func (o *TreeSigningStartedEvent) GetCosignersPubkeys() []string {
	if o == nil || IsNil(o.CosignersPubkeys) {
		var ret []string
		return ret
	}
	return o.CosignersPubkeys
}

// GetCosignersPubkeysOk returns a tuple with the CosignersPubkeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeSigningStartedEvent) GetCosignersPubkeysOk() ([]string, bool) {
	if o == nil || IsNil(o.CosignersPubkeys) {
		return nil, false
	}
	return o.CosignersPubkeys, true
}

// HasCosignersPubkeys returns a boolean if a field has been set.
func (o *TreeSigningStartedEvent) HasCosignersPubkeys() bool {
	if o != nil && !IsNil(o.CosignersPubkeys) {
		return true
	}

	return false
}

// SetCosignersPubkeys gets a reference to the given []string and assigns it to the CosignersPubkeys field.
func (o *TreeSigningStartedEvent) SetCosignersPubkeys(v []string) {
	o.CosignersPubkeys = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TreeSigningStartedEvent) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeSigningStartedEvent) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TreeSigningStartedEvent) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TreeSigningStartedEvent) SetId(v string) {
	o.Id = &v
}

// GetUnsignedCommitmentTx returns the UnsignedCommitmentTx field value if set, zero value otherwise.
func (o *TreeSigningStartedEvent) GetUnsignedCommitmentTx() string {
	if o == nil || IsNil(o.UnsignedCommitmentTx) {
		var ret string
		return ret
	}
	return *o.UnsignedCommitmentTx
}

// GetUnsignedCommitmentTxOk returns a tuple with the UnsignedCommitmentTx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeSigningStartedEvent) GetUnsignedCommitmentTxOk() (*string, bool) {
	if o == nil || IsNil(o.UnsignedCommitmentTx) {
		return nil, false
	}
	return o.UnsignedCommitmentTx, true
}

// HasUnsignedCommitmentTx returns a boolean if a field has been set.
func (o *TreeSigningStartedEvent) HasUnsignedCommitmentTx() bool {
	if o != nil && !IsNil(o.UnsignedCommitmentTx) {
		return true
	}

	return false
}

// SetUnsignedCommitmentTx gets a reference to the given string and assigns it to the UnsignedCommitmentTx field.
func (o *TreeSigningStartedEvent) SetUnsignedCommitmentTx(v string) {
	o.UnsignedCommitmentTx = &v
}

func (o TreeSigningStartedEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TreeSigningStartedEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CosignersPubkeys) {
		toSerialize["cosignersPubkeys"] = o.CosignersPubkeys
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UnsignedCommitmentTx) {
		toSerialize["unsignedCommitmentTx"] = o.UnsignedCommitmentTx
	}
	return toSerialize, nil
}

type NullableTreeSigningStartedEvent struct {
	value *TreeSigningStartedEvent
	isSet bool
}

func (v NullableTreeSigningStartedEvent) Get() *TreeSigningStartedEvent {
	return v.value
}

func (v *NullableTreeSigningStartedEvent) Set(val *TreeSigningStartedEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableTreeSigningStartedEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableTreeSigningStartedEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTreeSigningStartedEvent(val *TreeSigningStartedEvent) *NullableTreeSigningStartedEvent {
	return &NullableTreeSigningStartedEvent{value: val, isSet: true}
}

func (v NullableTreeSigningStartedEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTreeSigningStartedEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


