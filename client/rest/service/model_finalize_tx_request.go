/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FinalizeTxRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinalizeTxRequest{}

// FinalizeTxRequest struct for FinalizeTxRequest
type FinalizeTxRequest struct {
	ArkTxid *string `json:"arkTxid,omitempty"`
	FinalCheckpointTxs []string `json:"finalCheckpointTxs,omitempty"`
}

// NewFinalizeTxRequest instantiates a new FinalizeTxRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinalizeTxRequest() *FinalizeTxRequest {
	this := FinalizeTxRequest{}
	return &this
}

// NewFinalizeTxRequestWithDefaults instantiates a new FinalizeTxRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinalizeTxRequestWithDefaults() *FinalizeTxRequest {
	this := FinalizeTxRequest{}
	return &this
}

// GetArkTxid returns the ArkTxid field value if set, zero value otherwise.
func (o *FinalizeTxRequest) GetArkTxid() string {
	if o == nil || IsNil(o.ArkTxid) {
		var ret string
		return ret
	}
	return *o.ArkTxid
}

// GetArkTxidOk returns a tuple with the ArkTxid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinalizeTxRequest) GetArkTxidOk() (*string, bool) {
	if o == nil || IsNil(o.ArkTxid) {
		return nil, false
	}
	return o.ArkTxid, true
}

// HasArkTxid returns a boolean if a field has been set.
func (o *FinalizeTxRequest) HasArkTxid() bool {
	if o != nil && !IsNil(o.ArkTxid) {
		return true
	}

	return false
}

// SetArkTxid gets a reference to the given string and assigns it to the ArkTxid field.
func (o *FinalizeTxRequest) SetArkTxid(v string) {
	o.ArkTxid = &v
}

// GetFinalCheckpointTxs returns the FinalCheckpointTxs field value if set, zero value otherwise.
func (o *FinalizeTxRequest) GetFinalCheckpointTxs() []string {
	if o == nil || IsNil(o.FinalCheckpointTxs) {
		var ret []string
		return ret
	}
	return o.FinalCheckpointTxs
}

// GetFinalCheckpointTxsOk returns a tuple with the FinalCheckpointTxs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinalizeTxRequest) GetFinalCheckpointTxsOk() ([]string, bool) {
	if o == nil || IsNil(o.FinalCheckpointTxs) {
		return nil, false
	}
	return o.FinalCheckpointTxs, true
}

// HasFinalCheckpointTxs returns a boolean if a field has been set.
func (o *FinalizeTxRequest) HasFinalCheckpointTxs() bool {
	if o != nil && !IsNil(o.FinalCheckpointTxs) {
		return true
	}

	return false
}

// SetFinalCheckpointTxs gets a reference to the given []string and assigns it to the FinalCheckpointTxs field.
func (o *FinalizeTxRequest) SetFinalCheckpointTxs(v []string) {
	o.FinalCheckpointTxs = v
}

func (o FinalizeTxRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinalizeTxRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArkTxid) {
		toSerialize["arkTxid"] = o.ArkTxid
	}
	if !IsNil(o.FinalCheckpointTxs) {
		toSerialize["finalCheckpointTxs"] = o.FinalCheckpointTxs
	}
	return toSerialize, nil
}

type NullableFinalizeTxRequest struct {
	value *FinalizeTxRequest
	isSet bool
}

func (v NullableFinalizeTxRequest) Get() *FinalizeTxRequest {
	return v.value
}

func (v *NullableFinalizeTxRequest) Set(val *FinalizeTxRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFinalizeTxRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFinalizeTxRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinalizeTxRequest(val *FinalizeTxRequest) *NullableFinalizeTxRequest {
	return &NullableFinalizeTxRequest{value: val, isSet: true}
}

func (v NullableFinalizeTxRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinalizeTxRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


