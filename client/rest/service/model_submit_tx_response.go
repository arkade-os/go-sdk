/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SubmitTxResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubmitTxResponse{}

// SubmitTxResponse struct for SubmitTxResponse
type SubmitTxResponse struct {
		ArkTxid *string `json:"arkTxid,omitempty"`
		FinalArkTx *string `json:"finalArkTx,omitempty"`
		SignedCheckpointTxs []string `json:"signedCheckpointTxs,omitempty"`
}

// NewSubmitTxResponse instantiates a new SubmitTxResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitTxResponse() *SubmitTxResponse {
	this := SubmitTxResponse{}
	return &this
}

// NewSubmitTxResponseWithDefaults instantiates a new SubmitTxResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitTxResponseWithDefaults() *SubmitTxResponse {
	this := SubmitTxResponse{}
	return &this
}

// GetArkTxid returns the ArkTxid field value if set, zero value otherwise.
func (o *SubmitTxResponse) GetArkTxid() string {
	if o == nil || IsNil(o.ArkTxid) {
		var ret string
		return ret
	}
	return *o.ArkTxid
}

// GetArkTxidOk returns a tuple with the ArkTxid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitTxResponse) GetArkTxidOk() (*string, bool) {
	if o == nil || IsNil(o.ArkTxid) {
		return nil, false
	}
	return o.ArkTxid, true
}

// HasArkTxid returns a boolean if a field has been set.
func (o *SubmitTxResponse) HasArkTxid() bool {
	if o != nil && !IsNil(o.ArkTxid) {
		return true
	}

	return false
}

// SetArkTxid gets a reference to the given string and assigns it to the ArkTxid field.
func (o *SubmitTxResponse) SetArkTxid(v string) {
	o.ArkTxid = &v
}

// GetFinalArkTx returns the FinalArkTx field value if set, zero value otherwise.
func (o *SubmitTxResponse) GetFinalArkTx() string {
	if o == nil || IsNil(o.FinalArkTx) {
		var ret string
		return ret
	}
	return *o.FinalArkTx
}

// GetFinalArkTxOk returns a tuple with the FinalArkTx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitTxResponse) GetFinalArkTxOk() (*string, bool) {
	if o == nil || IsNil(o.FinalArkTx) {
		return nil, false
	}
	return o.FinalArkTx, true
}

// HasFinalArkTx returns a boolean if a field has been set.
func (o *SubmitTxResponse) HasFinalArkTx() bool {
	if o != nil && !IsNil(o.FinalArkTx) {
		return true
	}

	return false
}

// SetFinalArkTx gets a reference to the given string and assigns it to the FinalArkTx field.
func (o *SubmitTxResponse) SetFinalArkTx(v string) {
	o.FinalArkTx = &v
}

// GetSignedCheckpointTxs returns the SignedCheckpointTxs field value if set, zero value otherwise.
func (o *SubmitTxResponse) GetSignedCheckpointTxs() []string {
	if o == nil || IsNil(o.SignedCheckpointTxs) {
		var ret []string
		return ret
	}
	return o.SignedCheckpointTxs
}

// GetSignedCheckpointTxsOk returns a tuple with the SignedCheckpointTxs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitTxResponse) GetSignedCheckpointTxsOk() ([]string, bool) {
	if o == nil || IsNil(o.SignedCheckpointTxs) {
		return nil, false
	}
	return o.SignedCheckpointTxs, true
}

// HasSignedCheckpointTxs returns a boolean if a field has been set.
func (o *SubmitTxResponse) HasSignedCheckpointTxs() bool {
	if o != nil && !IsNil(o.SignedCheckpointTxs) {
		return true
	}

	return false
}

// SetSignedCheckpointTxs gets a reference to the given []string and assigns it to the SignedCheckpointTxs field.
func (o *SubmitTxResponse) SetSignedCheckpointTxs(v []string) {
	o.SignedCheckpointTxs = v
}

func (o SubmitTxResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubmitTxResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArkTxid) {
		toSerialize["arkTxid"] = o.ArkTxid
	}
	if !IsNil(o.FinalArkTx) {
		toSerialize["finalArkTx"] = o.FinalArkTx
	}
	if !IsNil(o.SignedCheckpointTxs) {
		toSerialize["signedCheckpointTxs"] = o.SignedCheckpointTxs
	}
	return toSerialize, nil
}

type NullableSubmitTxResponse struct {
	value *SubmitTxResponse
	isSet bool
}

func (v NullableSubmitTxResponse) Get() *SubmitTxResponse {
	return v.value
}

func (v *NullableSubmitTxResponse) Set(val *SubmitTxResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitTxResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitTxResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitTxResponse(val *SubmitTxResponse) *NullableSubmitTxResponse {
	return &NullableSubmitTxResponse{value: val, isSet: true}
}

func (v NullableSubmitTxResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitTxResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


