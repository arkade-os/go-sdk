/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Intent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Intent{}

// Intent struct for Intent
type Intent struct {
		Message *string `json:"message,omitempty"`
		Proof *string `json:"proof,omitempty"`
}

// NewIntent instantiates a new Intent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntent() *Intent {
	this := Intent{}
	return &this
}

// NewIntentWithDefaults instantiates a new Intent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntentWithDefaults() *Intent {
	this := Intent{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *Intent) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intent) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *Intent) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *Intent) SetMessage(v string) {
	o.Message = &v
}

// GetProof returns the Proof field value if set, zero value otherwise.
func (o *Intent) GetProof() string {
	if o == nil || IsNil(o.Proof) {
		var ret string
		return ret
	}
	return *o.Proof
}

// GetProofOk returns a tuple with the Proof field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intent) GetProofOk() (*string, bool) {
	if o == nil || IsNil(o.Proof) {
		return nil, false
	}
	return o.Proof, true
}

// HasProof returns a boolean if a field has been set.
func (o *Intent) HasProof() bool {
	if o != nil && !IsNil(o.Proof) {
		return true
	}

	return false
}

// SetProof gets a reference to the given string and assigns it to the Proof field.
func (o *Intent) SetProof(v string) {
	o.Proof = &v
}

func (o Intent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Intent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Proof) {
		toSerialize["proof"] = o.Proof
	}
	return toSerialize, nil
}

type NullableIntent struct {
	value *Intent
	isSet bool
}

func (v NullableIntent) Get() *Intent {
	return v.value
}

func (v *NullableIntent) Set(val *Intent) {
	v.value = val
	v.isSet = true
}

func (v NullableIntent) IsSet() bool {
	return v.isSet
}

func (v *NullableIntent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntent(val *Intent) *NullableIntent {
	return &NullableIntent{value: val, isSet: true}
}

func (v NullableIntent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


