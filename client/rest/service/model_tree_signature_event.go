/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TreeSignatureEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TreeSignatureEvent{}

// TreeSignatureEvent struct for TreeSignatureEvent
type TreeSignatureEvent struct {
		BatchIndex *int32 `json:"batchIndex,omitempty"`
		Id *string `json:"id,omitempty"`
		Signature *string `json:"signature,omitempty"`
		Topic []string `json:"topic,omitempty"`
		Txid *string `json:"txid,omitempty"`
}

// NewTreeSignatureEvent instantiates a new TreeSignatureEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTreeSignatureEvent() *TreeSignatureEvent {
	this := TreeSignatureEvent{}
	return &this
}

// NewTreeSignatureEventWithDefaults instantiates a new TreeSignatureEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTreeSignatureEventWithDefaults() *TreeSignatureEvent {
	this := TreeSignatureEvent{}
	return &this
}

// GetBatchIndex returns the BatchIndex field value if set, zero value otherwise.
func (o *TreeSignatureEvent) GetBatchIndex() int32 {
	if o == nil || IsNil(o.BatchIndex) {
		var ret int32
		return ret
	}
	return *o.BatchIndex
}

// GetBatchIndexOk returns a tuple with the BatchIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeSignatureEvent) GetBatchIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.BatchIndex) {
		return nil, false
	}
	return o.BatchIndex, true
}

// HasBatchIndex returns a boolean if a field has been set.
func (o *TreeSignatureEvent) HasBatchIndex() bool {
	if o != nil && !IsNil(o.BatchIndex) {
		return true
	}

	return false
}

// SetBatchIndex gets a reference to the given int32 and assigns it to the BatchIndex field.
func (o *TreeSignatureEvent) SetBatchIndex(v int32) {
	o.BatchIndex = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TreeSignatureEvent) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeSignatureEvent) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TreeSignatureEvent) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TreeSignatureEvent) SetId(v string) {
	o.Id = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *TreeSignatureEvent) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeSignatureEvent) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *TreeSignatureEvent) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *TreeSignatureEvent) SetSignature(v string) {
	o.Signature = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *TreeSignatureEvent) GetTopic() []string {
	if o == nil || IsNil(o.Topic) {
		var ret []string
		return ret
	}
	return o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeSignatureEvent) GetTopicOk() ([]string, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *TreeSignatureEvent) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given []string and assigns it to the Topic field.
func (o *TreeSignatureEvent) SetTopic(v []string) {
	o.Topic = v
}

// GetTxid returns the Txid field value if set, zero value otherwise.
func (o *TreeSignatureEvent) GetTxid() string {
	if o == nil || IsNil(o.Txid) {
		var ret string
		return ret
	}
	return *o.Txid
}

// GetTxidOk returns a tuple with the Txid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TreeSignatureEvent) GetTxidOk() (*string, bool) {
	if o == nil || IsNil(o.Txid) {
		return nil, false
	}
	return o.Txid, true
}

// HasTxid returns a boolean if a field has been set.
func (o *TreeSignatureEvent) HasTxid() bool {
	if o != nil && !IsNil(o.Txid) {
		return true
	}

	return false
}

// SetTxid gets a reference to the given string and assigns it to the Txid field.
func (o *TreeSignatureEvent) SetTxid(v string) {
	o.Txid = &v
}

func (o TreeSignatureEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TreeSignatureEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatchIndex) {
		toSerialize["batchIndex"] = o.BatchIndex
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if !IsNil(o.Txid) {
		toSerialize["txid"] = o.Txid
	}
	return toSerialize, nil
}

type NullableTreeSignatureEvent struct {
	value *TreeSignatureEvent
	isSet bool
}

func (v NullableTreeSignatureEvent) Get() *TreeSignatureEvent {
	return v.value
}

func (v *NullableTreeSignatureEvent) Set(val *TreeSignatureEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableTreeSignatureEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableTreeSignatureEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTreeSignatureEvent(val *TreeSignatureEvent) *NullableTreeSignatureEvent {
	return &NullableTreeSignatureEvent{value: val, isSet: true}
}

func (v NullableTreeSignatureEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTreeSignatureEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


