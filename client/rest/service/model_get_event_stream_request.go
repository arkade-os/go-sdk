/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetEventStreamRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEventStreamRequest{}

// GetEventStreamRequest struct for GetEventStreamRequest
type GetEventStreamRequest struct {
	Topics []string `json:"topics,omitempty"`
}

// NewGetEventStreamRequest instantiates a new GetEventStreamRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEventStreamRequest() *GetEventStreamRequest {
	this := GetEventStreamRequest{}
	return &this
}

// NewGetEventStreamRequestWithDefaults instantiates a new GetEventStreamRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEventStreamRequestWithDefaults() *GetEventStreamRequest {
	this := GetEventStreamRequest{}
	return &this
}

// GetTopics returns the Topics field value if set, zero value otherwise.
func (o *GetEventStreamRequest) GetTopics() []string {
	if o == nil || IsNil(o.Topics) {
		var ret []string
		return ret
	}
	return o.Topics
}

// GetTopicsOk returns a tuple with the Topics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEventStreamRequest) GetTopicsOk() ([]string, bool) {
	if o == nil || IsNil(o.Topics) {
		return nil, false
	}
	return o.Topics, true
}

// HasTopics returns a boolean if a field has been set.
func (o *GetEventStreamRequest) HasTopics() bool {
	if o != nil && !IsNil(o.Topics) {
		return true
	}

	return false
}

// SetTopics gets a reference to the given []string and assigns it to the Topics field.
func (o *GetEventStreamRequest) SetTopics(v []string) {
	o.Topics = v
}

func (o GetEventStreamRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEventStreamRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Topics) {
		toSerialize["topics"] = o.Topics
	}
	return toSerialize, nil
}

type NullableGetEventStreamRequest struct {
	value *GetEventStreamRequest
	isSet bool
}

func (v NullableGetEventStreamRequest) Get() *GetEventStreamRequest {
	return v.value
}

func (v *NullableGetEventStreamRequest) Set(val *GetEventStreamRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEventStreamRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEventStreamRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEventStreamRequest(val *GetEventStreamRequest) *NullableGetEventStreamRequest {
	return &NullableGetEventStreamRequest{value: val, isSet: true}
}

func (v NullableGetEventStreamRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEventStreamRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


