/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RegisterIntentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterIntentResponse{}

// RegisterIntentResponse struct for RegisterIntentResponse
type RegisterIntentResponse struct {
	IntentId *string `json:"intentId,omitempty"`
}

// NewRegisterIntentResponse instantiates a new RegisterIntentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterIntentResponse() *RegisterIntentResponse {
	this := RegisterIntentResponse{}
	return &this
}

// NewRegisterIntentResponseWithDefaults instantiates a new RegisterIntentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterIntentResponseWithDefaults() *RegisterIntentResponse {
	this := RegisterIntentResponse{}
	return &this
}

// GetIntentId returns the IntentId field value if set, zero value otherwise.
func (o *RegisterIntentResponse) GetIntentId() string {
	if o == nil || IsNil(o.IntentId) {
		var ret string
		return ret
	}
	return *o.IntentId
}

// GetIntentIdOk returns a tuple with the IntentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterIntentResponse) GetIntentIdOk() (*string, bool) {
	if o == nil || IsNil(o.IntentId) {
		return nil, false
	}
	return o.IntentId, true
}

// HasIntentId returns a boolean if a field has been set.
func (o *RegisterIntentResponse) HasIntentId() bool {
	if o != nil && !IsNil(o.IntentId) {
		return true
	}

	return false
}

// SetIntentId gets a reference to the given string and assigns it to the IntentId field.
func (o *RegisterIntentResponse) SetIntentId(v string) {
	o.IntentId = &v
}

func (o RegisterIntentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterIntentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IntentId) {
		toSerialize["intentId"] = o.IntentId
	}
	return toSerialize, nil
}

type NullableRegisterIntentResponse struct {
	value *RegisterIntentResponse
	isSet bool
}

func (v NullableRegisterIntentResponse) Get() *RegisterIntentResponse {
	return v.value
}

func (v *NullableRegisterIntentResponse) Set(val *RegisterIntentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterIntentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterIntentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterIntentResponse(val *RegisterIntentResponse) *NullableRegisterIntentResponse {
	return &NullableRegisterIntentResponse{value: val, isSet: true}
}

func (v NullableRegisterIntentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterIntentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


