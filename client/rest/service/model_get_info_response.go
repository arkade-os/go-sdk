/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInfoResponse{}

// GetInfoResponse struct for GetInfoResponse
type GetInfoResponse struct {
		BoardingExitDelay *int64 `json:"boardingExitDelay,string,omitempty"`
		CheckpointTapscript *string `json:"checkpointTapscript,omitempty"`
		DeprecatedSigners []DeprecatedSigner `json:"deprecatedSigners,omitempty"`
		Digest *string `json:"digest,omitempty"`
		Dust *int64 `json:"dust,string,omitempty"`
		Fees *FeeInfo `json:"fees,omitempty"`
		ForfeitAddress *string `json:"forfeitAddress,omitempty"`
		ForfeitPubkey *string `json:"forfeitPubkey,omitempty"`
		Network *string `json:"network,omitempty"`
		ScheduledSession *ScheduledSession `json:"scheduledSession,omitempty"`
		ServiceStatus map[string]string `json:"serviceStatus,omitempty"`
		SessionDuration *int64 `json:"sessionDuration,omitempty"`
		SignerPubkey *string `json:"signerPubkey,omitempty"`
		UnilateralExitDelay *int64 `json:"unilateralExitDelay,string,omitempty"`
	// -1 means no limit (default), 0 means boarding not allowed
		UtxoMaxAmount *int64 `json:"utxoMaxAmount,string,omitempty"`
		UtxoMinAmount *int64 `json:"utxoMinAmount,string,omitempty"`
		Version *string `json:"version,omitempty"`
	// -1 means no limit (default)
		VtxoMaxAmount *int64 `json:"vtxoMaxAmount,string,omitempty"`
		VtxoMinAmount *int64 `json:"vtxoMinAmount,string,omitempty"`
}

// NewGetInfoResponse instantiates a new GetInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInfoResponse() *GetInfoResponse {
	this := GetInfoResponse{}
	return &this
}

// NewGetInfoResponseWithDefaults instantiates a new GetInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInfoResponseWithDefaults() *GetInfoResponse {
	this := GetInfoResponse{}
	return &this
}

// GetBoardingExitDelay returns the BoardingExitDelay field value if set, zero value otherwise.
func (o *GetInfoResponse) GetBoardingExitDelay() int64 {
	if o == nil || IsNil(o.BoardingExitDelay) {
		var ret int64
		return ret
	}
	return *o.BoardingExitDelay
}

// GetBoardingExitDelayOk returns a tuple with the BoardingExitDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetBoardingExitDelayOk() (*int64, bool) {
	if o == nil || IsNil(o.BoardingExitDelay) {
		return nil, false
	}
	return o.BoardingExitDelay, true
}

// HasBoardingExitDelay returns a boolean if a field has been set.
func (o *GetInfoResponse) HasBoardingExitDelay() bool {
	if o != nil && !IsNil(o.BoardingExitDelay) {
		return true
	}

	return false
}

// SetBoardingExitDelay gets a reference to the given int64 and assigns it to the BoardingExitDelay field.
func (o *GetInfoResponse) SetBoardingExitDelay(v int64) {
	o.BoardingExitDelay = &v
}

// GetCheckpointTapscript returns the CheckpointTapscript field value if set, zero value otherwise.
func (o *GetInfoResponse) GetCheckpointTapscript() string {
	if o == nil || IsNil(o.CheckpointTapscript) {
		var ret string
		return ret
	}
	return *o.CheckpointTapscript
}

// GetCheckpointTapscriptOk returns a tuple with the CheckpointTapscript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetCheckpointTapscriptOk() (*string, bool) {
	if o == nil || IsNil(o.CheckpointTapscript) {
		return nil, false
	}
	return o.CheckpointTapscript, true
}

// HasCheckpointTapscript returns a boolean if a field has been set.
func (o *GetInfoResponse) HasCheckpointTapscript() bool {
	if o != nil && !IsNil(o.CheckpointTapscript) {
		return true
	}

	return false
}

// SetCheckpointTapscript gets a reference to the given string and assigns it to the CheckpointTapscript field.
func (o *GetInfoResponse) SetCheckpointTapscript(v string) {
	o.CheckpointTapscript = &v
}

// GetDeprecatedSigners returns the DeprecatedSigners field value if set, zero value otherwise.
func (o *GetInfoResponse) GetDeprecatedSigners() []DeprecatedSigner {
	if o == nil || IsNil(o.DeprecatedSigners) {
		var ret []DeprecatedSigner
		return ret
	}
	return o.DeprecatedSigners
}

// GetDeprecatedSignersOk returns a tuple with the DeprecatedSigners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetDeprecatedSignersOk() ([]DeprecatedSigner, bool) {
	if o == nil || IsNil(o.DeprecatedSigners) {
		return nil, false
	}
	return o.DeprecatedSigners, true
}

// HasDeprecatedSigners returns a boolean if a field has been set.
func (o *GetInfoResponse) HasDeprecatedSigners() bool {
	if o != nil && !IsNil(o.DeprecatedSigners) {
		return true
	}

	return false
}

// SetDeprecatedSigners gets a reference to the given []DeprecatedSigner and assigns it to the DeprecatedSigners field.
func (o *GetInfoResponse) SetDeprecatedSigners(v []DeprecatedSigner) {
	o.DeprecatedSigners = v
}

// GetDigest returns the Digest field value if set, zero value otherwise.
func (o *GetInfoResponse) GetDigest() string {
	if o == nil || IsNil(o.Digest) {
		var ret string
		return ret
	}
	return *o.Digest
}

// GetDigestOk returns a tuple with the Digest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetDigestOk() (*string, bool) {
	if o == nil || IsNil(o.Digest) {
		return nil, false
	}
	return o.Digest, true
}

// HasDigest returns a boolean if a field has been set.
func (o *GetInfoResponse) HasDigest() bool {
	if o != nil && !IsNil(o.Digest) {
		return true
	}

	return false
}

// SetDigest gets a reference to the given string and assigns it to the Digest field.
func (o *GetInfoResponse) SetDigest(v string) {
	o.Digest = &v
}

// GetDust returns the Dust field value if set, zero value otherwise.
func (o *GetInfoResponse) GetDust() int64 {
	if o == nil || IsNil(o.Dust) {
		var ret int64
		return ret
	}
	return *o.Dust
}

// GetDustOk returns a tuple with the Dust field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetDustOk() (*int64, bool) {
	if o == nil || IsNil(o.Dust) {
		return nil, false
	}
	return o.Dust, true
}

// HasDust returns a boolean if a field has been set.
func (o *GetInfoResponse) HasDust() bool {
	if o != nil && !IsNil(o.Dust) {
		return true
	}

	return false
}

// SetDust gets a reference to the given int64 and assigns it to the Dust field.
func (o *GetInfoResponse) SetDust(v int64) {
	o.Dust = &v
}

// GetFees returns the Fees field value if set, zero value otherwise.
func (o *GetInfoResponse) GetFees() FeeInfo {
	if o == nil || IsNil(o.Fees) {
		var ret FeeInfo
		return ret
	}
	return *o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetFeesOk() (*FeeInfo, bool) {
	if o == nil || IsNil(o.Fees) {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *GetInfoResponse) HasFees() bool {
	if o != nil && !IsNil(o.Fees) {
		return true
	}

	return false
}

// SetFees gets a reference to the given FeeInfo and assigns it to the Fees field.
func (o *GetInfoResponse) SetFees(v FeeInfo) {
	o.Fees = &v
}

// GetForfeitAddress returns the ForfeitAddress field value if set, zero value otherwise.
func (o *GetInfoResponse) GetForfeitAddress() string {
	if o == nil || IsNil(o.ForfeitAddress) {
		var ret string
		return ret
	}
	return *o.ForfeitAddress
}

// GetForfeitAddressOk returns a tuple with the ForfeitAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetForfeitAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ForfeitAddress) {
		return nil, false
	}
	return o.ForfeitAddress, true
}

// HasForfeitAddress returns a boolean if a field has been set.
func (o *GetInfoResponse) HasForfeitAddress() bool {
	if o != nil && !IsNil(o.ForfeitAddress) {
		return true
	}

	return false
}

// SetForfeitAddress gets a reference to the given string and assigns it to the ForfeitAddress field.
func (o *GetInfoResponse) SetForfeitAddress(v string) {
	o.ForfeitAddress = &v
}

// GetForfeitPubkey returns the ForfeitPubkey field value if set, zero value otherwise.
func (o *GetInfoResponse) GetForfeitPubkey() string {
	if o == nil || IsNil(o.ForfeitPubkey) {
		var ret string
		return ret
	}
	return *o.ForfeitPubkey
}

// GetForfeitPubkeyOk returns a tuple with the ForfeitPubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetForfeitPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.ForfeitPubkey) {
		return nil, false
	}
	return o.ForfeitPubkey, true
}

// HasForfeitPubkey returns a boolean if a field has been set.
func (o *GetInfoResponse) HasForfeitPubkey() bool {
	if o != nil && !IsNil(o.ForfeitPubkey) {
		return true
	}

	return false
}

// SetForfeitPubkey gets a reference to the given string and assigns it to the ForfeitPubkey field.
func (o *GetInfoResponse) SetForfeitPubkey(v string) {
	o.ForfeitPubkey = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *GetInfoResponse) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *GetInfoResponse) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *GetInfoResponse) SetNetwork(v string) {
	o.Network = &v
}

// GetScheduledSession returns the ScheduledSession field value if set, zero value otherwise.
func (o *GetInfoResponse) GetScheduledSession() ScheduledSession {
	if o == nil || IsNil(o.ScheduledSession) {
		var ret ScheduledSession
		return ret
	}
	return *o.ScheduledSession
}

// GetScheduledSessionOk returns a tuple with the ScheduledSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetScheduledSessionOk() (*ScheduledSession, bool) {
	if o == nil || IsNil(o.ScheduledSession) {
		return nil, false
	}
	return o.ScheduledSession, true
}

// HasScheduledSession returns a boolean if a field has been set.
func (o *GetInfoResponse) HasScheduledSession() bool {
	if o != nil && !IsNil(o.ScheduledSession) {
		return true
	}

	return false
}

// SetScheduledSession gets a reference to the given ScheduledSession and assigns it to the ScheduledSession field.
func (o *GetInfoResponse) SetScheduledSession(v ScheduledSession) {
	o.ScheduledSession = &v
}

// GetServiceStatus returns the ServiceStatus field value if set, zero value otherwise.
func (o *GetInfoResponse) GetServiceStatus() map[string]string {
	if o == nil || IsNil(o.ServiceStatus) {
		var ret map[string]string
		return ret
	}
	return o.ServiceStatus
}

// GetServiceStatusOk returns a tuple with the ServiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetServiceStatusOk() (map[string]string, bool) {
	if o == nil || IsNil(o.ServiceStatus) {
		return map[string]string{}, false
	}
	return o.ServiceStatus, true
}

// HasServiceStatus returns a boolean if a field has been set.
func (o *GetInfoResponse) HasServiceStatus() bool {
	if o != nil && !IsNil(o.ServiceStatus) {
		return true
	}

	return false
}

// SetServiceStatus gets a reference to the given map[string]string and assigns it to the ServiceStatus field.
func (o *GetInfoResponse) SetServiceStatus(v map[string]string) {
	o.ServiceStatus = v
}

// GetSessionDuration returns the SessionDuration field value if set, zero value otherwise.
func (o *GetInfoResponse) GetSessionDuration() int64 {
	if o == nil || IsNil(o.SessionDuration) {
		var ret int64
		return ret
	}
	return *o.SessionDuration
}

// GetSessionDurationOk returns a tuple with the SessionDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetSessionDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.SessionDuration) {
		return nil, false
	}
	return o.SessionDuration, true
}

// HasSessionDuration returns a boolean if a field has been set.
func (o *GetInfoResponse) HasSessionDuration() bool {
	if o != nil && !IsNil(o.SessionDuration) {
		return true
	}

	return false
}

// SetSessionDuration gets a reference to the given int64 and assigns it to the SessionDuration field.
func (o *GetInfoResponse) SetSessionDuration(v int64) {
	o.SessionDuration = &v
}

// GetSignerPubkey returns the SignerPubkey field value if set, zero value otherwise.
func (o *GetInfoResponse) GetSignerPubkey() string {
	if o == nil || IsNil(o.SignerPubkey) {
		var ret string
		return ret
	}
	return *o.SignerPubkey
}

// GetSignerPubkeyOk returns a tuple with the SignerPubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetSignerPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.SignerPubkey) {
		return nil, false
	}
	return o.SignerPubkey, true
}

// HasSignerPubkey returns a boolean if a field has been set.
func (o *GetInfoResponse) HasSignerPubkey() bool {
	if o != nil && !IsNil(o.SignerPubkey) {
		return true
	}

	return false
}

// SetSignerPubkey gets a reference to the given string and assigns it to the SignerPubkey field.
func (o *GetInfoResponse) SetSignerPubkey(v string) {
	o.SignerPubkey = &v
}

// GetUnilateralExitDelay returns the UnilateralExitDelay field value if set, zero value otherwise.
func (o *GetInfoResponse) GetUnilateralExitDelay() int64 {
	if o == nil || IsNil(o.UnilateralExitDelay) {
		var ret int64
		return ret
	}
	return *o.UnilateralExitDelay
}

// GetUnilateralExitDelayOk returns a tuple with the UnilateralExitDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetUnilateralExitDelayOk() (*int64, bool) {
	if o == nil || IsNil(o.UnilateralExitDelay) {
		return nil, false
	}
	return o.UnilateralExitDelay, true
}

// HasUnilateralExitDelay returns a boolean if a field has been set.
func (o *GetInfoResponse) HasUnilateralExitDelay() bool {
	if o != nil && !IsNil(o.UnilateralExitDelay) {
		return true
	}

	return false
}

// SetUnilateralExitDelay gets a reference to the given int64 and assigns it to the UnilateralExitDelay field.
func (o *GetInfoResponse) SetUnilateralExitDelay(v int64) {
	o.UnilateralExitDelay = &v
}

// GetUtxoMaxAmount returns the UtxoMaxAmount field value if set, zero value otherwise.
func (o *GetInfoResponse) GetUtxoMaxAmount() int64 {
	if o == nil || IsNil(o.UtxoMaxAmount) {
		var ret int64
		return ret
	}
	return *o.UtxoMaxAmount
}

// GetUtxoMaxAmountOk returns a tuple with the UtxoMaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetUtxoMaxAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.UtxoMaxAmount) {
		return nil, false
	}
	return o.UtxoMaxAmount, true
}

// HasUtxoMaxAmount returns a boolean if a field has been set.
func (o *GetInfoResponse) HasUtxoMaxAmount() bool {
	if o != nil && !IsNil(o.UtxoMaxAmount) {
		return true
	}

	return false
}

// SetUtxoMaxAmount gets a reference to the given int64 and assigns it to the UtxoMaxAmount field.
func (o *GetInfoResponse) SetUtxoMaxAmount(v int64) {
	o.UtxoMaxAmount = &v
}

// GetUtxoMinAmount returns the UtxoMinAmount field value if set, zero value otherwise.
func (o *GetInfoResponse) GetUtxoMinAmount() int64 {
	if o == nil || IsNil(o.UtxoMinAmount) {
		var ret int64
		return ret
	}
	return *o.UtxoMinAmount
}

// GetUtxoMinAmountOk returns a tuple with the UtxoMinAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetUtxoMinAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.UtxoMinAmount) {
		return nil, false
	}
	return o.UtxoMinAmount, true
}

// HasUtxoMinAmount returns a boolean if a field has been set.
func (o *GetInfoResponse) HasUtxoMinAmount() bool {
	if o != nil && !IsNil(o.UtxoMinAmount) {
		return true
	}

	return false
}

// SetUtxoMinAmount gets a reference to the given int64 and assigns it to the UtxoMinAmount field.
func (o *GetInfoResponse) SetUtxoMinAmount(v int64) {
	o.UtxoMinAmount = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GetInfoResponse) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GetInfoResponse) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GetInfoResponse) SetVersion(v string) {
	o.Version = &v
}

// GetVtxoMaxAmount returns the VtxoMaxAmount field value if set, zero value otherwise.
func (o *GetInfoResponse) GetVtxoMaxAmount() int64 {
	if o == nil || IsNil(o.VtxoMaxAmount) {
		var ret int64
		return ret
	}
	return *o.VtxoMaxAmount
}

// GetVtxoMaxAmountOk returns a tuple with the VtxoMaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetVtxoMaxAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.VtxoMaxAmount) {
		return nil, false
	}
	return o.VtxoMaxAmount, true
}

// HasVtxoMaxAmount returns a boolean if a field has been set.
func (o *GetInfoResponse) HasVtxoMaxAmount() bool {
	if o != nil && !IsNil(o.VtxoMaxAmount) {
		return true
	}

	return false
}

// SetVtxoMaxAmount gets a reference to the given int64 and assigns it to the VtxoMaxAmount field.
func (o *GetInfoResponse) SetVtxoMaxAmount(v int64) {
	o.VtxoMaxAmount = &v
}

// GetVtxoMinAmount returns the VtxoMinAmount field value if set, zero value otherwise.
func (o *GetInfoResponse) GetVtxoMinAmount() int64 {
	if o == nil || IsNil(o.VtxoMinAmount) {
		var ret int64
		return ret
	}
	return *o.VtxoMinAmount
}

// GetVtxoMinAmountOk returns a tuple with the VtxoMinAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInfoResponse) GetVtxoMinAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.VtxoMinAmount) {
		return nil, false
	}
	return o.VtxoMinAmount, true
}

// HasVtxoMinAmount returns a boolean if a field has been set.
func (o *GetInfoResponse) HasVtxoMinAmount() bool {
	if o != nil && !IsNil(o.VtxoMinAmount) {
		return true
	}

	return false
}

// SetVtxoMinAmount gets a reference to the given int64 and assigns it to the VtxoMinAmount field.
func (o *GetInfoResponse) SetVtxoMinAmount(v int64) {
	o.VtxoMinAmount = &v
}

func (o GetInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BoardingExitDelay) {
		toSerialize["boardingExitDelay"] = o.BoardingExitDelay
	}
	if !IsNil(o.CheckpointTapscript) {
		toSerialize["checkpointTapscript"] = o.CheckpointTapscript
	}
	if !IsNil(o.DeprecatedSigners) {
		toSerialize["deprecatedSigners"] = o.DeprecatedSigners
	}
	if !IsNil(o.Digest) {
		toSerialize["digest"] = o.Digest
	}
	if !IsNil(o.Dust) {
		toSerialize["dust"] = o.Dust
	}
	if !IsNil(o.Fees) {
		toSerialize["fees"] = o.Fees
	}
	if !IsNil(o.ForfeitAddress) {
		toSerialize["forfeitAddress"] = o.ForfeitAddress
	}
	if !IsNil(o.ForfeitPubkey) {
		toSerialize["forfeitPubkey"] = o.ForfeitPubkey
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.ScheduledSession) {
		toSerialize["scheduledSession"] = o.ScheduledSession
	}
	if !IsNil(o.ServiceStatus) {
		toSerialize["serviceStatus"] = o.ServiceStatus
	}
	if !IsNil(o.SessionDuration) {
		toSerialize["sessionDuration"] = o.SessionDuration
	}
	if !IsNil(o.SignerPubkey) {
		toSerialize["signerPubkey"] = o.SignerPubkey
	}
	if !IsNil(o.UnilateralExitDelay) {
		toSerialize["unilateralExitDelay"] = o.UnilateralExitDelay
	}
	if !IsNil(o.UtxoMaxAmount) {
		toSerialize["utxoMaxAmount"] = o.UtxoMaxAmount
	}
	if !IsNil(o.UtxoMinAmount) {
		toSerialize["utxoMinAmount"] = o.UtxoMinAmount
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.VtxoMaxAmount) {
		toSerialize["vtxoMaxAmount"] = o.VtxoMaxAmount
	}
	if !IsNil(o.VtxoMinAmount) {
		toSerialize["vtxoMinAmount"] = o.VtxoMinAmount
	}
	return toSerialize, nil
}

type NullableGetInfoResponse struct {
	value *GetInfoResponse
	isSet bool
}

func (v NullableGetInfoResponse) Get() *GetInfoResponse {
	return v.value
}

func (v *NullableGetInfoResponse) Set(val *GetInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInfoResponse(val *GetInfoResponse) *NullableGetInfoResponse {
	return &NullableGetInfoResponse{value: val, isSet: true}
}

func (v NullableGetInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


