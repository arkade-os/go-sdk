/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RegisterIntentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterIntentRequest{}

// RegisterIntentRequest struct for RegisterIntentRequest
type RegisterIntentRequest struct {
	// BIP322 signature embeds the outpoints to be spent and new ones to be created, as well as the the proof of funds.
	Intent *Bip322Signature `json:"intent,omitempty"`
}

// NewRegisterIntentRequest instantiates a new RegisterIntentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterIntentRequest() *RegisterIntentRequest {
	this := RegisterIntentRequest{}
	return &this
}

// NewRegisterIntentRequestWithDefaults instantiates a new RegisterIntentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterIntentRequestWithDefaults() *RegisterIntentRequest {
	this := RegisterIntentRequest{}
	return &this
}

// GetIntent returns the Intent field value if set, zero value otherwise.
func (o *RegisterIntentRequest) GetIntent() Bip322Signature {
	if o == nil || IsNil(o.Intent) {
		var ret Bip322Signature
		return ret
	}
	return *o.Intent
}

// GetIntentOk returns a tuple with the Intent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterIntentRequest) GetIntentOk() (*Bip322Signature, bool) {
	if o == nil || IsNil(o.Intent) {
		return nil, false
	}
	return o.Intent, true
}

// HasIntent returns a boolean if a field has been set.
func (o *RegisterIntentRequest) HasIntent() bool {
	if o != nil && !IsNil(o.Intent) {
		return true
	}

	return false
}

// SetIntent gets a reference to the given Bip322Signature and assigns it to the Intent field.
func (o *RegisterIntentRequest) SetIntent(v Bip322Signature) {
	o.Intent = &v
}

func (o RegisterIntentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterIntentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Intent) {
		toSerialize["intent"] = o.Intent
	}
	return toSerialize, nil
}

type NullableRegisterIntentRequest struct {
	value *RegisterIntentRequest
	isSet bool
}

func (v NullableRegisterIntentRequest) Get() *RegisterIntentRequest {
	return v.value
}

func (v *NullableRegisterIntentRequest) Set(val *RegisterIntentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterIntentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterIntentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterIntentRequest(val *RegisterIntentRequest) *NullableRegisterIntentRequest {
	return &NullableRegisterIntentRequest{value: val, isSet: true}
}

func (v NullableRegisterIntentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterIntentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


