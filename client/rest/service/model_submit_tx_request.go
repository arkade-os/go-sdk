/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SubmitTxRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubmitTxRequest{}

// SubmitTxRequest struct for SubmitTxRequest
type SubmitTxRequest struct {
		CheckpointTxs []string `json:"checkpointTxs,omitempty"`
		SignedArkTx *string `json:"signedArkTx,omitempty"`
}

// NewSubmitTxRequest instantiates a new SubmitTxRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitTxRequest() *SubmitTxRequest {
	this := SubmitTxRequest{}
	return &this
}

// NewSubmitTxRequestWithDefaults instantiates a new SubmitTxRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitTxRequestWithDefaults() *SubmitTxRequest {
	this := SubmitTxRequest{}
	return &this
}

// GetCheckpointTxs returns the CheckpointTxs field value if set, zero value otherwise.
func (o *SubmitTxRequest) GetCheckpointTxs() []string {
	if o == nil || IsNil(o.CheckpointTxs) {
		var ret []string
		return ret
	}
	return o.CheckpointTxs
}

// GetCheckpointTxsOk returns a tuple with the CheckpointTxs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitTxRequest) GetCheckpointTxsOk() ([]string, bool) {
	if o == nil || IsNil(o.CheckpointTxs) {
		return nil, false
	}
	return o.CheckpointTxs, true
}

// HasCheckpointTxs returns a boolean if a field has been set.
func (o *SubmitTxRequest) HasCheckpointTxs() bool {
	if o != nil && !IsNil(o.CheckpointTxs) {
		return true
	}

	return false
}

// SetCheckpointTxs gets a reference to the given []string and assigns it to the CheckpointTxs field.
func (o *SubmitTxRequest) SetCheckpointTxs(v []string) {
	o.CheckpointTxs = v
}

// GetSignedArkTx returns the SignedArkTx field value if set, zero value otherwise.
func (o *SubmitTxRequest) GetSignedArkTx() string {
	if o == nil || IsNil(o.SignedArkTx) {
		var ret string
		return ret
	}
	return *o.SignedArkTx
}

// GetSignedArkTxOk returns a tuple with the SignedArkTx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitTxRequest) GetSignedArkTxOk() (*string, bool) {
	if o == nil || IsNil(o.SignedArkTx) {
		return nil, false
	}
	return o.SignedArkTx, true
}

// HasSignedArkTx returns a boolean if a field has been set.
func (o *SubmitTxRequest) HasSignedArkTx() bool {
	if o != nil && !IsNil(o.SignedArkTx) {
		return true
	}

	return false
}

// SetSignedArkTx gets a reference to the given string and assigns it to the SignedArkTx field.
func (o *SubmitTxRequest) SetSignedArkTx(v string) {
	o.SignedArkTx = &v
}

func (o SubmitTxRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubmitTxRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CheckpointTxs) {
		toSerialize["checkpointTxs"] = o.CheckpointTxs
	}
	if !IsNil(o.SignedArkTx) {
		toSerialize["signedArkTx"] = o.SignedArkTx
	}
	return toSerialize, nil
}

type NullableSubmitTxRequest struct {
	value *SubmitTxRequest
	isSet bool
}

func (v NullableSubmitTxRequest) Get() *SubmitTxRequest {
	return v.value
}

func (v *NullableSubmitTxRequest) Set(val *SubmitTxRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitTxRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitTxRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitTxRequest(val *SubmitTxRequest) *NullableSubmitTxRequest {
	return &NullableSubmitTxRequest{value: val, isSet: true}
}

func (v NullableSubmitTxRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitTxRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


