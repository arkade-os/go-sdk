/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TxNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TxNotification{}

// TxNotification struct for TxNotification
type TxNotification struct {
	// This field is set only in case of offchain tx.  key: outpoint, value: checkpoint txid
	CheckpointTxs map[string]TxData `json:"checkpointTxs,omitempty"`
	SpendableVtxos []Vtxo `json:"spendableVtxos,omitempty"`
	SpentVtxos []Vtxo `json:"spentVtxos,omitempty"`
	Tx *string `json:"tx,omitempty"`
	Txid *string `json:"txid,omitempty"`
}

// NewTxNotification instantiates a new TxNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTxNotification() *TxNotification {
	this := TxNotification{}
	return &this
}

// NewTxNotificationWithDefaults instantiates a new TxNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTxNotificationWithDefaults() *TxNotification {
	this := TxNotification{}
	return &this
}

// GetCheckpointTxs returns the CheckpointTxs field value if set, zero value otherwise.
func (o *TxNotification) GetCheckpointTxs() map[string]TxData {
	if o == nil || IsNil(o.CheckpointTxs) {
		var ret map[string]TxData
		return ret
	}
	return o.CheckpointTxs
}

// GetCheckpointTxsOk returns a tuple with the CheckpointTxs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxNotification) GetCheckpointTxsOk() (map[string]TxData, bool) {
	if o == nil || IsNil(o.CheckpointTxs) {
		return map[string]TxData{}, false
	}
	return o.CheckpointTxs, true
}

// HasCheckpointTxs returns a boolean if a field has been set.
func (o *TxNotification) HasCheckpointTxs() bool {
	if o != nil && !IsNil(o.CheckpointTxs) {
		return true
	}

	return false
}

// SetCheckpointTxs gets a reference to the given map[string]TxData and assigns it to the CheckpointTxs field.
func (o *TxNotification) SetCheckpointTxs(v map[string]TxData) {
	o.CheckpointTxs = v
}

// GetSpendableVtxos returns the SpendableVtxos field value if set, zero value otherwise.
func (o *TxNotification) GetSpendableVtxos() []Vtxo {
	if o == nil || IsNil(o.SpendableVtxos) {
		var ret []Vtxo
		return ret
	}
	return o.SpendableVtxos
}

// GetSpendableVtxosOk returns a tuple with the SpendableVtxos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxNotification) GetSpendableVtxosOk() ([]Vtxo, bool) {
	if o == nil || IsNil(o.SpendableVtxos) {
		return nil, false
	}
	return o.SpendableVtxos, true
}

// HasSpendableVtxos returns a boolean if a field has been set.
func (o *TxNotification) HasSpendableVtxos() bool {
	if o != nil && !IsNil(o.SpendableVtxos) {
		return true
	}

	return false
}

// SetSpendableVtxos gets a reference to the given []Vtxo and assigns it to the SpendableVtxos field.
func (o *TxNotification) SetSpendableVtxos(v []Vtxo) {
	o.SpendableVtxos = v
}

// GetSpentVtxos returns the SpentVtxos field value if set, zero value otherwise.
func (o *TxNotification) GetSpentVtxos() []Vtxo {
	if o == nil || IsNil(o.SpentVtxos) {
		var ret []Vtxo
		return ret
	}
	return o.SpentVtxos
}

// GetSpentVtxosOk returns a tuple with the SpentVtxos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxNotification) GetSpentVtxosOk() ([]Vtxo, bool) {
	if o == nil || IsNil(o.SpentVtxos) {
		return nil, false
	}
	return o.SpentVtxos, true
}

// HasSpentVtxos returns a boolean if a field has been set.
func (o *TxNotification) HasSpentVtxos() bool {
	if o != nil && !IsNil(o.SpentVtxos) {
		return true
	}

	return false
}

// SetSpentVtxos gets a reference to the given []Vtxo and assigns it to the SpentVtxos field.
func (o *TxNotification) SetSpentVtxos(v []Vtxo) {
	o.SpentVtxos = v
}

// GetTx returns the Tx field value if set, zero value otherwise.
func (o *TxNotification) GetTx() string {
	if o == nil || IsNil(o.Tx) {
		var ret string
		return ret
	}
	return *o.Tx
}

// GetTxOk returns a tuple with the Tx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxNotification) GetTxOk() (*string, bool) {
	if o == nil || IsNil(o.Tx) {
		return nil, false
	}
	return o.Tx, true
}

// HasTx returns a boolean if a field has been set.
func (o *TxNotification) HasTx() bool {
	if o != nil && !IsNil(o.Tx) {
		return true
	}

	return false
}

// SetTx gets a reference to the given string and assigns it to the Tx field.
func (o *TxNotification) SetTx(v string) {
	o.Tx = &v
}

// GetTxid returns the Txid field value if set, zero value otherwise.
func (o *TxNotification) GetTxid() string {
	if o == nil || IsNil(o.Txid) {
		var ret string
		return ret
	}
	return *o.Txid
}

// GetTxidOk returns a tuple with the Txid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxNotification) GetTxidOk() (*string, bool) {
	if o == nil || IsNil(o.Txid) {
		return nil, false
	}
	return o.Txid, true
}

// HasTxid returns a boolean if a field has been set.
func (o *TxNotification) HasTxid() bool {
	if o != nil && !IsNil(o.Txid) {
		return true
	}

	return false
}

// SetTxid gets a reference to the given string and assigns it to the Txid field.
func (o *TxNotification) SetTxid(v string) {
	o.Txid = &v
}

func (o TxNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TxNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CheckpointTxs) {
		toSerialize["checkpointTxs"] = o.CheckpointTxs
	}
	if !IsNil(o.SpendableVtxos) {
		toSerialize["spendableVtxos"] = o.SpendableVtxos
	}
	if !IsNil(o.SpentVtxos) {
		toSerialize["spentVtxos"] = o.SpentVtxos
	}
	if !IsNil(o.Tx) {
		toSerialize["tx"] = o.Tx
	}
	if !IsNil(o.Txid) {
		toSerialize["txid"] = o.Txid
	}
	return toSerialize, nil
}

type NullableTxNotification struct {
	value *TxNotification
	isSet bool
}

func (v NullableTxNotification) Get() *TxNotification {
	return v.value
}

func (v *NullableTxNotification) Set(val *TxNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableTxNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableTxNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTxNotification(val *TxNotification) *NullableTxNotification {
	return &NullableTxNotification{value: val, isSet: true}
}

func (v NullableTxNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTxNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


