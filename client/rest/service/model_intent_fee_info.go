/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IntentFeeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntentFeeInfo{}

// IntentFeeInfo struct for IntentFeeInfo
type IntentFeeInfo struct {
		OffchainInput *string `json:"offchainInput,omitempty"`
		OffchainOutput *string `json:"offchainOutput,omitempty"`
		OnchainInput *string `json:"onchainInput,omitempty"`
		OnchainOutput *string `json:"onchainOutput,omitempty"`
}

// NewIntentFeeInfo instantiates a new IntentFeeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntentFeeInfo() *IntentFeeInfo {
	this := IntentFeeInfo{}
	return &this
}

// NewIntentFeeInfoWithDefaults instantiates a new IntentFeeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntentFeeInfoWithDefaults() *IntentFeeInfo {
	this := IntentFeeInfo{}
	return &this
}

// GetOffchainInput returns the OffchainInput field value if set, zero value otherwise.
func (o *IntentFeeInfo) GetOffchainInput() string {
	if o == nil || IsNil(o.OffchainInput) {
		var ret string
		return ret
	}
	return *o.OffchainInput
}

// GetOffchainInputOk returns a tuple with the OffchainInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntentFeeInfo) GetOffchainInputOk() (*string, bool) {
	if o == nil || IsNil(o.OffchainInput) {
		return nil, false
	}
	return o.OffchainInput, true
}

// HasOffchainInput returns a boolean if a field has been set.
func (o *IntentFeeInfo) HasOffchainInput() bool {
	if o != nil && !IsNil(o.OffchainInput) {
		return true
	}

	return false
}

// SetOffchainInput gets a reference to the given string and assigns it to the OffchainInput field.
func (o *IntentFeeInfo) SetOffchainInput(v string) {
	o.OffchainInput = &v
}

// GetOffchainOutput returns the OffchainOutput field value if set, zero value otherwise.
func (o *IntentFeeInfo) GetOffchainOutput() string {
	if o == nil || IsNil(o.OffchainOutput) {
		var ret string
		return ret
	}
	return *o.OffchainOutput
}

// GetOffchainOutputOk returns a tuple with the OffchainOutput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntentFeeInfo) GetOffchainOutputOk() (*string, bool) {
	if o == nil || IsNil(o.OffchainOutput) {
		return nil, false
	}
	return o.OffchainOutput, true
}

// HasOffchainOutput returns a boolean if a field has been set.
func (o *IntentFeeInfo) HasOffchainOutput() bool {
	if o != nil && !IsNil(o.OffchainOutput) {
		return true
	}

	return false
}

// SetOffchainOutput gets a reference to the given string and assigns it to the OffchainOutput field.
func (o *IntentFeeInfo) SetOffchainOutput(v string) {
	o.OffchainOutput = &v
}

// GetOnchainInput returns the OnchainInput field value if set, zero value otherwise.
func (o *IntentFeeInfo) GetOnchainInput() string {
	if o == nil || IsNil(o.OnchainInput) {
		var ret string
		return ret
	}
	return *o.OnchainInput
}

// GetOnchainInputOk returns a tuple with the OnchainInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntentFeeInfo) GetOnchainInputOk() (*string, bool) {
	if o == nil || IsNil(o.OnchainInput) {
		return nil, false
	}
	return o.OnchainInput, true
}

// HasOnchainInput returns a boolean if a field has been set.
func (o *IntentFeeInfo) HasOnchainInput() bool {
	if o != nil && !IsNil(o.OnchainInput) {
		return true
	}

	return false
}

// SetOnchainInput gets a reference to the given string and assigns it to the OnchainInput field.
func (o *IntentFeeInfo) SetOnchainInput(v string) {
	o.OnchainInput = &v
}

// GetOnchainOutput returns the OnchainOutput field value if set, zero value otherwise.
func (o *IntentFeeInfo) GetOnchainOutput() string {
	if o == nil || IsNil(o.OnchainOutput) {
		var ret string
		return ret
	}
	return *o.OnchainOutput
}

// GetOnchainOutputOk returns a tuple with the OnchainOutput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntentFeeInfo) GetOnchainOutputOk() (*string, bool) {
	if o == nil || IsNil(o.OnchainOutput) {
		return nil, false
	}
	return o.OnchainOutput, true
}

// HasOnchainOutput returns a boolean if a field has been set.
func (o *IntentFeeInfo) HasOnchainOutput() bool {
	if o != nil && !IsNil(o.OnchainOutput) {
		return true
	}

	return false
}

// SetOnchainOutput gets a reference to the given string and assigns it to the OnchainOutput field.
func (o *IntentFeeInfo) SetOnchainOutput(v string) {
	o.OnchainOutput = &v
}

func (o IntentFeeInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntentFeeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OffchainInput) {
		toSerialize["offchainInput"] = o.OffchainInput
	}
	if !IsNil(o.OffchainOutput) {
		toSerialize["offchainOutput"] = o.OffchainOutput
	}
	if !IsNil(o.OnchainInput) {
		toSerialize["onchainInput"] = o.OnchainInput
	}
	if !IsNil(o.OnchainOutput) {
		toSerialize["onchainOutput"] = o.OnchainOutput
	}
	return toSerialize, nil
}

type NullableIntentFeeInfo struct {
	value *IntentFeeInfo
	isSet bool
}

func (v NullableIntentFeeInfo) Get() *IntentFeeInfo {
	return v.value
}

func (v *NullableIntentFeeInfo) Set(val *IntentFeeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIntentFeeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIntentFeeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntentFeeInfo(val *IntentFeeInfo) *NullableIntentFeeInfo {
	return &NullableIntentFeeInfo{value: val, isSet: true}
}

func (v NullableIntentFeeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntentFeeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


