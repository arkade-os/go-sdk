/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetVirtualTxsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVirtualTxsRequest{}

// GetVirtualTxsRequest struct for GetVirtualTxsRequest
type GetVirtualTxsRequest struct {
		Page *IndexerPageRequest `json:"page,omitempty"`
		Txids []string `json:"txids,omitempty"`
}

// NewGetVirtualTxsRequest instantiates a new GetVirtualTxsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVirtualTxsRequest() *GetVirtualTxsRequest {
	this := GetVirtualTxsRequest{}
	return &this
}

// NewGetVirtualTxsRequestWithDefaults instantiates a new GetVirtualTxsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVirtualTxsRequestWithDefaults() *GetVirtualTxsRequest {
	this := GetVirtualTxsRequest{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *GetVirtualTxsRequest) GetPage() IndexerPageRequest {
	if o == nil || IsNil(o.Page) {
		var ret IndexerPageRequest
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVirtualTxsRequest) GetPageOk() (*IndexerPageRequest, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *GetVirtualTxsRequest) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given IndexerPageRequest and assigns it to the Page field.
func (o *GetVirtualTxsRequest) SetPage(v IndexerPageRequest) {
	o.Page = &v
}

// GetTxids returns the Txids field value if set, zero value otherwise.
func (o *GetVirtualTxsRequest) GetTxids() []string {
	if o == nil || IsNil(o.Txids) {
		var ret []string
		return ret
	}
	return o.Txids
}

// GetTxidsOk returns a tuple with the Txids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVirtualTxsRequest) GetTxidsOk() ([]string, bool) {
	if o == nil || IsNil(o.Txids) {
		return nil, false
	}
	return o.Txids, true
}

// HasTxids returns a boolean if a field has been set.
func (o *GetVirtualTxsRequest) HasTxids() bool {
	if o != nil && !IsNil(o.Txids) {
		return true
	}

	return false
}

// SetTxids gets a reference to the given []string and assigns it to the Txids field.
func (o *GetVirtualTxsRequest) SetTxids(v []string) {
	o.Txids = v
}

func (o GetVirtualTxsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVirtualTxsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Txids) {
		toSerialize["txids"] = o.Txids
	}
	return toSerialize, nil
}

type NullableGetVirtualTxsRequest struct {
	value *GetVirtualTxsRequest
	isSet bool
}

func (v NullableGetVirtualTxsRequest) Get() *GetVirtualTxsRequest {
	return v.value
}

func (v *NullableGetVirtualTxsRequest) Set(val *GetVirtualTxsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVirtualTxsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVirtualTxsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVirtualTxsRequest(val *GetVirtualTxsRequest) *NullableGetVirtualTxsRequest {
	return &NullableGetVirtualTxsRequest{value: val, isSet: true}
}

func (v NullableGetVirtualTxsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVirtualTxsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


