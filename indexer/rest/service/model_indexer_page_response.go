/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndexerPageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexerPageResponse{}

// IndexerPageResponse struct for IndexerPageResponse
type IndexerPageResponse struct {
	Current *int32 `json:"current,omitempty"`
	Next *int32 `json:"next,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewIndexerPageResponse instantiates a new IndexerPageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexerPageResponse() *IndexerPageResponse {
	this := IndexerPageResponse{}
	return &this
}

// NewIndexerPageResponseWithDefaults instantiates a new IndexerPageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexerPageResponseWithDefaults() *IndexerPageResponse {
	this := IndexerPageResponse{}
	return &this
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *IndexerPageResponse) GetCurrent() int32 {
	if o == nil || IsNil(o.Current) {
		var ret int32
		return ret
	}
	return *o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerPageResponse) GetCurrentOk() (*int32, bool) {
	if o == nil || IsNil(o.Current) {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *IndexerPageResponse) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given int32 and assigns it to the Current field.
func (o *IndexerPageResponse) SetCurrent(v int32) {
	o.Current = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *IndexerPageResponse) GetNext() int32 {
	if o == nil || IsNil(o.Next) {
		var ret int32
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerPageResponse) GetNextOk() (*int32, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *IndexerPageResponse) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given int32 and assigns it to the Next field.
func (o *IndexerPageResponse) SetNext(v int32) {
	o.Next = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *IndexerPageResponse) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerPageResponse) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *IndexerPageResponse) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *IndexerPageResponse) SetTotal(v int32) {
	o.Total = &v
}

func (o IndexerPageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexerPageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableIndexerPageResponse struct {
	value *IndexerPageResponse
	isSet bool
}

func (v NullableIndexerPageResponse) Get() *IndexerPageResponse {
	return v.value
}

func (v *NullableIndexerPageResponse) Set(val *IndexerPageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexerPageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexerPageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexerPageResponse(val *IndexerPageResponse) *NullableIndexerPageResponse {
	return &NullableIndexerPageResponse{value: val, isSet: true}
}

func (v NullableIndexerPageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexerPageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


