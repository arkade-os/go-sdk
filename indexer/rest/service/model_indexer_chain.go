/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndexerChain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexerChain{}

// IndexerChain struct for IndexerChain
type IndexerChain struct {
		ExpiresAt *int64 `json:"expiresAt,omitempty"`
	// txids of the transactions in the chain used as input of the current tx
		Spends []string `json:"spends,omitempty"`
		Txid *string `json:"txid,omitempty"`
		Type *IndexerChainedTxType `json:"type,omitempty"`
}

// NewIndexerChain instantiates a new IndexerChain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexerChain() *IndexerChain {
	this := IndexerChain{}
	var type_ IndexerChainedTxType = INDEXER_CHAINED_TX_TYPE_UNSPECIFIED
	this.Type = &type_
	return &this
}

// NewIndexerChainWithDefaults instantiates a new IndexerChain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexerChainWithDefaults() *IndexerChain {
	this := IndexerChain{}
	var type_ IndexerChainedTxType = INDEXER_CHAINED_TX_TYPE_UNSPECIFIED
	this.Type = &type_
	return &this
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *IndexerChain) GetExpiresAt() int64 {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret int64
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerChain) GetExpiresAtOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *IndexerChain) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given int64 and assigns it to the ExpiresAt field.
func (o *IndexerChain) SetExpiresAt(v int64) {
	o.ExpiresAt = &v
}

// GetSpends returns the Spends field value if set, zero value otherwise.
func (o *IndexerChain) GetSpends() []string {
	if o == nil || IsNil(o.Spends) {
		var ret []string
		return ret
	}
	return o.Spends
}

// GetSpendsOk returns a tuple with the Spends field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerChain) GetSpendsOk() ([]string, bool) {
	if o == nil || IsNil(o.Spends) {
		return nil, false
	}
	return o.Spends, true
}

// HasSpends returns a boolean if a field has been set.
func (o *IndexerChain) HasSpends() bool {
	if o != nil && !IsNil(o.Spends) {
		return true
	}

	return false
}

// SetSpends gets a reference to the given []string and assigns it to the Spends field.
func (o *IndexerChain) SetSpends(v []string) {
	o.Spends = v
}

// GetTxid returns the Txid field value if set, zero value otherwise.
func (o *IndexerChain) GetTxid() string {
	if o == nil || IsNil(o.Txid) {
		var ret string
		return ret
	}
	return *o.Txid
}

// GetTxidOk returns a tuple with the Txid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerChain) GetTxidOk() (*string, bool) {
	if o == nil || IsNil(o.Txid) {
		return nil, false
	}
	return o.Txid, true
}

// HasTxid returns a boolean if a field has been set.
func (o *IndexerChain) HasTxid() bool {
	if o != nil && !IsNil(o.Txid) {
		return true
	}

	return false
}

// SetTxid gets a reference to the given string and assigns it to the Txid field.
func (o *IndexerChain) SetTxid(v string) {
	o.Txid = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IndexerChain) GetType() IndexerChainedTxType {
	if o == nil || IsNil(o.Type) {
		var ret IndexerChainedTxType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerChain) GetTypeOk() (*IndexerChainedTxType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IndexerChain) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given IndexerChainedTxType and assigns it to the Type field.
func (o *IndexerChain) SetType(v IndexerChainedTxType) {
	o.Type = &v
}

func (o IndexerChain) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexerChain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	if !IsNil(o.Spends) {
		toSerialize["spends"] = o.Spends
	}
	if !IsNil(o.Txid) {
		toSerialize["txid"] = o.Txid
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableIndexerChain struct {
	value *IndexerChain
	isSet bool
}

func (v NullableIndexerChain) Get() *IndexerChain {
	return v.value
}

func (v *NullableIndexerChain) Set(val *IndexerChain) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexerChain) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexerChain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexerChain(val *IndexerChain) *NullableIndexerChain {
	return &NullableIndexerChain{value: val, isSet: true}
}

func (v NullableIndexerChain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexerChain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


