/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndexerTxData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexerTxData{}

// IndexerTxData struct for IndexerTxData
type IndexerTxData struct {
		Tx *string `json:"tx,omitempty"`
		Txid *string `json:"txid,omitempty"`
}

// NewIndexerTxData instantiates a new IndexerTxData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexerTxData() *IndexerTxData {
	this := IndexerTxData{}
	return &this
}

// NewIndexerTxDataWithDefaults instantiates a new IndexerTxData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexerTxDataWithDefaults() *IndexerTxData {
	this := IndexerTxData{}
	return &this
}

// GetTx returns the Tx field value if set, zero value otherwise.
func (o *IndexerTxData) GetTx() string {
	if o == nil || IsNil(o.Tx) {
		var ret string
		return ret
	}
	return *o.Tx
}

// GetTxOk returns a tuple with the Tx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerTxData) GetTxOk() (*string, bool) {
	if o == nil || IsNil(o.Tx) {
		return nil, false
	}
	return o.Tx, true
}

// HasTx returns a boolean if a field has been set.
func (o *IndexerTxData) HasTx() bool {
	if o != nil && !IsNil(o.Tx) {
		return true
	}

	return false
}

// SetTx gets a reference to the given string and assigns it to the Tx field.
func (o *IndexerTxData) SetTx(v string) {
	o.Tx = &v
}

// GetTxid returns the Txid field value if set, zero value otherwise.
func (o *IndexerTxData) GetTxid() string {
	if o == nil || IsNil(o.Txid) {
		var ret string
		return ret
	}
	return *o.Txid
}

// GetTxidOk returns a tuple with the Txid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerTxData) GetTxidOk() (*string, bool) {
	if o == nil || IsNil(o.Txid) {
		return nil, false
	}
	return o.Txid, true
}

// HasTxid returns a boolean if a field has been set.
func (o *IndexerTxData) HasTxid() bool {
	if o != nil && !IsNil(o.Txid) {
		return true
	}

	return false
}

// SetTxid gets a reference to the given string and assigns it to the Txid field.
func (o *IndexerTxData) SetTxid(v string) {
	o.Txid = &v
}

func (o IndexerTxData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexerTxData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tx) {
		toSerialize["tx"] = o.Tx
	}
	if !IsNil(o.Txid) {
		toSerialize["txid"] = o.Txid
	}
	return toSerialize, nil
}

type NullableIndexerTxData struct {
	value *IndexerTxData
	isSet bool
}

func (v NullableIndexerTxData) Get() *IndexerTxData {
	return v.value
}

func (v *NullableIndexerTxData) Set(val *IndexerTxData) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexerTxData) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexerTxData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexerTxData(val *IndexerTxData) *NullableIndexerTxData {
	return &NullableIndexerTxData{value: val, isSet: true}
}

func (v NullableIndexerTxData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexerTxData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


