/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndexerVtxo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexerVtxo{}

// IndexerVtxo struct for IndexerVtxo
type IndexerVtxo struct {
	Amount *int32 `json:"amount,omitempty"`
	ArkTxid *string `json:"arkTxid,omitempty"`
	CommitmentTxids []string `json:"commitmentTxids,omitempty"`
	CreatedAt *int64 `json:"createdAt,omitempty"`
	ExpiresAt *int64 `json:"expiresAt,omitempty"`
	IsPreconfirmed *bool `json:"isPreconfirmed,omitempty"`
	IsSpent *bool `json:"isSpent,omitempty"`
	IsSwept *bool `json:"isSwept,omitempty"`
	IsUnrolled *bool `json:"isUnrolled,omitempty"`
	Outpoint *IndexerOutpoint `json:"outpoint,omitempty"`
	Script *string `json:"script,omitempty"`
	SettledBy *string `json:"settledBy,omitempty"`
	SpentBy *string `json:"spentBy,omitempty"`
}

// NewIndexerVtxo instantiates a new IndexerVtxo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexerVtxo() *IndexerVtxo {
	this := IndexerVtxo{}
	return &this
}

// NewIndexerVtxoWithDefaults instantiates a new IndexerVtxo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexerVtxoWithDefaults() *IndexerVtxo {
	this := IndexerVtxo{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *IndexerVtxo) GetAmount() int32 {
	if o == nil || IsNil(o.Amount) {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *IndexerVtxo) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *IndexerVtxo) SetAmount(v int32) {
	o.Amount = &v
}

// GetArkTxid returns the ArkTxid field value if set, zero value otherwise.
func (o *IndexerVtxo) GetArkTxid() string {
	if o == nil || IsNil(o.ArkTxid) {
		var ret string
		return ret
	}
	return *o.ArkTxid
}

// GetArkTxidOk returns a tuple with the ArkTxid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetArkTxidOk() (*string, bool) {
	if o == nil || IsNil(o.ArkTxid) {
		return nil, false
	}
	return o.ArkTxid, true
}

// HasArkTxid returns a boolean if a field has been set.
func (o *IndexerVtxo) HasArkTxid() bool {
	if o != nil && !IsNil(o.ArkTxid) {
		return true
	}

	return false
}

// SetArkTxid gets a reference to the given string and assigns it to the ArkTxid field.
func (o *IndexerVtxo) SetArkTxid(v string) {
	o.ArkTxid = &v
}

// GetCommitmentTxids returns the CommitmentTxids field value if set, zero value otherwise.
func (o *IndexerVtxo) GetCommitmentTxids() []string {
	if o == nil || IsNil(o.CommitmentTxids) {
		var ret []string
		return ret
	}
	return o.CommitmentTxids
}

// GetCommitmentTxidsOk returns a tuple with the CommitmentTxids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetCommitmentTxidsOk() ([]string, bool) {
	if o == nil || IsNil(o.CommitmentTxids) {
		return nil, false
	}
	return o.CommitmentTxids, true
}

// HasCommitmentTxids returns a boolean if a field has been set.
func (o *IndexerVtxo) HasCommitmentTxids() bool {
	if o != nil && !IsNil(o.CommitmentTxids) {
		return true
	}

	return false
}

// SetCommitmentTxids gets a reference to the given []string and assigns it to the CommitmentTxids field.
func (o *IndexerVtxo) SetCommitmentTxids(v []string) {
	o.CommitmentTxids = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *IndexerVtxo) GetCreatedAt() int64 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetCreatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *IndexerVtxo) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *IndexerVtxo) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *IndexerVtxo) GetExpiresAt() int64 {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret int64
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetExpiresAtOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *IndexerVtxo) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given int64 and assigns it to the ExpiresAt field.
func (o *IndexerVtxo) SetExpiresAt(v int64) {
	o.ExpiresAt = &v
}

// GetIsPreconfirmed returns the IsPreconfirmed field value if set, zero value otherwise.
func (o *IndexerVtxo) GetIsPreconfirmed() bool {
	if o == nil || IsNil(o.IsPreconfirmed) {
		var ret bool
		return ret
	}
	return *o.IsPreconfirmed
}

// GetIsPreconfirmedOk returns a tuple with the IsPreconfirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetIsPreconfirmedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPreconfirmed) {
		return nil, false
	}
	return o.IsPreconfirmed, true
}

// HasIsPreconfirmed returns a boolean if a field has been set.
func (o *IndexerVtxo) HasIsPreconfirmed() bool {
	if o != nil && !IsNil(o.IsPreconfirmed) {
		return true
	}

	return false
}

// SetIsPreconfirmed gets a reference to the given bool and assigns it to the IsPreconfirmed field.
func (o *IndexerVtxo) SetIsPreconfirmed(v bool) {
	o.IsPreconfirmed = &v
}

// GetIsSpent returns the IsSpent field value if set, zero value otherwise.
func (o *IndexerVtxo) GetIsSpent() bool {
	if o == nil || IsNil(o.IsSpent) {
		var ret bool
		return ret
	}
	return *o.IsSpent
}

// GetIsSpentOk returns a tuple with the IsSpent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetIsSpentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSpent) {
		return nil, false
	}
	return o.IsSpent, true
}

// HasIsSpent returns a boolean if a field has been set.
func (o *IndexerVtxo) HasIsSpent() bool {
	if o != nil && !IsNil(o.IsSpent) {
		return true
	}

	return false
}

// SetIsSpent gets a reference to the given bool and assigns it to the IsSpent field.
func (o *IndexerVtxo) SetIsSpent(v bool) {
	o.IsSpent = &v
}

// GetIsSwept returns the IsSwept field value if set, zero value otherwise.
func (o *IndexerVtxo) GetIsSwept() bool {
	if o == nil || IsNil(o.IsSwept) {
		var ret bool
		return ret
	}
	return *o.IsSwept
}

// GetIsSweptOk returns a tuple with the IsSwept field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetIsSweptOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSwept) {
		return nil, false
	}
	return o.IsSwept, true
}

// HasIsSwept returns a boolean if a field has been set.
func (o *IndexerVtxo) HasIsSwept() bool {
	if o != nil && !IsNil(o.IsSwept) {
		return true
	}

	return false
}

// SetIsSwept gets a reference to the given bool and assigns it to the IsSwept field.
func (o *IndexerVtxo) SetIsSwept(v bool) {
	o.IsSwept = &v
}

// GetIsUnrolled returns the IsUnrolled field value if set, zero value otherwise.
func (o *IndexerVtxo) GetIsUnrolled() bool {
	if o == nil || IsNil(o.IsUnrolled) {
		var ret bool
		return ret
	}
	return *o.IsUnrolled
}

// GetIsUnrolledOk returns a tuple with the IsUnrolled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetIsUnrolledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUnrolled) {
		return nil, false
	}
	return o.IsUnrolled, true
}

// HasIsUnrolled returns a boolean if a field has been set.
func (o *IndexerVtxo) HasIsUnrolled() bool {
	if o != nil && !IsNil(o.IsUnrolled) {
		return true
	}

	return false
}

// SetIsUnrolled gets a reference to the given bool and assigns it to the IsUnrolled field.
func (o *IndexerVtxo) SetIsUnrolled(v bool) {
	o.IsUnrolled = &v
}

// GetOutpoint returns the Outpoint field value if set, zero value otherwise.
func (o *IndexerVtxo) GetOutpoint() IndexerOutpoint {
	if o == nil || IsNil(o.Outpoint) {
		var ret IndexerOutpoint
		return ret
	}
	return *o.Outpoint
}

// GetOutpointOk returns a tuple with the Outpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetOutpointOk() (*IndexerOutpoint, bool) {
	if o == nil || IsNil(o.Outpoint) {
		return nil, false
	}
	return o.Outpoint, true
}

// HasOutpoint returns a boolean if a field has been set.
func (o *IndexerVtxo) HasOutpoint() bool {
	if o != nil && !IsNil(o.Outpoint) {
		return true
	}

	return false
}

// SetOutpoint gets a reference to the given IndexerOutpoint and assigns it to the Outpoint field.
func (o *IndexerVtxo) SetOutpoint(v IndexerOutpoint) {
	o.Outpoint = &v
}

// GetScript returns the Script field value if set, zero value otherwise.
func (o *IndexerVtxo) GetScript() string {
	if o == nil || IsNil(o.Script) {
		var ret string
		return ret
	}
	return *o.Script
}

// GetScriptOk returns a tuple with the Script field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetScriptOk() (*string, bool) {
	if o == nil || IsNil(o.Script) {
		return nil, false
	}
	return o.Script, true
}

// HasScript returns a boolean if a field has been set.
func (o *IndexerVtxo) HasScript() bool {
	if o != nil && !IsNil(o.Script) {
		return true
	}

	return false
}

// SetScript gets a reference to the given string and assigns it to the Script field.
func (o *IndexerVtxo) SetScript(v string) {
	o.Script = &v
}

// GetSettledBy returns the SettledBy field value if set, zero value otherwise.
func (o *IndexerVtxo) GetSettledBy() string {
	if o == nil || IsNil(o.SettledBy) {
		var ret string
		return ret
	}
	return *o.SettledBy
}

// GetSettledByOk returns a tuple with the SettledBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetSettledByOk() (*string, bool) {
	if o == nil || IsNil(o.SettledBy) {
		return nil, false
	}
	return o.SettledBy, true
}

// HasSettledBy returns a boolean if a field has been set.
func (o *IndexerVtxo) HasSettledBy() bool {
	if o != nil && !IsNil(o.SettledBy) {
		return true
	}

	return false
}

// SetSettledBy gets a reference to the given string and assigns it to the SettledBy field.
func (o *IndexerVtxo) SetSettledBy(v string) {
	o.SettledBy = &v
}

// GetSpentBy returns the SpentBy field value if set, zero value otherwise.
func (o *IndexerVtxo) GetSpentBy() string {
	if o == nil || IsNil(o.SpentBy) {
		var ret string
		return ret
	}
	return *o.SpentBy
}

// GetSpentByOk returns a tuple with the SpentBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerVtxo) GetSpentByOk() (*string, bool) {
	if o == nil || IsNil(o.SpentBy) {
		return nil, false
	}
	return o.SpentBy, true
}

// HasSpentBy returns a boolean if a field has been set.
func (o *IndexerVtxo) HasSpentBy() bool {
	if o != nil && !IsNil(o.SpentBy) {
		return true
	}

	return false
}

// SetSpentBy gets a reference to the given string and assigns it to the SpentBy field.
func (o *IndexerVtxo) SetSpentBy(v string) {
	o.SpentBy = &v
}

func (o IndexerVtxo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexerVtxo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ArkTxid) {
		toSerialize["arkTxid"] = o.ArkTxid
	}
	if !IsNil(o.CommitmentTxids) {
		toSerialize["commitmentTxids"] = o.CommitmentTxids
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	if !IsNil(o.IsPreconfirmed) {
		toSerialize["isPreconfirmed"] = o.IsPreconfirmed
	}
	if !IsNil(o.IsSpent) {
		toSerialize["isSpent"] = o.IsSpent
	}
	if !IsNil(o.IsSwept) {
		toSerialize["isSwept"] = o.IsSwept
	}
	if !IsNil(o.IsUnrolled) {
		toSerialize["isUnrolled"] = o.IsUnrolled
	}
	if !IsNil(o.Outpoint) {
		toSerialize["outpoint"] = o.Outpoint
	}
	if !IsNil(o.Script) {
		toSerialize["script"] = o.Script
	}
	if !IsNil(o.SettledBy) {
		toSerialize["settledBy"] = o.SettledBy
	}
	if !IsNil(o.SpentBy) {
		toSerialize["spentBy"] = o.SpentBy
	}
	return toSerialize, nil
}

type NullableIndexerVtxo struct {
	value *IndexerVtxo
	isSet bool
}

func (v NullableIndexerVtxo) Get() *IndexerVtxo {
	return v.value
}

func (v *NullableIndexerVtxo) Set(val *IndexerVtxo) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexerVtxo) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexerVtxo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexerVtxo(val *IndexerVtxo) *NullableIndexerVtxo {
	return &NullableIndexerVtxo{value: val, isSet: true}
}

func (v NullableIndexerVtxo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexerVtxo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


