/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TxData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TxData{}

// TxData struct for TxData
type TxData struct {
		Tx *string `json:"tx,omitempty"`
		Txid *string `json:"txid,omitempty"`
}

// NewTxData instantiates a new TxData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTxData() *TxData {
	this := TxData{}
	return &this
}

// NewTxDataWithDefaults instantiates a new TxData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTxDataWithDefaults() *TxData {
	this := TxData{}
	return &this
}

// GetTx returns the Tx field value if set, zero value otherwise.
func (o *TxData) GetTx() string {
	if o == nil || IsNil(o.Tx) {
		var ret string
		return ret
	}
	return *o.Tx
}

// GetTxOk returns a tuple with the Tx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxData) GetTxOk() (*string, bool) {
	if o == nil || IsNil(o.Tx) {
		return nil, false
	}
	return o.Tx, true
}

// HasTx returns a boolean if a field has been set.
func (o *TxData) HasTx() bool {
	if o != nil && !IsNil(o.Tx) {
		return true
	}

	return false
}

// SetTx gets a reference to the given string and assigns it to the Tx field.
func (o *TxData) SetTx(v string) {
	o.Tx = &v
}

// GetTxid returns the Txid field value if set, zero value otherwise.
func (o *TxData) GetTxid() string {
	if o == nil || IsNil(o.Txid) {
		var ret string
		return ret
	}
	return *o.Txid
}

// GetTxidOk returns a tuple with the Txid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxData) GetTxidOk() (*string, bool) {
	if o == nil || IsNil(o.Txid) {
		return nil, false
	}
	return o.Txid, true
}

// HasTxid returns a boolean if a field has been set.
func (o *TxData) HasTxid() bool {
	if o != nil && !IsNil(o.Txid) {
		return true
	}

	return false
}

// SetTxid gets a reference to the given string and assigns it to the Txid field.
func (o *TxData) SetTxid(v string) {
	o.Txid = &v
}

func (o TxData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TxData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tx) {
		toSerialize["tx"] = o.Tx
	}
	if !IsNil(o.Txid) {
		toSerialize["txid"] = o.Txid
	}
	return toSerialize, nil
}

type NullableTxData struct {
	value *TxData
	isSet bool
}

func (v NullableTxData) Get() *TxData {
	return v.value
}

func (v *NullableTxData) Set(val *TxData) {
	v.value = val
	v.isSet = true
}

func (v NullableTxData) IsSet() bool {
	return v.isSet
}

func (v *NullableTxData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTxData(val *TxData) *NullableTxData {
	return &NullableTxData{value: val, isSet: true}
}

func (v NullableTxData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTxData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


