/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SubscribeForScriptsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscribeForScriptsResponse{}

// SubscribeForScriptsResponse struct for SubscribeForScriptsResponse
type SubscribeForScriptsResponse struct {
	SubscriptionId *string `json:"subscriptionId,omitempty"`
}

// NewSubscribeForScriptsResponse instantiates a new SubscribeForScriptsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscribeForScriptsResponse() *SubscribeForScriptsResponse {
	this := SubscribeForScriptsResponse{}
	return &this
}

// NewSubscribeForScriptsResponseWithDefaults instantiates a new SubscribeForScriptsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscribeForScriptsResponseWithDefaults() *SubscribeForScriptsResponse {
	this := SubscribeForScriptsResponse{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *SubscribeForScriptsResponse) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscribeForScriptsResponse) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *SubscribeForScriptsResponse) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *SubscribeForScriptsResponse) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o SubscribeForScriptsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscribeForScriptsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	return toSerialize, nil
}

type NullableSubscribeForScriptsResponse struct {
	value *SubscribeForScriptsResponse
	isSet bool
}

func (v NullableSubscribeForScriptsResponse) Get() *SubscribeForScriptsResponse {
	return v.value
}

func (v *NullableSubscribeForScriptsResponse) Set(val *SubscribeForScriptsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscribeForScriptsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscribeForScriptsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscribeForScriptsResponse(val *SubscribeForScriptsResponse) *NullableSubscribeForScriptsResponse {
	return &NullableSubscribeForScriptsResponse{value: val, isSet: true}
}

func (v NullableSubscribeForScriptsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscribeForScriptsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


