/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetConnectorsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetConnectorsResponse{}

// GetConnectorsResponse struct for GetConnectorsResponse
type GetConnectorsResponse struct {
		Connectors []Node `json:"connectors,omitempty"`
		Page *PageResponse `json:"page,omitempty"`
}

// NewGetConnectorsResponse instantiates a new GetConnectorsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConnectorsResponse() *GetConnectorsResponse {
	this := GetConnectorsResponse{}
	return &this
}

// NewGetConnectorsResponseWithDefaults instantiates a new GetConnectorsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConnectorsResponseWithDefaults() *GetConnectorsResponse {
	this := GetConnectorsResponse{}
	return &this
}

// GetConnectors returns the Connectors field value if set, zero value otherwise.
func (o *GetConnectorsResponse) GetConnectors() []Node {
	if o == nil || IsNil(o.Connectors) {
		var ret []Node
		return ret
	}
	return o.Connectors
}

// GetConnectorsOk returns a tuple with the Connectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectorsResponse) GetConnectorsOk() ([]Node, bool) {
	if o == nil || IsNil(o.Connectors) {
		return nil, false
	}
	return o.Connectors, true
}

// HasConnectors returns a boolean if a field has been set.
func (o *GetConnectorsResponse) HasConnectors() bool {
	if o != nil && !IsNil(o.Connectors) {
		return true
	}

	return false
}

// SetConnectors gets a reference to the given []Node and assigns it to the Connectors field.
func (o *GetConnectorsResponse) SetConnectors(v []Node) {
	o.Connectors = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *GetConnectorsResponse) GetPage() PageResponse {
	if o == nil || IsNil(o.Page) {
		var ret PageResponse
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectorsResponse) GetPageOk() (*PageResponse, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *GetConnectorsResponse) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given PageResponse and assigns it to the Page field.
func (o *GetConnectorsResponse) SetPage(v PageResponse) {
	o.Page = &v
}

func (o GetConnectorsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetConnectorsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Connectors) {
		toSerialize["connectors"] = o.Connectors
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	return toSerialize, nil
}

type NullableGetConnectorsResponse struct {
	value *GetConnectorsResponse
	isSet bool
}

func (v NullableGetConnectorsResponse) Get() *GetConnectorsResponse {
	return v.value
}

func (v *NullableGetConnectorsResponse) Set(val *GetConnectorsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConnectorsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConnectorsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConnectorsResponse(val *GetConnectorsResponse) *NullableGetConnectorsResponse {
	return &NullableGetConnectorsResponse{value: val, isSet: true}
}

func (v NullableGetConnectorsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConnectorsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


