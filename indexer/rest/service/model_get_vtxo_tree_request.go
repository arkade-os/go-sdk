/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetVtxoTreeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVtxoTreeRequest{}

// GetVtxoTreeRequest struct for GetVtxoTreeRequest
type GetVtxoTreeRequest struct {
	BatchOutpoint *IndexerOutpoint `json:"batchOutpoint,omitempty"`
	Page *IndexerPageRequest `json:"page,omitempty"`
}

// NewGetVtxoTreeRequest instantiates a new GetVtxoTreeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVtxoTreeRequest() *GetVtxoTreeRequest {
	this := GetVtxoTreeRequest{}
	return &this
}

// NewGetVtxoTreeRequestWithDefaults instantiates a new GetVtxoTreeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVtxoTreeRequestWithDefaults() *GetVtxoTreeRequest {
	this := GetVtxoTreeRequest{}
	return &this
}

// GetBatchOutpoint returns the BatchOutpoint field value if set, zero value otherwise.
func (o *GetVtxoTreeRequest) GetBatchOutpoint() IndexerOutpoint {
	if o == nil || IsNil(o.BatchOutpoint) {
		var ret IndexerOutpoint
		return ret
	}
	return *o.BatchOutpoint
}

// GetBatchOutpointOk returns a tuple with the BatchOutpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVtxoTreeRequest) GetBatchOutpointOk() (*IndexerOutpoint, bool) {
	if o == nil || IsNil(o.BatchOutpoint) {
		return nil, false
	}
	return o.BatchOutpoint, true
}

// HasBatchOutpoint returns a boolean if a field has been set.
func (o *GetVtxoTreeRequest) HasBatchOutpoint() bool {
	if o != nil && !IsNil(o.BatchOutpoint) {
		return true
	}

	return false
}

// SetBatchOutpoint gets a reference to the given IndexerOutpoint and assigns it to the BatchOutpoint field.
func (o *GetVtxoTreeRequest) SetBatchOutpoint(v IndexerOutpoint) {
	o.BatchOutpoint = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *GetVtxoTreeRequest) GetPage() IndexerPageRequest {
	if o == nil || IsNil(o.Page) {
		var ret IndexerPageRequest
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVtxoTreeRequest) GetPageOk() (*IndexerPageRequest, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *GetVtxoTreeRequest) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given IndexerPageRequest and assigns it to the Page field.
func (o *GetVtxoTreeRequest) SetPage(v IndexerPageRequest) {
	o.Page = &v
}

func (o GetVtxoTreeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVtxoTreeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatchOutpoint) {
		toSerialize["batchOutpoint"] = o.BatchOutpoint
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	return toSerialize, nil
}

type NullableGetVtxoTreeRequest struct {
	value *GetVtxoTreeRequest
	isSet bool
}

func (v NullableGetVtxoTreeRequest) Get() *GetVtxoTreeRequest {
	return v.value
}

func (v *NullableGetVtxoTreeRequest) Set(val *GetVtxoTreeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVtxoTreeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVtxoTreeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVtxoTreeRequest(val *GetVtxoTreeRequest) *NullableGetVtxoTreeRequest {
	return &NullableGetVtxoTreeRequest{value: val, isSet: true}
}

func (v NullableGetVtxoTreeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVtxoTreeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


