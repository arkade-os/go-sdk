/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetVtxoTreeLeavesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVtxoTreeLeavesResponse{}

// GetVtxoTreeLeavesResponse struct for GetVtxoTreeLeavesResponse
type GetVtxoTreeLeavesResponse struct {
		Leaves []IndexerOutpoint `json:"leaves,omitempty"`
		Page *IndexerPageResponse `json:"page,omitempty"`
}

// NewGetVtxoTreeLeavesResponse instantiates a new GetVtxoTreeLeavesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVtxoTreeLeavesResponse() *GetVtxoTreeLeavesResponse {
	this := GetVtxoTreeLeavesResponse{}
	return &this
}

// NewGetVtxoTreeLeavesResponseWithDefaults instantiates a new GetVtxoTreeLeavesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVtxoTreeLeavesResponseWithDefaults() *GetVtxoTreeLeavesResponse {
	this := GetVtxoTreeLeavesResponse{}
	return &this
}

// GetLeaves returns the Leaves field value if set, zero value otherwise.
func (o *GetVtxoTreeLeavesResponse) GetLeaves() []IndexerOutpoint {
	if o == nil || IsNil(o.Leaves) {
		var ret []IndexerOutpoint
		return ret
	}
	return o.Leaves
}

// GetLeavesOk returns a tuple with the Leaves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVtxoTreeLeavesResponse) GetLeavesOk() ([]IndexerOutpoint, bool) {
	if o == nil || IsNil(o.Leaves) {
		return nil, false
	}
	return o.Leaves, true
}

// HasLeaves returns a boolean if a field has been set.
func (o *GetVtxoTreeLeavesResponse) HasLeaves() bool {
	if o != nil && !IsNil(o.Leaves) {
		return true
	}

	return false
}

// SetLeaves gets a reference to the given []IndexerOutpoint and assigns it to the Leaves field.
func (o *GetVtxoTreeLeavesResponse) SetLeaves(v []IndexerOutpoint) {
	o.Leaves = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *GetVtxoTreeLeavesResponse) GetPage() IndexerPageResponse {
	if o == nil || IsNil(o.Page) {
		var ret IndexerPageResponse
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVtxoTreeLeavesResponse) GetPageOk() (*IndexerPageResponse, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *GetVtxoTreeLeavesResponse) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given IndexerPageResponse and assigns it to the Page field.
func (o *GetVtxoTreeLeavesResponse) SetPage(v IndexerPageResponse) {
	o.Page = &v
}

func (o GetVtxoTreeLeavesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVtxoTreeLeavesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Leaves) {
		toSerialize["leaves"] = o.Leaves
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	return toSerialize, nil
}

type NullableGetVtxoTreeLeavesResponse struct {
	value *GetVtxoTreeLeavesResponse
	isSet bool
}

func (v NullableGetVtxoTreeLeavesResponse) Get() *GetVtxoTreeLeavesResponse {
	return v.value
}

func (v *NullableGetVtxoTreeLeavesResponse) Set(val *GetVtxoTreeLeavesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVtxoTreeLeavesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVtxoTreeLeavesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVtxoTreeLeavesResponse(val *GetVtxoTreeLeavesResponse) *NullableGetVtxoTreeLeavesResponse {
	return &NullableGetVtxoTreeLeavesResponse{value: val, isSet: true}
}

func (v NullableGetVtxoTreeLeavesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVtxoTreeLeavesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


