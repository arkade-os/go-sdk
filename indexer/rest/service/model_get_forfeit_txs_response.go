/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetForfeitTxsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetForfeitTxsResponse{}

// GetForfeitTxsResponse struct for GetForfeitTxsResponse
type GetForfeitTxsResponse struct {
	Page *IndexerPageResponse `json:"page,omitempty"`
	Txids []string `json:"txids,omitempty"`
}

// NewGetForfeitTxsResponse instantiates a new GetForfeitTxsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetForfeitTxsResponse() *GetForfeitTxsResponse {
	this := GetForfeitTxsResponse{}
	return &this
}

// NewGetForfeitTxsResponseWithDefaults instantiates a new GetForfeitTxsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetForfeitTxsResponseWithDefaults() *GetForfeitTxsResponse {
	this := GetForfeitTxsResponse{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *GetForfeitTxsResponse) GetPage() IndexerPageResponse {
	if o == nil || IsNil(o.Page) {
		var ret IndexerPageResponse
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetForfeitTxsResponse) GetPageOk() (*IndexerPageResponse, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *GetForfeitTxsResponse) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given IndexerPageResponse and assigns it to the Page field.
func (o *GetForfeitTxsResponse) SetPage(v IndexerPageResponse) {
	o.Page = &v
}

// GetTxids returns the Txids field value if set, zero value otherwise.
func (o *GetForfeitTxsResponse) GetTxids() []string {
	if o == nil || IsNil(o.Txids) {
		var ret []string
		return ret
	}
	return o.Txids
}

// GetTxidsOk returns a tuple with the Txids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetForfeitTxsResponse) GetTxidsOk() ([]string, bool) {
	if o == nil || IsNil(o.Txids) {
		return nil, false
	}
	return o.Txids, true
}

// HasTxids returns a boolean if a field has been set.
func (o *GetForfeitTxsResponse) HasTxids() bool {
	if o != nil && !IsNil(o.Txids) {
		return true
	}

	return false
}

// SetTxids gets a reference to the given []string and assigns it to the Txids field.
func (o *GetForfeitTxsResponse) SetTxids(v []string) {
	o.Txids = v
}

func (o GetForfeitTxsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetForfeitTxsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Txids) {
		toSerialize["txids"] = o.Txids
	}
	return toSerialize, nil
}

type NullableGetForfeitTxsResponse struct {
	value *GetForfeitTxsResponse
	isSet bool
}

func (v NullableGetForfeitTxsResponse) Get() *GetForfeitTxsResponse {
	return v.value
}

func (v *NullableGetForfeitTxsResponse) Set(val *GetForfeitTxsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetForfeitTxsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetForfeitTxsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetForfeitTxsResponse(val *GetForfeitTxsResponse) *NullableGetForfeitTxsResponse {
	return &NullableGetForfeitTxsResponse{value: val, isSet: true}
}

func (v NullableGetForfeitTxsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetForfeitTxsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


